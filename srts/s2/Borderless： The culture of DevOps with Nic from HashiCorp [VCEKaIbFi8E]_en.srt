1
00:00:00,000 --> 00:00:16,440
Welcome to Ugrodje Framework, or Ugrodje in Slovenian.

2
00:00:16,440 --> 00:00:20,360
We have a new episode of Borderless.

3
00:00:20,360 --> 00:00:22,879
So Borderless, we host international speakers.

4
00:00:22,879 --> 00:00:23,879
We speak in English.

5
00:00:23,879 --> 00:00:28,000
Ugrodje is a Slovenian tech dev podcast.

6
00:00:28,000 --> 00:00:32,279
I hope you know that by now.

7
00:00:32,279 --> 00:00:38,240
And today we have a special guest, Nick Jackson, Principal Developer Advocate at HashiCorp.

8
00:00:38,240 --> 00:00:39,240
Welcome to Ugrodje.

9
00:00:39,240 --> 00:00:40,240
Thank you very much.

10
00:00:40,240 --> 00:00:45,880
And you should mention where we are sitting right now, because this is not our usual place

11
00:00:45,880 --> 00:00:48,080
where we record.

12
00:00:48,080 --> 00:00:53,759
So today you won't hear any trains that you usually do, or every emergency vehicles driving

13
00:00:53,759 --> 00:00:54,759
by.

14
00:00:54,759 --> 00:01:01,360
We are here at Devs Days Ljubljana, we are at FRI, so the Faculty of Informatics and

15
00:01:01,360 --> 00:01:04,000
Computer Science.

16
00:01:04,000 --> 00:01:06,519
So yeah, it's a great venue.

17
00:01:06,519 --> 00:01:11,360
We decided not to close ourselves into a room super quietly, so you can enjoy some noise

18
00:01:11,360 --> 00:01:12,360
in the background.

19
00:01:12,360 --> 00:01:18,239
Yeah, but if you listened to the previous episode, we had like similar situations.

20
00:01:18,239 --> 00:01:22,040
So like this is like the new setting right now.

21
00:01:22,040 --> 00:01:23,040
Yeah.

22
00:01:23,040 --> 00:01:24,800
Our technicians are actually amazing.

23
00:01:24,800 --> 00:01:29,320
They're doing some black magic, no fun intended.

24
00:01:29,320 --> 00:01:34,400
And they're basically just erasing every noisy thing in the background, or at least as much

25
00:01:34,400 --> 00:01:35,400
as they can do.

26
00:01:35,400 --> 00:01:36,400
Nice.

27
00:01:36,400 --> 00:01:37,400
Yeah.

28
00:01:37,400 --> 00:01:39,080
How are you doing, Nick?

29
00:01:39,080 --> 00:01:40,080
I'm very well.

30
00:01:40,080 --> 00:01:42,080
And you both well as well, I hope?

31
00:01:42,080 --> 00:01:43,080
Yeah.

32
00:01:43,080 --> 00:01:44,080
Yeah.

33
00:01:44,080 --> 00:01:48,599
So today we are both, our team from Ugrodje is Andras, and I'm also Andras.

34
00:01:48,599 --> 00:01:50,239
We have a bunch of folks here.

35
00:01:50,440 --> 00:01:53,160
And if somebody is missing Otto, he's there.

36
00:01:53,160 --> 00:01:54,160
Yeah.

37
00:01:54,160 --> 00:01:55,160
Yeah.

38
00:01:55,160 --> 00:01:56,160
Yeah.

39
00:01:56,160 --> 00:02:00,080
Our producer with a nice smile.

40
00:02:00,080 --> 00:02:02,320
Yeah.

41
00:02:02,320 --> 00:02:04,760
Should we jump in?

42
00:02:04,760 --> 00:02:13,639
So now we're here at DevOps Days Ljubljana.

43
00:02:13,639 --> 00:02:23,800
And so today's episode is going to be more of discussing the DevOps culture, the hype.

44
00:02:23,800 --> 00:02:27,619
Are we still in the hype phase?

45
00:02:27,619 --> 00:02:32,520
And everything related to whether this is like culture, whether these are tooling that

46
00:02:32,520 --> 00:02:38,199
is sort of a byproduct that eventually happened.

47
00:02:38,199 --> 00:02:49,320
And I don't know where should start, maybe giving you, leaving you the hard question.

48
00:02:49,320 --> 00:02:58,080
I'm assuming that this is not your first DevOps Days in general, that you've been with your

49
00:02:58,080 --> 00:03:04,600
professional career, also with HashiCorp, supporting this kind of events and so on.

50
00:03:04,600 --> 00:03:14,839
So how do you see like maybe, I don't know, 10 years ago, and compare it to where we stand

51
00:03:14,839 --> 00:03:15,839
now?

52
00:03:15,839 --> 00:03:18,960
With regard to, well, so this is actually my first DevOps Days.

53
00:03:18,960 --> 00:03:20,600
I can't believe it.

54
00:03:20,600 --> 00:03:22,880
But I've been doing this role for nearly seven years.

55
00:03:22,880 --> 00:03:27,899
I've never spoken at a DevOps Days, and I don't know why, but I've just never done it.

56
00:03:27,899 --> 00:03:31,720
So I'm actually really excited to be here.

57
00:03:31,720 --> 00:03:35,720
I think DevOps is growing from strength to strength as a kind of a first thing.

58
00:03:35,720 --> 00:03:41,960
So like when I first came across the term, which was probably around 10 years or so,

59
00:03:41,960 --> 00:03:47,520
yeah, around about maybe a little more, but I think DevOps at the time was about trying

60
00:03:47,520 --> 00:03:53,440
to drive that shift from just sort of system administration, but trying to get more involvement.

61
00:03:53,440 --> 00:03:57,039
And I think we're slowly getting there.

62
00:03:57,039 --> 00:03:59,440
I mean, it's taken a long time, but I look at my background.

63
00:03:59,679 --> 00:04:02,720
So my background, I'm an application developer.

64
00:04:02,720 --> 00:04:04,720
I've run engineering teams.

65
00:04:04,720 --> 00:04:10,679
I am literally the sort of person that you would not want anywhere near a server, because

66
00:04:10,679 --> 00:04:16,200
I will do things in a very specific developer's way, which is root credentials for everything

67
00:04:16,200 --> 00:04:21,320
and chmod 777, right?

68
00:04:21,320 --> 00:04:26,359
But I think the thing for me is that, and I hope I'm the perfect example of this, is

69
00:04:26,359 --> 00:04:33,839
that I see the benefit hugely in the DevOps culture, because I've seen the benefits firsthand.

70
00:04:33,839 --> 00:04:39,079
And for me, I was always interested in the sort of system admin side and what's going

71
00:04:39,079 --> 00:04:43,320
on with the infrastructure, because I wanted to help to get that to move forward, because

72
00:04:43,320 --> 00:04:46,200
I want my applications to get into production.

73
00:04:46,200 --> 00:04:51,399
I want my production environment to be running smoothly, because nobody likes getting up.

74
00:04:51,440 --> 00:04:57,880
So by taking an interest in the kind of the operational side of things, then I think that

75
00:04:57,880 --> 00:04:59,160
really helps.

76
00:04:59,160 --> 00:05:00,839
And then you look at it from the other side as well.

77
00:05:00,839 --> 00:05:05,559
So from an operations person, by an operational side of things, taking an interest in the

78
00:05:05,559 --> 00:05:12,519
application development, understanding some of the constraints and the technical limitations

79
00:05:12,519 --> 00:05:16,720
of the application, it helps you to build better infrastructure.

80
00:05:17,119 --> 00:05:22,799
And that kind of mesh and that sort of culture, I think is really, really, really, really

81
00:05:22,799 --> 00:05:24,000
helping us.

82
00:05:24,000 --> 00:05:27,679
So I'm pleased to see that things are moving along.

83
00:05:27,679 --> 00:05:36,600
I have a worry, and I have a worry that what we've seen, I think, emerging in the last

84
00:05:36,600 --> 00:05:40,320
12 months is I hear a lot of platform engineering.

85
00:05:40,320 --> 00:05:43,119
And I hear this is a lot of, you know, in terminology.

86
00:05:43,119 --> 00:05:50,720
Now, I appreciate why platform engineering as a thing exists, because people are increasingly

87
00:05:50,720 --> 00:05:52,720
needing these complicated systems.

88
00:05:52,720 --> 00:05:57,920
So therefore, we're kind of rather than kind of each individual silo building their own

89
00:05:57,920 --> 00:06:01,799
systems, they're trying to kind of centralize that as a capability.

90
00:06:01,799 --> 00:06:08,399
The thing that I worry about platform engineering is that the developers who had been getting

91
00:06:08,399 --> 00:06:13,100
really good at integrating with an operational side of things, getting involved with provisioning

92
00:06:13,100 --> 00:06:16,940
infrastructure, deploying their own code, is now going to go back to the way that they

93
00:06:16,940 --> 00:06:21,459
were 10 years ago and start thinking, not my job anymore, not my problem.

94
00:06:21,459 --> 00:06:24,059
And I think that is a worry for me.

95
00:06:24,059 --> 00:06:25,059
I don't know if that's happening.

96
00:06:25,059 --> 00:06:31,619
I don't know if it will happen, but it feels, I think labels are very powerful and in some

97
00:06:31,619 --> 00:06:33,500
ways dangerous, dangerous thing.

98
00:06:33,500 --> 00:06:37,420
I don't know what you guys think about that.

99
00:06:37,500 --> 00:06:47,660
I've seen like in last decade, I see similar to the point that this is sort of become nice

100
00:06:47,660 --> 00:06:54,260
to have, let's talk about it, let's like break all the silos and work together.

101
00:06:54,260 --> 00:07:03,339
But in the end, we are still struggling with similar things as before.

102
00:07:03,339 --> 00:07:10,220
And yeah, like there still are labels and sort of like, this is not my job at the end

103
00:07:10,220 --> 00:07:11,500
of the day.

104
00:07:11,500 --> 00:07:20,220
So I'm sort of also worried whether, are we still like preaching this sort of a cult

105
00:07:20,220 --> 00:07:28,399
or we are making actual like improvement in, let's say development on operation stuff.

106
00:07:28,399 --> 00:07:35,760
So I should also stand with this like more worried side, no matter that I'm no longer

107
00:07:35,760 --> 00:07:38,200
so much involved in this culture.

108
00:07:38,200 --> 00:07:45,440
Maybe Andras could like fill me in his perspective that like what he sees.

109
00:07:45,440 --> 00:07:58,119
Yeah, I would say it this way, like it's, everybody wants to be as good as the big

110
00:07:58,119 --> 00:07:59,399
boys, right?

111
00:07:59,399 --> 00:08:05,279
And if you want to be as good as big companies, even if you're maybe smaller or a startup,

112
00:08:05,279 --> 00:08:07,660
you want to do things proper.

113
00:08:07,660 --> 00:08:13,880
And once you want to do the things proper, you need to specialize in technologies.

114
00:08:13,880 --> 00:08:18,160
And the thing that I'm seeing is there's, for example, when it comes to Kubernetes,

115
00:08:18,160 --> 00:08:25,799
it's a great framework and a tool, but you need a super dedicated person to manage that.

116
00:08:26,000 --> 00:08:31,640
If we are talking about intermediate level of people that are maybe five years in their

117
00:08:31,640 --> 00:08:35,200
career, so it's not, Kubernetes is just another technology.

118
00:08:35,200 --> 00:08:36,880
They need to focus on that.

119
00:08:36,880 --> 00:08:42,239
And then you are starting to lose this contact when it comes just to, hey, we want to provide

120
00:08:42,239 --> 00:08:43,239
business value.

121
00:08:43,239 --> 00:08:47,719
Let's just create a simple, I don't know, Ansible pipeline that will do the job and

122
00:08:47,719 --> 00:08:51,000
everybody will understand.

123
00:08:51,760 --> 00:08:59,359
Which I think it's manageable by the whole team or just by developers.

124
00:08:59,359 --> 00:09:06,000
But when it comes to the technologies that really the big companies are using, and it

125
00:09:06,000 --> 00:09:11,919
might be a bit complex for the most of the team, then you're having basically this disconnect

126
00:09:11,919 --> 00:09:17,080
because somebody really specialized or something, and it's hard to deploy.

127
00:09:17,080 --> 00:09:19,280
And then you get this gap.

128
00:09:19,320 --> 00:09:24,840
I think that basically people have this fear of missing out or looking at social media,

129
00:09:24,840 --> 00:09:28,119
what is fancy, and it might be super overcomplicated for them.

130
00:09:28,119 --> 00:09:29,679
I don't know if you share the same thoughts.

131
00:09:29,679 --> 00:09:30,679
Yeah.

132
00:09:30,679 --> 00:09:35,719
I mean, I remember the Kelsey Hightower when he kind of did his own meme where he was like,

133
00:09:35,719 --> 00:09:38,719
you know, hey, I'm going to deploy my blog to Kubernetes.

134
00:09:38,719 --> 00:09:43,559
And I think that's a sort of an appreciable problem.

135
00:09:43,559 --> 00:09:50,239
I think in general, Kubernetes sort of solves a problem that we have, which is that we need

136
00:09:50,239 --> 00:09:56,200
to run these smaller instances of applications across a distributed environment.

137
00:09:56,200 --> 00:09:59,159
And with anything like that, it comes complexity.

138
00:09:59,159 --> 00:10:03,960
I kind of think as well, to your point around sort of people learning, it can actually be

139
00:10:03,960 --> 00:10:04,960
really difficult.

140
00:10:04,960 --> 00:10:12,039
So when I started out my career, nearly, well, I graduated nearly 30 years ago, but my first

141
00:10:12,039 --> 00:10:17,359
real job when I was working in the internet, and I built a website for Formula One.

142
00:10:17,359 --> 00:10:22,760
And at the time, that website for the global Formula One was running on two servers.

143
00:10:22,760 --> 00:10:28,880
We had an Apache front-end server, which was running PHP, and we had an Oracle server,

144
00:10:28,880 --> 00:10:32,799
which was serving as the database, two Sun Solaris boxes.

145
00:10:32,799 --> 00:10:35,799
And okay, there was like three people on the internet at the time, so it wasn't a thing.

146
00:10:35,799 --> 00:10:40,640
But in terms of the complexity of what you need to learn as an app dev, I needed to learn

147
00:10:40,640 --> 00:10:42,119
a little bit of Linux.

148
00:10:42,119 --> 00:10:46,880
I needed to learn roughly, like the rough edges of how Apache works, like what is the

149
00:10:46,880 --> 00:10:53,320
configuration to sort of deploy an application, and to configure things like the plugin for

150
00:10:53,320 --> 00:10:54,320
PHP.

151
00:10:54,320 --> 00:11:01,039
And I needed to understand PHP and some SQL, nothing too heavy.

152
00:11:01,039 --> 00:11:07,159
And nowadays, I need to understand, let's assume I'm still working in PHP.

153
00:11:07,159 --> 00:11:08,559
I need to understand my PHP.

154
00:11:08,559 --> 00:11:13,000
I need to understand Kubernetes, because I need to understand how the application is

155
00:11:13,000 --> 00:11:14,000
going to be deployed.

156
00:11:14,000 --> 00:11:18,039
I need to understand the underlying structure of what's going on in the kube cluster, because

157
00:11:18,039 --> 00:11:23,840
well, if I understand how the nodes are being scheduled, or if they're in auto-scale groups,

158
00:11:23,840 --> 00:11:28,559
and how that affects load balancing, and how that affects the applications coming and going,

159
00:11:28,559 --> 00:11:30,320
and I need to understand how to deploy it.

160
00:11:30,320 --> 00:11:35,719
So I need something like Terraform, or Ansible, or Chef, or Insert, probably all of those

161
00:11:35,719 --> 00:11:37,000
tools here.

162
00:11:37,039 --> 00:11:42,960
And then I need to understand sort of functional testing, and half a dozen different databases.

163
00:11:42,960 --> 00:11:44,679
It's pretty complex.

164
00:11:44,679 --> 00:11:51,359
I mean, the world is definitely getting more and more complex, but like at the same time,

165
00:11:51,359 --> 00:11:52,359
it's pretty interesting.

166
00:11:52,359 --> 00:11:55,760
And so I suppose like this is maybe where we're guilty, right?

167
00:11:55,760 --> 00:11:58,159
We look at these new technologies and we're like, oh my God, that's something else that's

168
00:11:58,159 --> 00:11:59,159
really interesting.

169
00:11:59,159 --> 00:12:01,599
We kind of get captivated by something.

170
00:12:01,599 --> 00:12:15,119
So you think we, in a way, over-complex everything by pushing too much new technologies or like

171
00:12:15,119 --> 00:12:17,640
new things into our stacks?

172
00:12:17,640 --> 00:12:29,200
Because the last time I was like reading how the infrastructure of Stack Overflow is looking,

173
00:12:29,200 --> 00:12:30,200
and it's simple.

174
00:12:31,200 --> 00:12:38,320
They still keep it very simple for the things that they need.

175
00:12:38,320 --> 00:12:45,960
And if you compare this to somebody else who would start doing the architecture design

176
00:12:45,960 --> 00:12:47,039
would say, no, no, no.

177
00:12:47,039 --> 00:12:53,159
We need something that's like Kubernetes, we need load balancer here.

178
00:12:53,159 --> 00:13:01,280
And in the end, like what Andras mentioned, like maybe that's not like, but like understanding

179
00:13:01,280 --> 00:13:08,159
the business, we are like more focusing on the nice technology, nice to have maybe all

180
00:13:08,159 --> 00:13:11,520
the features that will never be used.

181
00:13:11,520 --> 00:13:18,159
But it's like having this, it's sort of something to brag about in the end.

182
00:13:18,159 --> 00:13:21,960
I don't know if it's, I think it's, so I think firstly, the sort of software architecture

183
00:13:21,960 --> 00:13:22,960
is difficult.

184
00:13:23,559 --> 00:13:30,359
And I think getting, architecting a system for the correct scale is also very, very difficult.

185
00:13:30,359 --> 00:13:32,520
And then you've got complexity of application.

186
00:13:32,520 --> 00:13:37,960
So something like, I don't want to play down Stack Overflow, but if you have like a sort

187
00:13:37,960 --> 00:13:44,679
of a website, which is a kind of a forum, then the number of components are somewhat

188
00:13:44,679 --> 00:13:50,239
smaller or constrained than say you have a global banking system, or take something like

189
00:13:50,239 --> 00:13:54,960
sort of Netflix, which is like, what about like 40% of all internet traffic or something

190
00:13:54,960 --> 00:13:56,200
like that.

191
00:13:56,200 --> 00:14:00,320
So then I think what happens is we sort of learn a lot and we're reading a lot and we're

192
00:14:00,320 --> 00:14:01,840
looking at these solutions.

193
00:14:01,840 --> 00:14:07,239
So we're building our startup and we're going to grow as big as Netflix, that's our goal,

194
00:14:07,239 --> 00:14:08,239
but we're not there yet.

195
00:14:08,239 --> 00:14:11,960
But what we're doing is maybe architecting the solution at the wrong level at the wrong

196
00:14:11,960 --> 00:14:12,960
point.

197
00:14:12,960 --> 00:14:18,599
So instead of starting out with something which is a little bit simpler and then progressing

198
00:14:18,599 --> 00:14:24,359
outwards, you know, to give you an example, like containerization is still a great thing.

199
00:14:24,359 --> 00:14:27,679
It enables a great developer workflow.

200
00:14:27,679 --> 00:14:31,960
So I would always recommend containerization at any scale, but you don't need to start

201
00:14:31,960 --> 00:14:32,960
with Kubernetes.

202
00:14:32,960 --> 00:14:37,840
You could start with Cloud Run or like ECS is actually really, really quite accessible

203
00:14:37,840 --> 00:14:43,679
or like, you know, pretty much every sort of cloud provider has a run a container as

204
00:14:43,679 --> 00:14:44,679
an instance.

205
00:14:44,679 --> 00:14:47,179
And then you can scale it out from there.

206
00:14:47,260 --> 00:14:51,419
So then as you add more services, you maybe add another Cloud Run instance.

207
00:14:51,419 --> 00:14:54,260
And then maybe you can like, okay, we're going to start managing these with infrastructure

208
00:14:54,260 --> 00:14:56,859
as code and building some pipelines.

209
00:14:56,859 --> 00:15:00,099
And then you're going to get to a point where it's like, okay, we're at a point now where

210
00:15:00,099 --> 00:15:04,780
the application needs multiple instances or having issues with deployment.

211
00:15:04,780 --> 00:15:06,659
Then you start to look for the architectural solutions.

212
00:15:06,659 --> 00:15:11,140
I think if anything, what we're guilty of is we'll kind of read something on an article

213
00:15:11,140 --> 00:15:12,140
and think, that'd be amazing.

214
00:15:12,140 --> 00:15:13,380
I'd love to implement that.

215
00:15:13,380 --> 00:15:18,419
And then you implement it without actually thinking, well, do you really need it?

216
00:15:18,419 --> 00:15:22,020
But at the same time, like, I don't think people do that deliberately.

217
00:15:22,020 --> 00:15:27,500
I think it's just really hard to kind of, there's so much information, so much complexity.

218
00:15:27,500 --> 00:15:30,140
It's like, where do you even begin?

219
00:15:30,140 --> 00:15:34,419
And with hindsight, if you've got a bunch of years experience building various systems

220
00:15:34,419 --> 00:15:37,900
of sizes, you kind of get to learn which is the right solution.

221
00:15:37,900 --> 00:15:44,619
But if you kind of don't, and all you're doing is like, well, how do I deploy my application

222
00:15:44,619 --> 00:15:45,619
to the cloud?

223
00:15:45,619 --> 00:15:49,099
If you Google that, you're probably going to come across like, oh, here's an article

224
00:15:49,099 --> 00:15:51,380
on how to do it with Terraform and Kubernetes.

225
00:15:51,380 --> 00:15:55,460
And if you don't know it any better, that's your kind of your starting point when it's

226
00:15:55,460 --> 00:15:59,260
not necessarily the appropriate solution for.

227
00:15:59,260 --> 00:16:06,020
So yeah, I think it's hard, but at the same time, I'm a magpie like anybody else.

228
00:16:06,020 --> 00:16:07,020
I find it super interesting.

229
00:16:07,140 --> 00:16:09,140
I'm all about the new technology.

230
00:16:09,140 --> 00:16:16,539
Yeah, it's hard to balance our excitement with some boring technology from the past

231
00:16:16,539 --> 00:16:22,859
that might be a bit more practical or, well, depends on the use case.

232
00:16:22,859 --> 00:16:26,619
But yeah, it's super tricky.

233
00:16:26,619 --> 00:16:36,419
So recent years, we are seeing that HR departments or companies are basically posting job titles

234
00:16:36,419 --> 00:16:39,179
like DevOps engineer.

235
00:16:39,179 --> 00:16:40,820
What does that mean for you?

236
00:16:40,820 --> 00:16:45,619
Well, I mean, when I kind of look at those things and I like, I see, first and foremost,

237
00:16:45,619 --> 00:16:50,340
I think DevOps is a culture and it's, well, it is what it is.

238
00:16:50,340 --> 00:16:53,020
It's Dev and it's Ops.

239
00:16:53,020 --> 00:16:55,340
But at the same time, it's also a methodology.

240
00:16:55,340 --> 00:16:57,619
So you can't just say it's a culture.

241
00:16:57,619 --> 00:17:01,619
It's about, in my mind as well, if you say, well, what is DevOps?

242
00:17:01,619 --> 00:17:06,260
It's about performing an operational function, but using maybe a development process.

243
00:17:06,260 --> 00:17:11,339
So we're using infrastructure as code where we're building tooling to help us.

244
00:17:11,339 --> 00:17:18,140
So a lot of DevOps engineers are writing sort of pretty complex scripts and their own tools

245
00:17:18,140 --> 00:17:21,699
using Python or Go or Rust or whatever.

246
00:17:21,699 --> 00:17:24,699
So it is kind of a meld of the two.

247
00:17:24,699 --> 00:17:29,780
I know a lot of people kind of get upset with the whole DevOps when they say it as a title.

248
00:17:29,780 --> 00:17:30,780
I'm like, well, I don't.

249
00:17:30,780 --> 00:17:32,380
I don't have a problem with that.

250
00:17:32,380 --> 00:17:42,060
I think it's just embodying that kind of attitude, if you would, and if it helps as well, like

251
00:17:42,060 --> 00:17:50,459
if having a label helps promote a methodology or promote a culture, like that's not a bad

252
00:17:50,459 --> 00:17:51,459
thing, is it?

253
00:17:51,459 --> 00:17:52,459
I don't know.

254
00:17:52,459 --> 00:17:53,459
What do you?

255
00:17:53,459 --> 00:17:54,459
You asked the question.

256
00:17:54,459 --> 00:17:55,459
I'm going to ask you the question.

257
00:17:55,459 --> 00:17:56,459
What do you think?

258
00:17:56,540 --> 00:18:02,500
I always find it tricky, right?

259
00:18:02,500 --> 00:18:12,020
Whenever I go to my customer, I try to figure out what do they want?

260
00:18:12,020 --> 00:18:17,660
And I know that that sounds a bit funny, but you really can't assume anything, especially

261
00:18:17,660 --> 00:18:22,780
in DevOps related stuff, right?

262
00:18:23,099 --> 00:18:32,699
Because sometimes people just want me to help them from end to end and maybe just like lift

263
00:18:32,699 --> 00:18:35,500
up the knowledge of the whole team and the whole process.

264
00:18:35,500 --> 00:18:41,459
And that might be from development to delivery.

265
00:18:41,459 --> 00:18:50,699
Sometimes they're super focused just on CIC deep pipelines, so I need to basically figure

266
00:18:50,699 --> 00:18:53,959
out what they want there.

267
00:18:53,959 --> 00:19:00,900
But the main thing, at least the main challenge for me is when I started gaining years and

268
00:19:00,900 --> 00:19:07,859
years of experience, I go to the customer and I say, look, we have, I don't know, there

269
00:19:07,859 --> 00:19:11,819
are four zones of technology that we can pick.

270
00:19:11,819 --> 00:19:16,939
And I recommend that we pick something that everybody can learn something and that we

271
00:19:16,939 --> 00:19:20,260
don't go full crazy.

272
00:19:20,819 --> 00:19:32,099
So that it's actually that the business folks or the main company, so that they are happy

273
00:19:32,099 --> 00:19:37,819
that the engineer just didn't close the door and now they are geeking out, right?

274
00:19:37,819 --> 00:19:45,339
But I also want to, depends on the level of the folks working there or my customers.

275
00:19:45,339 --> 00:19:50,020
I also want to share whatever I know.

276
00:19:50,020 --> 00:19:54,099
And I say, look, there is no need to use Docker.

277
00:19:54,099 --> 00:20:01,099
We can totally use package managers that are purely functional and we just use Nix and

278
00:20:01,099 --> 00:20:05,939
we can figure everything out, but that might be ultra overkill, right?

279
00:20:05,939 --> 00:20:13,719
And I never do that suggestion also, but I've done some consulting in that.

280
00:20:13,719 --> 00:20:20,020
And sometimes I'm just like, and I know that this will sound super wrong.

281
00:20:20,020 --> 00:20:25,119
If you have, if you have two guys and they don't have any founding, they have a bootstrap

282
00:20:25,119 --> 00:20:31,520
company and they commit their secrets into the repo and the repo is private.

283
00:20:31,520 --> 00:20:35,439
I'm like, look, it's fine, right?

284
00:20:35,439 --> 00:20:42,119
Because this company might not exist in three weeks, right?

285
00:20:42,119 --> 00:20:50,400
But I will tell you all the technologies and maybe we can agree that you maybe should

286
00:20:50,400 --> 00:20:54,640
do a small step and for example, take Mozilla SOPs.

287
00:20:54,640 --> 00:21:00,640
If you can implement that in your thinking and how you deploy stuff, it's still in GitHub,

288
00:21:00,640 --> 00:21:04,839
it's just simple executable that will help manage this.

289
00:21:04,839 --> 00:21:07,920
And I can help you set up those things up.

290
00:21:07,920 --> 00:21:16,760
If you are willing to spend or pay me actually two hours of my work, is that a price performance

291
00:21:16,760 --> 00:21:25,260
for you and, or if they say no, then I'm saying, look, then just put them at one place so that

292
00:21:25,260 --> 00:21:30,239
at one point, if you succeed, you will know where to rotate, right?

293
00:21:30,239 --> 00:21:31,959
And basic things, things like that.

294
00:21:31,959 --> 00:21:42,699
So for me, when I go somewhere and I usually don't apply to job postings, right?

295
00:21:42,699 --> 00:21:51,560
But yeah, the main challenge for me is I need to shift or bend the jobs engineer posting.

296
00:21:51,560 --> 00:21:59,280
I need to bend that inquiry to something that makes sense for my customer and for me.

297
00:21:59,280 --> 00:22:03,359
And I think that is a problem, I suppose, but it was a problem, but it's such a broad

298
00:22:03,359 --> 00:22:04,359
spectrum.

299
00:22:04,359 --> 00:22:05,359
Yeah.

300
00:22:05,359 --> 00:22:06,359
And I think that's the key thing.

301
00:22:06,359 --> 00:22:08,760
It's about ultimately what we want to do is just move the bar.

302
00:22:08,760 --> 00:22:11,160
It's about just incremental progression.

303
00:22:11,160 --> 00:22:14,280
That's what everybody should be trying to do.

304
00:22:14,280 --> 00:22:24,319
But I definitely enjoy working in a world which has DevOps a lot more than the previous,

305
00:22:24,319 --> 00:22:29,640
you know, the sort of where, where you had a dedicated sysadmin who was grumpy and would

306
00:22:29,640 --> 00:22:31,560
basically answer your request.

307
00:22:31,560 --> 00:22:35,280
Maybe if you were lucky, certainly not on a Friday because you've probably been drinking

308
00:22:35,280 --> 00:22:40,819
since lunchtime because, well, you know, dealing with developers all week, I would too.

309
00:22:40,819 --> 00:22:43,359
So this methodology is not for grumpy people.

310
00:22:43,359 --> 00:22:48,199
So grumpy people are not in DevOps, right?

311
00:22:48,199 --> 00:22:50,800
I think in tech, we're pretty good at being grumpy.

312
00:22:50,800 --> 00:22:51,800
Yeah.

313
00:22:51,800 --> 00:22:52,800
No, no.

314
00:22:52,800 --> 00:22:53,800
I agree.

315
00:22:54,280 --> 00:23:02,319
Adding to your question, whether like DevOps, I see DevOps as like right now overhyped,

316
00:23:02,319 --> 00:23:03,479
like using Kubernetes.

317
00:23:03,479 --> 00:23:08,400
I see like it's maybe too much stress saying, well, this is a DevOps job.

318
00:23:08,400 --> 00:23:09,400
Well, come on.

319
00:23:09,400 --> 00:23:18,640
We're like using this culture, like culture norm, understanding each like each unit or

320
00:23:18,640 --> 00:23:23,359
from, from, from, from management to business perspective, to development perspective and

321
00:23:23,359 --> 00:23:28,599
operation perspective and be like transparent to like be everybody involved.

322
00:23:28,599 --> 00:23:35,920
I rather see this like to be this like open process and you can call it DevOps.

323
00:23:35,920 --> 00:23:42,160
And then like whether not, not having title DevOps, it makes far more sense.

324
00:23:42,160 --> 00:23:50,119
Like, like Google introduced the SREs, far, far, far more fancy, fancy title.

325
00:23:50,119 --> 00:23:58,239
But nevertheless, I'm, I'm just fine saying that he's a sys, a sys admin.

326
00:23:58,239 --> 00:24:06,400
But practicing this good cultural practices of communication, open transparency and, and,

327
00:24:06,400 --> 00:24:12,359
and wanting to, to, like you said, moving things forward and not saying, well, it's

328
00:24:12,359 --> 00:24:13,680
not my job here.

329
00:24:13,680 --> 00:24:21,439
Like my responsibility ends and, and not willing to maybe help the, the, the, the other party

330
00:24:21,439 --> 00:24:22,959
to, to move things forward.

331
00:24:22,959 --> 00:24:23,959
Yeah.

332
00:24:23,959 --> 00:24:29,400
And I, so I think as well, I've had a thought that maybe what we're, what, what kind of

333
00:24:29,400 --> 00:24:33,959
what suppose a problem that we have in, in the industry as well as you are basically

334
00:24:33,959 --> 00:24:35,959
paid by what you know.

335
00:24:35,959 --> 00:24:39,599
So the, the amount of stuff that's in your head, the, the more tools and knowledge you

336
00:24:39,599 --> 00:24:45,920
have and obviously experience of developing systems is, is pretty much kind of, you know,

337
00:24:45,920 --> 00:24:49,680
linked, directly linked to the amount of salary that you get.

338
00:24:49,680 --> 00:24:54,040
So therefore, if you want to get more salary, you need to know more stuff.

339
00:24:54,040 --> 00:24:57,839
So therefore I think there's, there's also like a, you know, a demand that we want to

340
00:24:57,839 --> 00:25:00,000
keep learning, but then you want to kind of implement.

341
00:25:00,000 --> 00:25:01,520
what you've learned and practiced.

342
00:25:01,520 --> 00:25:06,800
So maybe that also is kind of a driver on why we're using in some cases

343
00:25:06,800 --> 00:25:08,840
inappropriate use of technology.

344
00:25:09,160 --> 00:25:11,120
And maybe we need to like flip this as a business.

345
00:25:11,120 --> 00:25:14,280
And then, you know, the reality is it shouldn't be about what you know.

346
00:25:14,280 --> 00:25:18,680
It should be about the efficiency that you can drive within the organization.

347
00:25:18,920 --> 00:25:24,639
Now, actually having a broad spectrum of knowledge helps you to understand that

348
00:25:24,639 --> 00:25:28,600
maybe the most complex tool is not the right tool and actually the best solution

349
00:25:28,600 --> 00:25:33,799
for the business, which derives the best value and efficiency is the simplest tool.

350
00:25:33,880 --> 00:25:39,080
And avoiding the Kubernetes and going for just the, you know, we just need a VM.

351
00:25:39,080 --> 00:25:41,000
So let's just create a VM.

352
00:25:41,639 --> 00:25:46,919
So maybe, maybe we need to kind of think about, I think about that as well.

353
00:25:46,919 --> 00:25:52,680
But, but I certainly think, like, you know, this yourselves, like if you, if

354
00:25:52,680 --> 00:25:57,959
you saw a role and it was high tech, you might be more attracted to go for that.

355
00:25:58,200 --> 00:26:02,599
It's probably higher salary as well, as opposed to if it was a high salary, but

356
00:26:02,599 --> 00:26:08,559
low tech role, you know, so, so maybe we're on, we're our own worst enemies.

357
00:26:09,120 --> 00:26:09,239
Yeah.

358
00:26:09,239 --> 00:26:13,120
But on, on the other hand, you could, you could see like, especially, but what I

359
00:26:13,120 --> 00:26:19,279
saw in, in, in last decade were like those, those jobs that have this fancy

360
00:26:19,279 --> 00:26:23,800
descriptions, what kind of technology you'll be using, but in the end you're

361
00:26:23,800 --> 00:26:28,879
like stuck with some legacy, like they maybe have something in a roadmap.

362
00:26:29,080 --> 00:26:34,480
We want to be there, but you will need the working process, how to get there.

363
00:26:34,680 --> 00:26:38,120
But you're basically stuck with some legacy technology.

364
00:26:39,160 --> 00:26:43,559
I find those kinds of things the most interesting, like for me, I think the,

365
00:26:44,000 --> 00:26:48,919
I'm really interested in, in that how to get from point A to point B.

366
00:26:48,919 --> 00:26:53,000
So if somebody comes along and says, we have this rails application, it's a

367
00:26:53,000 --> 00:26:58,400
monolith, it's just a rails app with a Postgres database, we have an aspiration

368
00:26:58,800 --> 00:27:03,519
to grow the business, to add technology, which will ultimately lead to

369
00:27:03,519 --> 00:27:05,040
developing all of these new services.

370
00:27:05,440 --> 00:27:07,879
I think that's actually really interesting because then you sort of

371
00:27:07,879 --> 00:27:09,520
think, well, how do you decompose this?

372
00:27:09,759 --> 00:27:12,199
How do you start extracting components out of this?

373
00:27:12,240 --> 00:27:17,000
What is the appropriate way to run this new architecture?

374
00:27:17,000 --> 00:27:20,880
And you see it grow and you see it involve and hopefully with it, you see

375
00:27:21,199 --> 00:27:27,679
the business grow and I think that's always been a focus that we shouldn't

376
00:27:27,679 --> 00:27:34,759
forget that we were employed to help provide a sort of a service to provide

377
00:27:34,759 --> 00:27:41,600
a value for an organization and so yeah, so maybe basically we just need more

378
00:27:41,759 --> 00:27:46,039
businesses to like start giving us money based on if they're more successful,

379
00:27:46,080 --> 00:27:47,520
they should pay us more, right?

380
00:27:47,520 --> 00:27:48,360
That sounds fair, right?

381
00:27:48,800 --> 00:27:49,679
I'm all for more money.

382
00:27:51,160 --> 00:27:55,679
So less hype driven hiring.

383
00:27:56,839 --> 00:27:59,720
Yeah, but I think in general, right?

384
00:27:59,720 --> 00:28:05,199
Like I think if you look at DevOps and if you've spoken to certain business

385
00:28:05,199 --> 00:28:08,160
leaders, they will use the term and they haven't really got an understanding

386
00:28:08,160 --> 00:28:14,360
of what's going on, but they don't really get it, but even if that term is a

387
00:28:14,360 --> 00:28:19,440
leverage to be able to drive a conversation in finance, to be able to drive a

388
00:28:19,440 --> 00:28:27,320
conversation with a C-level somewhere, which increases funding for technology

389
00:28:27,320 --> 00:28:33,639
or for whatever that the organization then needs to help it push forward,

390
00:28:33,800 --> 00:28:34,600
then that's a good thing.

391
00:28:34,720 --> 00:28:43,000
Like I've got no problem at all with that if somebody's kind of using that,

392
00:28:43,000 --> 00:28:44,479
but because we all win in the end.

393
00:28:44,800 --> 00:28:45,119
Yeah.

394
00:28:46,119 --> 00:28:52,600
Do you think that maybe in the next few years we will, in the recent years,

395
00:28:52,600 --> 00:29:00,600
there had been a lot of tooling regarding delivery and how to ship something to

396
00:29:00,600 --> 00:29:09,320
production, and I would say that back in the 2000s, there were, including me, a

397
00:29:09,320 --> 00:29:14,639
lot of sysadmins that were happy with just like simple best scripts and we didn't

398
00:29:14,639 --> 00:29:17,600
really care much with coding back then.

399
00:29:18,920 --> 00:29:24,200
Of course, at least I was less experienced, so you need to grow that skill of coding.

400
00:29:24,799 --> 00:29:29,640
And now we are in a renaissance where there's a lot of new tools popping up.

401
00:29:30,200 --> 00:29:36,519
And I compare that, and I know it's a weird comparison, a bit to the front end

402
00:29:36,519 --> 00:29:41,359
world, when there was a period that there had been a lot of frameworks, but now we

403
00:29:41,399 --> 00:29:45,760
are basically settled on the three major ones, kind of.

404
00:29:45,760 --> 00:29:51,000
Of course, there are newer ones, but there's React, Vue.js, and Angular, and

405
00:29:51,000 --> 00:29:55,880
they seem to be the options that big companies pick.

406
00:29:56,119 --> 00:30:02,799
Do you think that maybe we will agree on some tooling in some departments so we

407
00:30:02,799 --> 00:30:09,519
will be able to be more rational and then think back how to provide more value and

408
00:30:09,559 --> 00:30:12,119
just not hack on new things?

409
00:30:12,799 --> 00:30:13,839
I think it's a good question.

410
00:30:13,959 --> 00:30:20,320
And I think until we get to a situation when the tooling is really suitable for

411
00:30:20,320 --> 00:30:26,760
what we need in order to do our jobs, we're going to, I think, still have evolution.

412
00:30:26,799 --> 00:30:35,839
I think there is a slow sort of standardization around certain tools,

413
00:30:36,079 --> 00:30:40,440
which I think is a good thing because then you have a sort of a, you know, the

414
00:30:40,440 --> 00:30:44,559
knowledge sharing is kind of more focused, which is always good.

415
00:30:45,239 --> 00:30:51,399
But I'm still not convinced that where we are right now, that the

416
00:30:51,399 --> 00:30:54,359
tools deliver exactly what we need.

417
00:30:54,359 --> 00:30:57,200
And that's why we need to continually build things.

418
00:30:57,640 --> 00:31:01,959
And again, this is why I think that every organization has a platform

419
00:31:01,959 --> 00:31:06,600
engineering team, because there isn't something that we can just pick up off

420
00:31:06,600 --> 00:31:09,079
the shelf and that we can use.

421
00:31:10,160 --> 00:31:13,200
And so I think there will be a consolidation.

422
00:31:13,239 --> 00:31:19,640
I think it will kind of happen, but it seems like certainly over the last sort

423
00:31:19,640 --> 00:31:24,320
of five years, you know, from an architectural standpoint where we're not

424
00:31:24,320 --> 00:31:29,920
slowing down, but we seem to be organizing our thought around the two

425
00:31:29,920 --> 00:31:33,399
predominant patterns of like either the serverless pattern or the kind of the

426
00:31:33,760 --> 00:31:41,040
Kubernetes or scheduler based pattern, that doesn't seem to be, there's certainly

427
00:31:41,040 --> 00:31:45,040
nobody's come up with a new, well, having said that, and I'm like, well, we're all

428
00:31:45,040 --> 00:31:48,480
going to be probably writing serverless WASM functions running on Kubernetes,

429
00:31:48,480 --> 00:31:51,600
obviously, in the next five years.

430
00:31:51,600 --> 00:31:57,200
So maybe we are about to shift again, but it does feel like we're starting to

431
00:31:57,279 --> 00:31:59,480
consolidate our infrastructure patterns.

432
00:31:59,480 --> 00:32:02,839
And then I think because of that, the tooling will then become standardized.

433
00:32:02,839 --> 00:32:05,760
So I think it'll happen.

434
00:32:07,279 --> 00:32:11,279
But I think there's always, whilst we're all building our own platforms, there's

435
00:32:11,279 --> 00:32:16,399
always going to be custom tooling required because what I build is not

436
00:32:16,399 --> 00:32:18,320
necessarily going to be useful for you and or you or.

437
00:32:18,760 --> 00:32:27,119
Yeah, but like we can simply like basically your employer, so HashiCorp,

438
00:32:27,119 --> 00:32:34,160
so basically was solving some of their own issues and create tools to figure

439
00:32:34,160 --> 00:32:40,799
out those tools get benefit to wide range of customers.

440
00:32:40,799 --> 00:32:41,320
Yeah.

441
00:32:41,320 --> 00:32:44,320
And I'm excited about that.

442
00:32:45,040 --> 00:32:46,480
And I'm excited about that.

443
00:32:46,480 --> 00:32:51,640
And like, so I don't know if any of the listeners haven't kind of got a full

444
00:32:51,640 --> 00:32:55,600
background on that, but when Mitchell and Armand basically were working in a role

445
00:32:55,600 --> 00:33:01,679
as DevOps engineers and they were deploying systems and they realized that

446
00:33:01,679 --> 00:33:05,760
kind of the forefront of cloud, that the tooling was, there was something missing

447
00:33:05,760 --> 00:33:07,519
basically.

448
00:33:07,519 --> 00:33:10,320
Now this is just after Vagrant.

449
00:33:10,320 --> 00:33:14,640
So they started to kind of think about this and started to build the tooling.

450
00:33:14,640 --> 00:33:17,959
And then they realized that actually, hang on a minute, if this tooling is

451
00:33:17,959 --> 00:33:22,640
useful for us, then it's probably useful for the wider market.

452
00:33:22,640 --> 00:33:29,160
And then that was when they founded HashiCorp to actually start working on

453
00:33:29,160 --> 00:33:30,600
that full time.

454
00:33:30,600 --> 00:33:35,679
And back then you were looking at sort of Vagrant and Terraform and Packer.

455
00:33:35,679 --> 00:33:40,559
And then HashiCorp built the first version of Terraform Cloud, which was then

456
00:33:40,559 --> 00:33:42,479
called Atlas.

457
00:33:42,479 --> 00:33:44,440
And we needed a secrets manager.

458
00:33:44,440 --> 00:33:47,440
So there wasn't a secrets manager.

459
00:33:47,440 --> 00:33:50,760
Internally, they were like, well, we need to build this secret service.

460
00:33:50,760 --> 00:33:52,239
So they built Vault.

461
00:33:52,239 --> 00:33:56,200
And then after Vault had been built, which was specifically designed just for the

462
00:33:56,200 --> 00:34:00,440
first version of Terraform Cloud, somebody was like, hang on a minute,

463
00:34:00,440 --> 00:34:01,359
that's actually really useful.

464
00:34:01,359 --> 00:34:06,559
We should make that a tool for other people to use.

465
00:34:06,559 --> 00:34:11,400
And I think having that ethos has been really, really useful.

466
00:34:11,400 --> 00:34:16,000
So I hope that we'll see a lot more companies that do exactly the same thing.

467
00:34:16,000 --> 00:34:19,760
You know, it might be some engineers who are working for an organization and they

468
00:34:19,760 --> 00:34:21,200
built a really useful tool.

469
00:34:21,200 --> 00:34:26,760
Then they go and they set up a startup and they can build that tool and work on it

470
00:34:26,760 --> 00:34:30,960
and allow, you know, it solves the problem for everyone else.

471
00:34:30,960 --> 00:34:36,119
I think that's a really nice way of developing software, rather than, you

472
00:34:36,119 --> 00:34:42,200
know, the kind of the just sitting around thinking about what should we build.

473
00:34:42,200 --> 00:34:48,640
When you've got an actual need, which is based on knowledge of the problem,

474
00:34:48,640 --> 00:34:50,679
I think you create really, really good software.

475
00:34:50,679 --> 00:34:54,239
And I think I'm hopeful we'll see a lot more of that.

476
00:34:55,039 --> 00:35:03,679
But we saw this sort of good practices in the past, like the company, like out of my

477
00:35:03,679 --> 00:35:10,039
mind, top of my mind right now is maybe like Netflix, open source, their Chaos

478
00:35:10,039 --> 00:35:12,159
Monkey project and so on.

479
00:35:12,159 --> 00:35:20,039
So basically, each company is sort of a development in its own tooling for

480
00:35:20,479 --> 00:35:25,280
suiting their needs and figure out, well, maybe somebody else is having similar

481
00:35:25,280 --> 00:35:26,400
problems.

482
00:35:26,400 --> 00:35:27,719
Let's work on this.

483
00:35:27,719 --> 00:35:34,960
And I see a lot of nice open source software or tools came out of that and sort

484
00:35:34,960 --> 00:35:36,400
of a community growth out of that.

485
00:35:36,400 --> 00:35:38,520
And people contributed to this.

486
00:35:38,520 --> 00:35:44,320
So it seems like a lot's been going on in that sense.

487
00:35:44,359 --> 00:35:49,840
Yeah, I mean, I think like in general, that whole sort of change in the way that

488
00:35:49,840 --> 00:35:56,200
we share information has been like huge from, I remember when I was at university

489
00:35:56,200 --> 00:35:59,159
and I was studying at university, I needed Linux.

490
00:35:59,159 --> 00:36:01,479
And back in the day, you didn't have much of a modem, right?

491
00:36:01,479 --> 00:36:09,679
But I had to, I bought a book, a textbook from a bookstore, and it came with a CD

492
00:36:09,679 --> 00:36:12,280
of, I think it was Suze.

493
00:36:12,280 --> 00:36:15,159
And that was how I got access to Linux.

494
00:36:15,159 --> 00:36:19,479
If I needed some software, I would generally have to pay for it.

495
00:36:19,479 --> 00:36:25,119
So like I needed, I remember working on an application and the application needed to

496
00:36:25,119 --> 00:36:27,280
do some very basic image manipulation.

497
00:36:27,280 --> 00:36:34,840
Like I'm talking cropping and now I could have wrote that myself, but at the same

498
00:36:34,840 --> 00:36:36,359
time, the internet didn't exist.

499
00:36:36,359 --> 00:36:41,280
So like determining what is the specification of a JPEG, right?

500
00:36:41,520 --> 00:36:42,960
What is the JPEG specification?

501
00:36:42,960 --> 00:36:44,080
What's the file format?

502
00:36:45,119 --> 00:36:50,479
The actual software frameworks at the time, certainly like ASP.NET didn't

503
00:36:50,479 --> 00:36:52,320
have that capability built in.

504
00:36:53,679 --> 00:36:57,559
So it would be a huge amount of effort to try and even do something very, very

505
00:36:57,559 --> 00:36:59,479
simple, like create a JPEG resizer.

506
00:37:00,880 --> 00:37:03,559
And there was no free software to do this.

507
00:37:03,840 --> 00:37:09,080
So you had to go and buy a library, which was great for the folks who

508
00:37:09,080 --> 00:37:12,440
were selling the libraries, but it meant that everything just went really quite

509
00:37:12,440 --> 00:37:14,919
slow, you know, you didn't have the ability to accumulate knowledge.

510
00:37:15,919 --> 00:37:20,479
And then of course, when organizations, I think, started to get and realize

511
00:37:20,479 --> 00:37:28,440
that we've got this learning, we've consumed some learning from other people.

512
00:37:28,559 --> 00:37:33,640
So let's put back into the industry and share our learning and creating

513
00:37:33,640 --> 00:37:35,440
a sort of an open software model.

514
00:37:36,200 --> 00:37:38,679
It's just benefiting absolutely everywhere because now we've

515
00:37:38,679 --> 00:37:40,599
got the access to the knowledge.

516
00:37:40,640 --> 00:37:46,159
We obviously have access to the tools and to the organizations like Netflix.

517
00:37:46,599 --> 00:37:52,559
Like for Netflix to publish their Chaos Monkey is of zero competitive

518
00:37:52,559 --> 00:37:56,640
disadvantage to them as a video platform.

519
00:37:57,520 --> 00:38:01,679
And I think a lot of organizations are kind of recognizing that same thing.

520
00:38:02,239 --> 00:38:05,039
I think we're all benefiting hugely, hugely from that.

521
00:38:07,400 --> 00:38:07,919
Yeah.

522
00:38:09,119 --> 00:38:10,039
Yeah, I agree.

523
00:38:10,039 --> 00:38:19,200
Like one thing that I really value about HashiCorp is whatever product was

524
00:38:19,200 --> 00:38:27,679
released, it was super well engineered and designed, and I think that a lot of

525
00:38:27,679 --> 00:38:37,359
solutions were also solving problems in the most smooth way that you could solve it.

526
00:38:37,919 --> 00:38:45,000
I remember, maybe we should just mention a few products because when I was a

527
00:38:45,000 --> 00:38:49,159
youngster, I didn't realize that Vagrant was a HashiCorp product.

528
00:38:49,840 --> 00:38:56,080
And then when there was the era where we were building gold images for a virtual

529
00:38:56,679 --> 00:38:59,960
machines in the cloud, there was this Packer.

530
00:39:00,320 --> 00:39:07,159
And then after a while I started focusing, you know, if there is a great director

531
00:39:07,159 --> 00:39:10,719
that you see a movie and then you're like, okay, that's a great movie.

532
00:39:10,719 --> 00:39:13,840
And then you see another movie and you're like, okay, that's also a great movie.

533
00:39:13,840 --> 00:39:16,520
And then you're like, oh, but the director is the same.

534
00:39:16,520 --> 00:39:16,799
Right?

535
00:39:16,840 --> 00:39:17,080
Right.

536
00:39:17,479 --> 00:39:25,080
And then I started being more focused on the company and whatever products they

537
00:39:25,119 --> 00:39:25,640
offer.

538
00:39:26,200 --> 00:39:30,599
And for example, I was always confused.

539
00:39:31,719 --> 00:39:34,599
I know that Nomad is here for a while.

540
00:39:34,679 --> 00:39:38,280
It was here before containers arrived, I think.

541
00:39:38,520 --> 00:39:39,440
Around about the same.

542
00:39:39,559 --> 00:39:39,799
Yeah.

543
00:39:39,799 --> 00:39:46,679
So both Nomad and Kubernetes were probably started around about exactly the same time.

544
00:39:46,679 --> 00:39:49,280
So it was just post-Docker.

545
00:39:49,760 --> 00:39:57,440
And when we were kind of starting to consume like Mesos, which was the most popular

546
00:39:57,440 --> 00:40:05,640
scheduler at the time, and kind of wondering if there were other options, certainly

547
00:40:05,640 --> 00:40:10,679
that was where Mitchell and Armon were thinking when they decided to create Nomad.

548
00:40:10,919 --> 00:40:15,359
And I'm pretty sure that's where like Joe Bader and all were thinking when they

549
00:40:15,359 --> 00:40:17,119
started to think about Kubernetes.

550
00:40:17,119 --> 00:40:22,679
Do you maybe have an idea why Nomad was not picked as as much as maybe some

551
00:40:22,679 --> 00:40:25,159
different products from HashiCorp?

552
00:40:26,520 --> 00:40:27,239
I think it's...

553
00:40:28,039 --> 00:40:28,919
Is it too simple?

554
00:40:29,119 --> 00:40:30,000
No, I don't think so.

555
00:40:30,039 --> 00:40:31,719
Like, I think it's an interesting one.

556
00:40:31,799 --> 00:40:34,679
I mean, I suppose, I think one of the...

557
00:40:35,119 --> 00:40:41,719
Well, so if we look at it in terms of timelines, I remember way back and we were

558
00:40:41,719 --> 00:40:43,640
talking about replacing Mesos.

559
00:40:43,840 --> 00:40:44,039
Yeah.

560
00:40:44,239 --> 00:40:46,520
And we wanted to adopt something else.

561
00:40:46,840 --> 00:40:53,320
Now, the first time I ever saw Armon, I was speaking at a conference in London and

562
00:40:53,320 --> 00:40:56,239
he was speaking there talking about Nomad.

563
00:40:56,799 --> 00:40:59,880
And so I went to, I was a HashiCorp fan.

564
00:41:00,039 --> 00:41:02,640
We were using a lot of their tools at Not On The High Street.

565
00:41:03,039 --> 00:41:06,159
So I went to see this talk because I wanted to know what this new scheduler was.

566
00:41:06,840 --> 00:41:10,200
And at the time it was just the initial alpha release.

567
00:41:10,559 --> 00:41:11,559
It looked really interesting.

568
00:41:12,599 --> 00:41:16,159
And Kubernetes at the time was, there was this whole thing about, oh, you

569
00:41:16,159 --> 00:41:17,359
shouldn't be running it in production.

570
00:41:17,359 --> 00:41:18,440
It's not ready for production.

571
00:41:18,440 --> 00:41:21,239
And there were rough edges as there always are with software.

572
00:41:23,119 --> 00:41:30,799
I think the thing that maybe HashiCorp had against it, in terms of like, if you

573
00:41:30,799 --> 00:41:35,200
want to look at that as a race of some sort, was that the team at HashiCorp

574
00:41:35,200 --> 00:41:38,400
that were working on Nomad probably back then were probably about two or three

575
00:41:38,400 --> 00:41:38,719
people.

576
00:41:39,080 --> 00:41:44,479
And then you have the entire organization and the weight of Google.

577
00:41:45,320 --> 00:41:52,359
But I think the key thing around those two things is that folks gravitated to

578
00:41:52,359 --> 00:41:56,119
one solution, then you have sort of an ecosystem that spins up around that.

579
00:41:56,119 --> 00:41:58,919
And then that accelerates that sort of drive.

580
00:41:59,239 --> 00:42:02,400
I think Nomad never really got too much in that.

581
00:42:02,440 --> 00:42:05,800
I still think it's a fabulous scheduler and it would probably be my primary

582
00:42:05,800 --> 00:42:09,680
choice because I love the fact that it's so versatile.

583
00:42:10,119 --> 00:42:15,719
And it is, I wouldn't say, in some ways it's easier to use, in some ways it's

584
00:42:15,719 --> 00:42:16,319
more complex.

585
00:42:16,319 --> 00:42:17,959
I think there's pros and cons to everything.

586
00:42:18,520 --> 00:42:25,839
But I think it was literally just a thing that people just sort of said, look, I

587
00:42:25,839 --> 00:42:30,920
just want to run containers, then Kubernetes, and then all of the, if you

588
00:42:30,920 --> 00:42:33,560
Google how to run a container, you're going to get Kubernetes.

589
00:42:33,560 --> 00:42:34,680
It's just a snowball.

590
00:42:36,000 --> 00:42:39,000
I don't think Nomad is done by any real odds though.

591
00:42:39,160 --> 00:42:43,520
I think Nomad's been there for probably about seven years now.

592
00:42:43,520 --> 00:42:47,160
And I think keep your eyes on it because I think we're kind of working on some

593
00:42:47,160 --> 00:42:51,880
really, really cool stuff and the versatility of having the capability to

594
00:42:51,880 --> 00:42:58,119
schedule multiple different things, VMs, ECS tasks, if you want, Docker

595
00:42:58,119 --> 00:42:59,680
containers, raw binaries.

596
00:42:59,880 --> 00:43:00,680
Jar files.

597
00:43:00,760 --> 00:43:01,719
Jar files, of course.

598
00:43:01,719 --> 00:43:01,920
Right.

599
00:43:01,920 --> 00:43:05,040
If you're running Java, if you're like, do you really need to containerize

600
00:43:05,040 --> 00:43:06,119
your Java applications?

601
00:43:06,119 --> 00:43:07,880
Well, if you're running Kube, the answer is yes.

602
00:43:07,959 --> 00:43:10,199
But the thing is you don't.

603
00:43:12,400 --> 00:43:18,719
And yeah, so I think that versatility could actually be really interesting for

604
00:43:18,719 --> 00:43:22,719
when we look at the post-container generation, which I don't think is very

605
00:43:22,719 --> 00:43:23,239
far away.

606
00:43:25,119 --> 00:43:30,880
So, but yeah, I think it was literally just the, you know, it was appetite in

607
00:43:30,880 --> 00:43:31,719
the community.

608
00:43:32,920 --> 00:43:36,199
People gravitated towards a particular product.

609
00:43:36,239 --> 00:43:37,640
Still a lot of users use Nomad.

610
00:43:37,640 --> 00:43:41,920
Don't get me wrong, but of course it's not as big as the sort of Kubernetes, but

611
00:43:42,160 --> 00:43:43,680
they do different things in different ways.

612
00:43:43,800 --> 00:43:46,319
I suppose it, whatever, whatever your choices.

613
00:43:48,199 --> 00:43:53,520
Is it like based on what you're seeing, is there like the product of HashiCorp

614
00:43:53,520 --> 00:43:59,040
that is like far more popular or saying, well, this is our most popular or most

615
00:43:59,359 --> 00:44:00,119
used product?

616
00:44:00,160 --> 00:44:02,800
I know all of them are in the whole.

617
00:44:02,800 --> 00:44:04,760
I mean, without a shadow of a doubt, Terraform.

618
00:44:05,280 --> 00:44:11,880
I mean, I think literally without a shadow, I mean, even if you look at the

619
00:44:11,880 --> 00:44:19,680
simplest of metrics around GitHub stars, it's far out, out sort of ways, any of

620
00:44:19,680 --> 00:44:20,560
the other tools.

621
00:44:22,560 --> 00:44:25,800
I mean, I don't, like I was asking somebody for numbers on this the other

622
00:44:25,800 --> 00:44:27,800
day because I've heard some things.

623
00:44:27,800 --> 00:44:29,439
It's definitely in millions.

624
00:44:29,479 --> 00:44:31,479
Like I've heard quotes of the 10 millions.

625
00:44:31,479 --> 00:44:36,920
I think we had, we've had a, they just had a billion downloads of the, the

626
00:44:36,920 --> 00:44:40,839
Terraform AWS provider, which is pretty, pretty crazy.

627
00:44:41,439 --> 00:44:46,520
And you don't have to go too far.

628
00:44:47,280 --> 00:44:48,359
It gets mentioned a lot.

629
00:44:48,359 --> 00:44:51,359
I mean, when people are talking about things like provisioning infrastructure,

630
00:44:51,359 --> 00:44:54,959
creating infrastructure, even deploying applications, it comes up a lot.

631
00:44:54,959 --> 00:44:57,760
So it's, it's, it's definitely very, very popular.

632
00:44:57,760 --> 00:44:59,280
And I like it as a tool as well.

633
00:44:59,280 --> 00:45:03,719
I mean, I'm slightly biased of course, but yeah, probably that.

634
00:45:04,160 --> 00:45:11,719
In terms of like, what's the second most popular, I mean, you know, console is

635
00:45:11,719 --> 00:45:15,839
still powering huge, huge, huge, huge, huge part of the internet.

636
00:45:15,839 --> 00:45:21,239
There are some large, large numbers of console clusters running.

637
00:45:21,680 --> 00:45:25,920
And at one point I, and please don't quote me on this, but I'm sure I read a

638
00:45:25,920 --> 00:45:30,800
statistic that it was one of the most deployed applications to things like AWS,

639
00:45:30,839 --> 00:45:35,199
because it was like a core part of people's microservices state, where that

640
00:45:35,199 --> 00:45:39,119
goes with, with Kubernetes, because obviously Kube has etcd built into it.

641
00:45:39,280 --> 00:45:41,319
Will we see a shift?

642
00:45:42,040 --> 00:45:45,760
Possibly, but at the same time, console has, has shifted, you know, console

643
00:45:45,760 --> 00:45:50,760
has additional capabilities around sort of macro segmentation service mesh

644
00:45:50,760 --> 00:45:53,119
capabilities to bring it into the new world.

645
00:45:53,560 --> 00:45:56,280
So it's, it's not, it's not gone.

646
00:45:56,680 --> 00:46:02,479
And then there's Vault and Vault is, I think, I don't want to say like it's

647
00:46:02,479 --> 00:46:07,719
becoming a sort of a, an industry standard for secrets management, but it's, it's

648
00:46:07,719 --> 00:46:13,680
certainly one of the, the more mentioned tools when, when people are looking

649
00:46:13,680 --> 00:46:16,239
for a secrets management solution.

650
00:46:16,599 --> 00:46:22,199
I can add that you basically set some goals or some standards regarding Vault

651
00:46:22,199 --> 00:46:27,239
because like I personally tried different or let's say alternative products.

652
00:46:27,239 --> 00:46:33,760
And in the end they try to like have the same API or say API calls as you guys did.

653
00:46:34,040 --> 00:46:39,599
So to have this, this transparency and being able to switch to something different.

654
00:46:40,079 --> 00:46:41,239
Interesting.

655
00:46:41,239 --> 00:46:47,719
I was thinking like, I'm surprised that, that Vagrant is not among first three

656
00:46:47,719 --> 00:46:57,520
because I, whenever I, I joined any, any developer teams, I saw that like Vagrant

657
00:46:57,560 --> 00:47:01,959
is there, maybe they, they didn't know about it, but somehow something, some

658
00:47:01,959 --> 00:47:05,520
things are basically running, running in Vagrant.

659
00:47:06,160 --> 00:47:09,160
I would, you know, I'm going to look up the numbers on this, but I know that

660
00:47:09,160 --> 00:47:11,000
Vagrant is still wildly popular.

661
00:47:11,319 --> 00:47:15,719
So in, and as well for me, Vagrant was the first HashiCorp tool that I ever used.

662
00:47:16,280 --> 00:47:23,920
At the time I was working at a UK supermarket and we were, we were wanting

663
00:47:23,920 --> 00:47:28,920
to run functional tests for our iOS application and our Android applications.

664
00:47:29,319 --> 00:47:33,119
And this needed massive parallelization and we needed the capability of

665
00:47:33,160 --> 00:47:34,800
running a clean room environment.

666
00:47:35,199 --> 00:47:37,400
We didn't want to be installing software on top of software.

667
00:47:38,079 --> 00:47:41,160
Now, specifically for, for Apple, and this is, you know, we're

668
00:47:41,160 --> 00:47:42,359
going back nearly 10 years now.

669
00:47:43,319 --> 00:47:47,319
There was no way to kind of just virtualize an OS X instance.

670
00:47:47,359 --> 00:47:53,040
You, you could spin up OS X on an OS X, I'm sorry, on an Apple machine using VMware.

671
00:47:54,160 --> 00:47:59,880
So what we did was we, we integrated, we used Vagrant to basically spin up

672
00:47:59,880 --> 00:48:06,680
and these virtual machines on Apple hardware, which was pre-configured.

673
00:48:07,040 --> 00:48:09,800
Then we could run, use this to execute our functional tests.

674
00:48:09,800 --> 00:48:12,040
And we were kind of orchestrating all of that with Jenkins.

675
00:48:12,400 --> 00:48:13,800
And, and it worked great.

676
00:48:13,920 --> 00:48:17,400
Like, you know, long before any, any of the sort of the, there was any

677
00:48:17,400 --> 00:48:19,520
sort of CI based platforms to do this.

678
00:48:20,280 --> 00:48:21,719
And that was my introduction to Vagrant.

679
00:48:21,760 --> 00:48:27,760
So then I started to use it for building development machines, but, but at the

680
00:48:27,760 --> 00:48:33,920
same time, I also discovered things like Docker and, and for me, like the, if I

681
00:48:33,920 --> 00:48:39,040
just needed a post-grade database, which I mostly did for my, my development

682
00:48:39,040 --> 00:48:40,400
work or something along those lines.

683
00:48:40,400 --> 00:48:42,680
Spinning that up in Docker was incredibly fast.

684
00:48:43,439 --> 00:48:47,560
But Vagrant is hugely, hugely popular.

685
00:48:47,839 --> 00:48:52,719
When I joined HashiCorp nearly seven years ago, and we were talking about my

686
00:48:52,719 --> 00:48:57,920
role as a, as a kind of an advocate and the tooling that, and I remember the sort

687
00:48:57,920 --> 00:49:02,319
of, Arman was kind of saying, well, look, you know, Vagrant is not really something

688
00:49:02,319 --> 00:49:07,119
as we talk about as developer advocates, because the community is just so vast

689
00:49:07,199 --> 00:49:11,920
that it kind of is self, self-fulfilling, which was just incredible.

690
00:49:11,959 --> 00:49:13,359
I mean, it's absolutely amazing.

691
00:49:14,000 --> 00:49:17,160
So yeah, Vagrant, Vagrant is still pretty big.

692
00:49:17,199 --> 00:49:20,479
Like, I don't know on the numbers, I don't know, but you're probably right.

693
00:49:20,479 --> 00:49:24,439
There's, there's a huge amount of Vagrant still going on, on around there.

694
00:49:25,000 --> 00:49:27,880
I think if you don't use Docker for stuff, you're probably using Vagrant.

695
00:49:28,959 --> 00:49:34,880
Before we go to the next question or next topic, I would like to thank our

696
00:49:34,920 --> 00:49:38,760
supporters on Patreon that help us produce this.

697
00:49:38,800 --> 00:49:46,239
So there is some cost with production of this podcast from audio to video.

698
00:49:46,760 --> 00:49:51,439
So I would like to thank our Patreons and our two sponsors, two companies

699
00:49:51,439 --> 00:49:58,640
are sponsoring this, or are our supporters, and that's 3FS and Human Frog.

700
00:50:00,000 --> 00:50:01,520
So thank you for that.

701
00:50:01,920 --> 00:50:12,200
Um, yeah, my question would be, I was, I was having a presentation earlier

702
00:50:12,200 --> 00:50:20,719
today, um, at the conference and I was so surprised how Terraform really

703
00:50:20,719 --> 00:50:29,000
got popular in our region, um, and how many people know of it and how many

704
00:50:29,040 --> 00:50:31,160
people now use it at work.

705
00:50:31,480 --> 00:50:35,799
Um, and I think that that really changed in the last two years.

706
00:50:36,279 --> 00:50:41,959
Um, because when I was picking it up, I was more of a lonely rider, super

707
00:50:41,959 --> 00:50:49,680
excited, uh, so that I can, um, basically spare some bugs when I go to lunch,

708
00:50:49,720 --> 00:50:53,560
because I can destroy the whole deployment and then reapply it.

709
00:50:54,000 --> 00:51:01,119
And my lean notes, uh, invoices were coming on 50 pages, uh, built for every

710
00:51:01,119 --> 00:51:06,239
minute, two cents, and then just pages and pages of, of VMs.

711
00:51:06,279 --> 00:51:11,080
Uh, and each, each line was just like two cents, two cents, two cents,

712
00:51:11,080 --> 00:51:14,120
because I was creating and destroying, creating, applying and destroying.

713
00:51:14,879 --> 00:51:22,080
Um, but I would still like you to explain to more junior folks what

714
00:51:22,279 --> 00:51:27,160
Terraform is, and maybe I guess there are also some folks listening that

715
00:51:27,160 --> 00:51:30,760
are not super into, um, infrastructure.

716
00:51:30,879 --> 00:51:32,599
Uh, what is this tool?

717
00:51:33,239 --> 00:51:38,360
So I think it, it basically allows you to define infrastructure in a declarative way.

718
00:51:38,360 --> 00:51:42,599
So you can create a text file, which defines what a piece of infrastructure

719
00:51:42,599 --> 00:51:46,360
might look like, a load balancer, a virtual machine, a network security

720
00:51:46,360 --> 00:51:48,720
group, those types of things.

721
00:51:49,160 --> 00:51:52,879
And you do that in, in a language, HCL, the HashiCorp configuration language,

722
00:51:52,879 --> 00:51:58,000
which is, is kind of a, I always think of it as if, if, if Jason and YAML had

723
00:51:58,000 --> 00:52:01,480
got together and had a child, HCL would be that child.

724
00:52:01,480 --> 00:52:02,720
But it's a beautiful child.

725
00:52:02,879 --> 00:52:04,519
It's a very, it's a very pretty child.

726
00:52:04,559 --> 00:52:04,720
Yeah.

727
00:52:04,720 --> 00:52:08,199
It's like, um, I'm trying to think of like, you know, Brad Pitt and who else?

728
00:52:09,960 --> 00:52:13,960
Anyway, but, but by doing that, what, what you get is the

729
00:52:13,960 --> 00:52:15,320
ability to define infrastructure.

730
00:52:15,679 --> 00:52:19,360
Now, what I think is important about Terraform is, is not so much the

731
00:52:19,360 --> 00:52:23,960
declaration, I think the declaration has been done before, but I think what's,

732
00:52:24,360 --> 00:52:29,399
what's clever about Terraform is the fact that it uses a graph, so it's graph based.

733
00:52:29,720 --> 00:52:34,320
So you can basically say that the, the output, for example, from a virtual

734
00:52:34,320 --> 00:52:38,880
machine, which might have the output of a, uh, a private IP address can be

735
00:52:38,880 --> 00:52:41,399
the input into another resource.

736
00:52:41,399 --> 00:52:43,320
So for example, a load balancer.

737
00:52:44,240 --> 00:52:48,199
And because of that graph base, what it means is that when you do your,

738
00:52:48,199 --> 00:52:51,759
your sort of your Terraform apply, Terraform works out the order in

739
00:52:51,759 --> 00:52:53,199
which it needs to create resources.

740
00:52:53,199 --> 00:52:56,520
So it knows that it can't create the load balancer until the

741
00:52:56,520 --> 00:53:01,520
private IP is available, which means it needs to create the virtual machine first.

742
00:53:02,479 --> 00:53:07,279
So it like, that actually helps a lot because it means that you no longer need

743
00:53:07,279 --> 00:53:12,919
to kind of have those exceptions or, um, or things the, the other benefit is where

744
00:53:13,160 --> 00:53:17,279
you can parallelize things to say you're creating 30 virtual machines.

745
00:53:17,679 --> 00:53:20,160
You don't need to do them in sequential order.

746
00:53:20,199 --> 00:53:24,039
Terraform can basically go, well, I'm going to create 30 at once,

747
00:53:24,039 --> 00:53:26,600
which, which reduces the time.

748
00:53:27,600 --> 00:53:31,279
So I think those are the, for me, those things that were like brilliant

749
00:53:31,279 --> 00:53:35,679
when I started using it, I think where I appreciate it moving forward as well

750
00:53:35,679 --> 00:53:38,279
is the feedback loop that Terraform gives me.

751
00:53:38,279 --> 00:53:39,919
So it will tell me what has changed.

752
00:53:40,279 --> 00:53:44,240
And I think that, that again is, is kind of the difference of when they

753
00:53:44,240 --> 00:53:47,279
were building the tool out, they think, right, okay, things needed to be

754
00:53:47,279 --> 00:53:50,960
graph-based because we needed this, this dependency, but we also need to

755
00:53:50,960 --> 00:53:54,279
give feedback because we want to understand what has changed.

756
00:53:54,279 --> 00:53:59,039
I don't want to just wipe out my infrastructure every time I do an apply.

757
00:53:59,399 --> 00:54:01,479
I don't want to kind of do this additive update.

758
00:54:01,479 --> 00:54:06,520
I want to, I want to be very prescriptive on, on, um, those changes, what's changed

759
00:54:06,520 --> 00:54:11,880
and understanding what's changed, which, which helps you to not make mistakes,

760
00:54:11,919 --> 00:54:14,399
which is always a, a benefit.

761
00:54:14,839 --> 00:54:19,600
And I think for those reasons is why it's been very, very popular for, for me as

762
00:54:19,600 --> 00:54:21,040
well, like, I think it's the accessibility.

763
00:54:21,040 --> 00:54:26,640
So like I, Terraform is the tool that led me to apply for a job at HashiCorp.

764
00:54:26,679 --> 00:54:29,559
Even though I was using Vagrant, I was using console at the

765
00:54:29,559 --> 00:54:31,480
time, uh, and some Packer, I think.

766
00:54:32,359 --> 00:54:38,559
But I was working as a developer and I wanted to deploy an application service.

767
00:54:38,959 --> 00:54:42,679
So I went to see our DevOps team and I'm like, look, I want to deploy this, this

768
00:54:42,679 --> 00:54:46,119
service, it was actually a Lambda and the team were like, well, we know nothing

769
00:54:46,119 --> 00:54:51,440
about Lambda, but we had a good DevOps culture, so they're like, look, if, if

770
00:54:51,440 --> 00:54:56,440
you can figure this out and you can help us understand what's going on here and

771
00:54:56,440 --> 00:55:00,000
you can do it in a way that kind of adheres to our principles, which is

772
00:55:00,000 --> 00:55:04,920
everything must be version control and CICG driven, then we will support

773
00:55:04,920 --> 00:55:08,559
you on, on, on whatever you want to do.

774
00:55:08,959 --> 00:55:09,760
And I thought, that's brilliant.

775
00:55:09,760 --> 00:55:09,959
Right.

776
00:55:10,279 --> 00:55:12,320
So I went away and I looked at a number of different tools.

777
00:55:12,320 --> 00:55:13,239
They were using Ansible.

778
00:55:13,359 --> 00:55:14,440
I couldn't figure out Ansible.

779
00:55:15,040 --> 00:55:18,880
I mean, it, um, you know, I was, I'm kind of looking at a very, I'd used

780
00:55:18,880 --> 00:55:22,600
Chef before and I kind of got Chef, but at the same time, when I'm doing my

781
00:55:22,600 --> 00:55:27,440
research, I came across this thing called Terraform and, and I'm like, immediately

782
00:55:27,440 --> 00:55:30,440
Terraform had the capability for me to deploy this Lambda.

783
00:55:30,440 --> 00:55:35,559
And I figured it out literally in a, um, in an evening when I was just sitting on

784
00:55:35,559 --> 00:55:41,239
the sofa, working, uh, watching TV with my wife and that was, you know, it just

785
00:55:41,239 --> 00:55:41,839
resonated.

786
00:55:42,160 --> 00:55:45,440
So then I took that back to, to the team and they're like, well, we don't use

787
00:55:45,440 --> 00:55:46,600
Terraform, we use Ansible.

788
00:55:46,600 --> 00:55:49,079
But again, we had this agreement.

789
00:55:49,079 --> 00:55:52,720
It was like, well, if it's simple enough, we can understand it and you understand

790
00:55:52,720 --> 00:55:55,679
it and you're happy, then we can come to a compromise.

791
00:55:56,679 --> 00:56:00,839
And that, that for me, when I was actually looking through that Terraform

792
00:56:01,040 --> 00:56:05,359
documentation and working through that role, and at the time I was, I wasn't so

793
00:56:05,359 --> 00:56:06,559
happy in my current role.

794
00:56:06,559 --> 00:56:10,880
It was, there were organizational challenges, which, which was like sad

795
00:56:10,880 --> 00:56:15,079
because I loved the team and I loved the work, but there was a little link at the

796
00:56:15,079 --> 00:56:18,119
bottom of the Terraform documentation, which is like, come work at HashiCorp.

797
00:56:18,440 --> 00:56:21,640
And I remember sitting and complaining to my wife and she said, look, why don't

798
00:56:21,640 --> 00:56:22,519
you just go find a new job?

799
00:56:22,799 --> 00:56:25,079
And I saw this link at the bottom of the Terraform documentation because I've

800
00:56:25,119 --> 00:56:28,799
been working on how to deploy my Lambda and I clicked on it and there was a role

801
00:56:28,799 --> 00:56:31,000
for a developer advocate based in the US.

802
00:56:31,600 --> 00:56:34,760
So I filled in the form and I sent off an email and I said, Hey, look, I live in

803
00:56:34,760 --> 00:56:39,200
London, but I can move to the US or can you possibly move the rule to, to London?

804
00:56:40,119 --> 00:56:42,079
Well, seven years later, I'm still there.

805
00:56:42,079 --> 00:56:45,279
So I'm very fond of Terraform.

806
00:56:46,880 --> 00:56:47,239
Yeah.

807
00:56:47,480 --> 00:56:54,920
Maybe I can add a bit like, I knew about Terraform and then I tried it

808
00:56:54,959 --> 00:57:03,000
out and I don't know that was, yeah, a few years back and I really upped my game.

809
00:57:03,040 --> 00:57:07,119
So I would say like, if you're interested in infrastructure,

810
00:57:07,119 --> 00:57:09,160
you really need to learn it.

811
00:57:09,320 --> 00:57:19,839
And for me as a independent consultant, I need to try out a lot of stuff.

812
00:57:19,839 --> 00:57:28,000
So I don't move somewhere and I don't, I don't get super familiarized into AWS,

813
00:57:28,000 --> 00:57:31,119
into specific services that a company might use.

814
00:57:32,359 --> 00:57:42,760
So I want to maintain a broad knowledge of everything that is there, but I also

815
00:57:42,799 --> 00:57:47,799
want to dive in so much that I can deliver.

816
00:57:49,640 --> 00:57:56,040
And for me having, so Terraform comes with providers which implement different

817
00:57:56,040 --> 00:58:05,040
cloud providers and the documentation of all the resources in Terraform are kind

818
00:58:05,040 --> 00:58:12,119
of documented in a standard way because they just document the resources

819
00:58:12,119 --> 00:58:18,920
themselves and for me nowadays, it's so much easier to try out different

820
00:58:18,920 --> 00:58:24,839
clouds, just like move around, just like use DigitalOcean, use Vultr, use

821
00:58:24,839 --> 00:58:29,480
Linode for my smaller companies and then all the three big clouds for other

822
00:58:29,480 --> 00:58:32,840
customers and it really, really helped me out.

823
00:58:32,880 --> 00:58:38,000
And I also didn't have this bad feeling, you know, when I came to the office and

824
00:58:38,000 --> 00:58:41,359
then I click around the dashboard the whole day, right.

825
00:58:41,359 --> 00:58:46,200
And then I was like, cool, this is well, kind of expensive, right?

826
00:58:46,200 --> 00:58:50,479
It will cost me probably, I don't know, 40 euros a day, but I don't want to delete

827
00:58:50,520 --> 00:58:54,840
everything right now because tomorrow morning I will have to do the same drill.

828
00:58:54,919 --> 00:58:55,440
Right.

829
00:58:55,760 --> 00:58:59,200
And if you're clicking through a UI to do that, then you might

830
00:58:59,200 --> 00:59:01,000
not be able to reproduce it.

831
00:59:01,520 --> 00:59:04,320
And I think this is a key thing as well, like when people are saying like, well,

832
00:59:04,320 --> 00:59:06,280
why should we bother using infrastructure as code?

833
00:59:06,280 --> 00:59:09,520
I can click a button to create my Kubernetes cluster or I can click some

834
00:59:09,520 --> 00:59:12,880
more buttons to set up the load balancer and the security rules and stuff like that.

835
00:59:13,479 --> 00:59:14,080
And that's great.

836
00:59:14,080 --> 00:59:18,440
But what if somebody comes in and deletes your project?

837
00:59:18,880 --> 00:59:25,080
And it was like to my buddy, Eric and I, we did a, we were doing a talk on

838
00:59:25,080 --> 00:59:30,520
Terraform for DigitalOcean a few years back and the premise was all about using

839
00:59:30,520 --> 00:59:32,960
Terraform to provision DigitalOcean clusters.

840
00:59:33,760 --> 00:59:38,599
And so we're setting all of this up and we built everything up in Terraform and

841
00:59:38,640 --> 00:59:40,760
Eric said, Hey, can you, we had a couple of clusters.

842
00:59:40,760 --> 00:59:42,599
He's like, can you delete this cluster?

843
00:59:42,840 --> 00:59:47,520
So I went into the UI and I just clicked a button and I just, I deleted the wrong

844
00:59:47,520 --> 00:59:53,119
cluster, so I actually wiped out our main infrastructure cluster and like, and I'm

845
00:59:53,119 --> 00:59:59,080
like, um, yeah, Eric, I've just deleted the production infrastructure and he's

846
00:59:59,080 --> 01:00:02,400
like, well, that was stupid and I'm like, well, yeah, well, what do you expect?

847
01:00:02,760 --> 01:00:07,200
Anyway, but this was kind of going into the talk and then I'm like, but hang on

848
01:00:07,200 --> 01:00:11,159
we've already defined this with Terraform, so Terraform apply five minutes later,

849
01:00:11,159 --> 01:00:17,280
it was all back up, you know, and, and this was, it was kind of in some ways

850
01:00:17,280 --> 01:00:19,919
like, you know, we're doing this talk about why you should use infrastructure

851
01:00:19,919 --> 01:00:24,080
as code and I'd actually proven the point by doing the thing that I was

852
01:00:24,080 --> 01:00:25,719
trying to say you shouldn't ever do.

853
01:00:25,880 --> 01:00:26,380
Yeah.

854
01:00:26,799 --> 01:00:29,719
And, um, and that was, that was amazing.

855
01:00:29,719 --> 01:00:35,080
Like the ability to basically always reproduce what you've, you've created

856
01:00:35,080 --> 01:00:40,640
just by running this, this, um, this one command, this Terraform apply, or tear

857
01:00:40,640 --> 01:00:45,200
it down again, being able to remove everything so you can save money because

858
01:00:45,280 --> 01:00:47,960
it's not just production infrastructure that we've got, we've got test

859
01:00:47,960 --> 01:00:50,960
environments, thousands of dev environments, thousands of test

860
01:00:50,960 --> 01:00:54,520
environments, prod, pre-prod, like depending on the size of the

861
01:00:54,520 --> 01:00:57,640
organization, a lot of, a lot of things.

862
01:00:58,640 --> 01:01:01,640
If you can define that declaratively and you can be a hundred percent

863
01:01:01,640 --> 01:01:05,000
certain, nigh on a hundred percent certain that when you do Terraform

864
01:01:05,000 --> 01:01:09,960
apply, you get exactly what you had the last time, then with safety, you

865
01:01:09,960 --> 01:01:13,440
can tear stuff down and you can start saving, saving money and saving

866
01:01:13,440 --> 01:01:16,080
resources, but it also helps with experimentation.

867
01:01:16,080 --> 01:01:20,599
And I think this is like core to the ethos of where Hashcorp are thinking

868
01:01:20,599 --> 01:01:23,679
with things like Terraform and things like Packer about the, you might've

869
01:01:23,679 --> 01:01:25,479
heard the term cattle, not pets.

870
01:01:26,239 --> 01:01:29,640
I, um, I think it's, it's core, right?

871
01:01:29,640 --> 01:01:33,440
It's like, so rather than having this additive process where you'll install

872
01:01:33,440 --> 01:01:37,440
software on top of software, what you do is you create something brand new,

873
01:01:37,440 --> 01:01:40,679
which has that combination stack and you throw the old stuff away.

874
01:01:41,799 --> 01:01:44,719
And the reason for that is that it's reproducible.

875
01:01:45,000 --> 01:01:48,559
It's not always reproducible to recreate the layers.

876
01:01:48,960 --> 01:01:52,559
Um, if, if you've done that as in a sort of a layered approach, because

877
01:01:53,000 --> 01:01:58,200
software packages change, um, software packages may be unavailable.

878
01:01:58,239 --> 01:01:59,719
There may be an outage.

879
01:02:00,000 --> 01:02:04,760
Like what happens if there's an outage on apt and you don't have like a, you

880
01:02:04,760 --> 01:02:08,159
know, a, a sort of a cache when you're trying to draw, deploy some production

881
01:02:08,159 --> 01:02:12,359
infrastructure in the middle of an outage or you're in trouble, but, but if

882
01:02:12,359 --> 01:02:14,799
you take the kind of the declarative approach with Packer and you've got

883
01:02:14,799 --> 01:02:19,159
these baked images, then it doesn't remove the risk.

884
01:02:19,159 --> 01:02:24,640
It reduces the, the kind of the risk and increases, um, speed as well.

885
01:02:24,640 --> 01:02:26,640
So I think it's a great tool.

886
01:02:26,760 --> 01:02:30,280
Like I'm, uh, I, I completely agree.

887
01:02:30,280 --> 01:02:37,919
And I'll ask the, like for the audience or the, the, the, the, the, let's say

888
01:02:38,760 --> 01:02:44,960
CIS admins who are the companies that are not yet using Terraform or not yet

889
01:02:45,559 --> 01:02:50,559
trying to define their infrastructure as code, uh, there's this question

890
01:02:50,559 --> 01:02:53,640
of how to introduce Terraform.

891
01:02:53,960 --> 01:02:57,000
Once you already have something deployed, so once like the

892
01:02:57,000 --> 01:02:58,359
production is already there.

893
01:02:58,679 --> 01:03:01,200
So this is like the most common use case.

894
01:03:01,239 --> 01:03:05,520
What to do, because Terraform is great for greenfield deployment for deploying

895
01:03:05,520 --> 01:03:08,000
something new for starting from scratch.

896
01:03:08,119 --> 01:03:08,599
Awesome.

897
01:03:09,000 --> 01:03:09,239
Yeah.

898
01:03:09,320 --> 01:03:14,000
What to do in cases when like there's so much legacy in production.

899
01:03:14,640 --> 01:03:19,640
Well, how to introduce, you have any, any bits and tricks, how

900
01:03:19,640 --> 01:03:22,520
to, how to, um, do this kind of shift?

901
01:03:22,719 --> 01:03:23,000
Yeah.

902
01:03:23,000 --> 01:03:26,119
So it, I mean, it's always been possible to Terraformify.

903
01:03:26,239 --> 01:03:29,479
Is that, I probably created a thing like if marketing are watching, I'm sorry.

904
01:03:30,440 --> 01:03:32,320
Um, but Terraformify is now a thing.

905
01:03:32,719 --> 01:03:36,599
Um, it's always been possible to, to turn existing infrastructure into

906
01:03:36,599 --> 01:03:39,159
Terraform because there's always been the, the import command.

907
01:03:39,799 --> 01:03:42,919
The problem that's always been with the import command is it

908
01:03:42,919 --> 01:03:45,840
would just bring in the state.

909
01:03:46,039 --> 01:03:49,719
So for folks who are not familiar with Terraform, you've got this concept

910
01:03:49,719 --> 01:03:54,640
of state, which defines what exists and then your Terraform

911
01:03:54,640 --> 01:03:56,280
configuration is what will be.

912
01:03:58,200 --> 01:04:01,559
Now, when you've got an existing resource, you need

913
01:04:01,559 --> 01:04:03,479
configuration and you need state.

914
01:04:03,679 --> 01:04:06,520
So the import command would just create the state, which meant you

915
01:04:06,520 --> 01:04:10,960
then had to go and write the, you know, you had to go and write the, the

916
01:04:10,960 --> 01:04:16,000
HCL for each of those things, which matched the state and it was, I mean,

917
01:04:16,000 --> 01:04:18,880
it was possible, I mean, you could automate it in some aspects, but it

918
01:04:19,039 --> 01:04:20,000
was, it was time consuming.

919
01:04:20,000 --> 01:04:22,919
It was a bit of a, it was a bit of a chore and there was tooling.

920
01:04:23,359 --> 01:04:27,400
Um, I think it was Terraform, it was maybe like a Google project, which,

921
01:04:27,479 --> 01:04:29,760
which could, can do some of this stuff.

922
01:04:30,960 --> 01:04:34,679
But what we did in the last release of, um, Terraform, which just came

923
01:04:34,679 --> 01:04:40,479
out this summer is we've updated the import command, so now you can

924
01:04:40,520 --> 01:04:45,640
actually define an import stanza, point it to an existing resource in your

925
01:04:45,640 --> 01:04:49,919
cloud and what Terraform will do is it will both import the state and

926
01:04:49,919 --> 01:04:51,640
it will generate the HCL for you.

927
01:04:52,159 --> 01:04:57,679
So you, you know, you can take even large existing pieces of infrastructure

928
01:04:58,039 --> 01:04:59,520
and start kind of pulling them in.

929
01:04:59,520 --> 01:05:03,039
So you can start managing them with, with Terraform, which, which

930
01:05:03,039 --> 01:05:04,239
I think is a good step forward.

931
01:05:04,239 --> 01:05:06,239
And again, this isn't an early stage feature.

932
01:05:06,239 --> 01:05:07,919
It was only, only this summer.

933
01:05:07,919 --> 01:05:09,799
And there's a lot more to do with that.

934
01:05:09,799 --> 01:05:13,400
And, and of course people like to modularize things.

935
01:05:13,400 --> 01:05:16,799
So it, it's not going to figure all of that out for you, but it, it's

936
01:05:16,799 --> 01:05:21,719
definitely better than having to like hand, hand roll all of this stuff.

937
01:05:22,919 --> 01:05:24,080
So I think you can do it.

938
01:05:24,239 --> 01:05:28,719
Um, and I think there's, I think it's worth doing, but, but I think

939
01:05:28,719 --> 01:05:31,640
like, should you, should you do everything?

940
01:05:31,679 --> 01:05:33,520
I mean, as an exercise that could be expensive.

941
01:05:33,520 --> 01:05:36,400
So maybe what you've got to look at is what is changing all of the time?

942
01:05:37,080 --> 01:05:41,760
Like, so if for example, you've got 20 servers and only one of them changes,

943
01:05:42,400 --> 01:05:46,760
maybe just the important thing is just to Terraform that one, that one server.

944
01:05:47,280 --> 01:05:51,359
Uh, it doesn't have to be an exercise where it's all or nothing, but, but I

945
01:05:51,359 --> 01:05:55,479
definitely think there is a benefit that wherever there is change that you, if you

946
01:05:55,479 --> 01:06:02,320
manage that change with Terraform, you are reducing your, your risk, um, because

947
01:06:02,320 --> 01:06:07,039
of the, the, the knowledge you get from the, the change diffs, um, but again,

948
01:06:07,039 --> 01:06:10,640
that, that reproducibility, that consistency, the, the ability to recreate

949
01:06:10,640 --> 01:06:14,880
something, if somebody goes into your production and clicks the big red button

950
01:06:14,880 --> 01:06:21,880
and then just blindly copies the delete thing into the box and then realizes

951
01:06:21,880 --> 01:06:24,280
that that was actually the wrong account that they've done it in, and they've

952
01:06:24,280 --> 01:06:25,239
just deleted the production.

953
01:06:26,280 --> 01:06:29,159
That's a great disaster recovery exercise.

954
01:06:29,520 --> 01:06:30,359
That's how we learn.

955
01:06:30,960 --> 01:06:31,799
I mean, right.

956
01:06:31,840 --> 01:06:32,159
Yeah.

957
01:06:32,159 --> 01:06:36,840
If, if, if you did your homework right and, uh, the, the, the Terraform, uh,

958
01:06:37,000 --> 01:06:39,119
like it's, it's written correctly.

959
01:06:39,280 --> 01:06:41,599
Like this is one way to, to actually test it.

960
01:06:41,840 --> 01:06:42,080
Yeah.

961
01:06:42,080 --> 01:06:43,599
And I think that's the nice thing, right?

962
01:06:43,599 --> 01:06:47,400
Like, so when you, you, you have this common workflow, the there's, so I mean,

963
01:06:47,400 --> 01:06:50,760
Terraform will work with multiple clouds.

964
01:06:50,840 --> 01:06:55,200
It doesn't like, if you can know how to, the resource standards for

965
01:06:55,200 --> 01:07:00,640
defining a virtual machine in AWS is different to the one in GCP and in

966
01:07:00,640 --> 01:07:04,479
Azure and in DigitalOcean, subtle differences because each of those

967
01:07:04,479 --> 01:07:06,640
clouds have got different features and capabilities.

968
01:07:07,640 --> 01:07:10,560
But the thing is around the workflow, if you understand the workflow, if you

969
01:07:10,560 --> 01:07:15,079
understand how Terraform plan, how it apply works, how destroy works, how you

970
01:07:15,079 --> 01:07:19,880
define resources and you can create variables and modularization and, and

971
01:07:19,880 --> 01:07:24,800
then the, the, the kind of the workflow of automating that, so using Terraform

972
01:07:24,800 --> 01:07:30,079
within multiple environments, um, and doing automated deploys, when you get

973
01:07:30,079 --> 01:07:34,479
good at that, what it means is that you can, your disaster recovery is

974
01:07:34,479 --> 01:07:37,199
potentially getting tested every time you do a build.

975
01:07:37,199 --> 01:07:43,079
So if you do a build to dev, you're also kind of testing the, the Terraform code,

976
01:07:43,079 --> 01:07:44,680
which is going to deploy your products.

977
01:07:44,680 --> 01:07:49,000
And so you'll, you'll catch things that maybe I'm using a, an out of date schema

978
01:07:49,000 --> 01:07:52,439
or maybe there's a configuration problem.

979
01:07:53,160 --> 01:07:59,479
Um, so I think it, it just massively reduces the, your risk and gives you

980
01:07:59,479 --> 01:08:04,199
this, this, this great capability to, to recover in the incident that something

981
01:08:04,199 --> 01:08:08,640
does happen, um, which, which has got to be a good thing.

982
01:08:10,079 --> 01:08:10,359
Yeah.

983
01:08:10,439 --> 01:08:10,640
Yeah.

984
01:08:10,640 --> 01:08:11,079
You're right.

985
01:08:11,719 --> 01:08:18,000
Um, recently there have been a lot of news about Terraform and a license change.

986
01:08:18,040 --> 01:08:18,280
Yeah.

987
01:08:18,839 --> 01:08:23,000
Um, and yeah, we just want to ask you what's the fuss all about?

988
01:08:23,640 --> 01:08:27,280
I mean, I think, I think folks are, so there's been the change.

989
01:08:27,280 --> 01:08:32,920
The change has been that we've, we've, we've relicensed Terraform core to a BSL

990
01:08:32,920 --> 01:08:37,040
license so that that BSL license has certain restrictions on use.

991
01:08:37,239 --> 01:08:41,839
Now the, without kind of going right into the terms of the, the kind of the legal

992
01:08:41,839 --> 01:08:49,640
side of things that the terms of, of kind of the restrictions are that for 99.999999%

993
01:08:49,640 --> 01:08:54,040
of people who were using Terraform, they can continue to do so.

994
01:08:54,040 --> 01:08:58,640
And they continue to use it for free without any implications on the license.

995
01:08:59,040 --> 01:09:04,800
What the, the license change was, was kind of is really where it really starts

996
01:09:04,800 --> 01:09:11,719
restriction is if, for example, say you're building a Terraform cloud, then that,

997
01:09:11,760 --> 01:09:14,479
that the, the license then starts coming into a force.

998
01:09:14,479 --> 01:09:18,319
So because you're in, you're creating a service using Terraform, which is in

999
01:09:18,319 --> 01:09:21,640
competition to one of, one of HashiCorp's services.

1000
01:09:22,640 --> 01:09:26,400
Now, again, I just want to kind of say that that's not necessarily a, a sort

1001
01:09:26,400 --> 01:09:30,359
of a, a pure black or white thing, because we do have the capabilities

1002
01:09:30,359 --> 01:09:31,520
around license exemption.

1003
01:09:31,520 --> 01:09:35,479
So if you're, you know, say for example, you're just, you've got an internal

1004
01:09:35,479 --> 01:09:40,680
platform, which is using Terraform and your, maybe there's a gray area of it.

1005
01:09:40,680 --> 01:09:42,520
You're in a competing business with HashiCorp.

1006
01:09:42,520 --> 01:09:43,719
Can you still use Terraform?

1007
01:09:44,000 --> 01:09:47,640
I mean, I think the answer is probably yes, but in the, the, the licensing

1008
01:09:47,640 --> 01:09:53,319
folks will, will, will sort of, will, will help you out, clarify that.

1009
01:09:54,280 --> 01:09:56,280
So I think a lot of folks were like, well, why did we do it?

1010
01:09:56,640 --> 01:09:59,839
Is this not mega evil corp?

1011
01:09:59,880 --> 01:10:02,839
Are we, are we kind of like, you know, are we, are we going against

1012
01:10:02,839 --> 01:10:04,920
the spirit of, of, of open source?

1013
01:10:05,439 --> 01:10:09,599
And, and I think the key thing is that the code is still open now.

1014
01:10:09,599 --> 01:10:13,160
So it is technically always going to be open.

1015
01:10:13,839 --> 01:10:18,959
If you want, you can fork Terraform and prior to the sort of the BSL license

1016
01:10:18,959 --> 01:10:21,920
change, you can do what you want with, with that code, it's still the, I think

1017
01:10:21,920 --> 01:10:28,640
it was MPL or whatever, so that, and the, the future code will always be publicly

1018
01:10:28,640 --> 01:10:30,760
available, obviously with the, the BSL license.

1019
01:10:30,760 --> 01:10:35,280
So as we add new features to Terraform, that code will be completely transparent

1020
01:10:36,000 --> 01:10:40,839
and available inside of the, the, the public repo.

1021
01:10:41,119 --> 01:10:46,400
And again, I just want to add as well, it is sort of Vault, Nomad, console, et cetera.

1022
01:10:47,079 --> 01:10:52,520
Now, what we haven't changed on a licensing perspective are things like the

1023
01:10:52,520 --> 01:10:58,640
providers, because the, the providers are in most instances, not, not actually our

1024
01:10:58,640 --> 01:11:02,599
code, so, so for example, the folks at DigitalOcean build their own provider,

1025
01:11:02,680 --> 01:11:06,719
Google contribute to their own providers, as do Microsoft, as do sort of Amazon.

1026
01:11:07,640 --> 01:11:11,400
That, that license hasn't, hasn't changed.

1027
01:11:12,560 --> 01:11:15,439
Like, why did we do it?

1028
01:11:15,479 --> 01:11:16,400
I think that's the key thing.

1029
01:11:16,400 --> 01:11:17,599
Like, why would you do this?

1030
01:11:17,719 --> 01:11:23,959
I mean, the, the thing is that with, HashiCorp invests and has invested over

1031
01:11:23,959 --> 01:11:29,079
the sort of the last sort of 10 years, quite a large amount of money into, into

1032
01:11:29,079 --> 01:11:34,359
Terraform, obviously Terraform would nowhere near be as, as, as popular as it

1033
01:11:34,359 --> 01:11:39,239
is if it hadn't been for, for wonderful sort of community contribution, but we

1034
01:11:39,239 --> 01:11:46,920
have a huge number of sort of engineers and product engineers, you know, a huge

1035
01:11:46,920 --> 01:11:51,920
amount of support that goes into that, which way that we made money from

1036
01:11:51,920 --> 01:11:55,760
Terraform as a, as an entity, I mean, we're, you know, we're a company that

1037
01:11:55,760 --> 01:11:58,359
was through Terraform, Terraform cloud.

1038
01:11:59,280 --> 01:12:04,439
And the, the kind of, I think that the drive around the change is to kind of

1039
01:12:04,439 --> 01:12:08,520
protect that investment, because if we can do that, what it means is we can keep

1040
01:12:08,520 --> 01:12:12,319
those engineers because we don't, you know, we want to keep the engineers and

1041
01:12:12,319 --> 01:12:13,920
we want to keep innovating on Terraform.

1042
01:12:13,920 --> 01:12:16,040
We want to keep putting that knowledge in.

1043
01:12:16,040 --> 01:12:20,160
We want to keep it as a, as an amazing tool that most of the

1044
01:12:20,160 --> 01:12:22,560
community can use, use for free.

1045
01:12:23,439 --> 01:12:27,079
And, and I think that was kind of the, you know, that's the, the, the primary

1046
01:12:27,079 --> 01:12:29,479
sort of motive behind the change.

1047
01:12:29,479 --> 01:12:32,479
It's, it's not that we're kind of moving this as a precursor to one

1048
01:12:32,479 --> 01:12:34,880
day, it's just going to be like, Hey, we're going to stop using Terraform.

1049
01:12:34,880 --> 01:12:37,280
And everybody's been like hoodwinked and you're now going to have

1050
01:12:37,280 --> 01:12:39,680
to pay us mega dollars to rebuild.

1051
01:12:39,719 --> 01:12:41,479
No, no, no, no, not in the slightest.

1052
01:12:41,880 --> 01:12:44,640
It's, it's literally just, we're just trying to protect that investment.

1053
01:12:45,160 --> 01:12:49,599
99.999999% of people you have, nothing's changed.

1054
01:12:50,280 --> 01:12:58,680
Um, and the, the main argument that I like saw from the community is like,

1055
01:12:59,239 --> 01:13:06,400
this is so widely defined that like, it's, it's not black and white.

1056
01:13:06,520 --> 01:13:06,800
Yeah.

1057
01:13:07,000 --> 01:13:09,000
And it's hard to say.

1058
01:13:09,319 --> 01:13:15,880
Uh, and I think this is the, the, why, why everybody in everybody active in,

1059
01:13:15,880 --> 01:13:20,599
in, in communities is, is, is sort of a saying now that like

1060
01:13:20,839 --> 01:13:22,599
HashiCorp is now the evil corp.

1061
01:13:23,079 --> 01:13:23,359
Yeah.

1062
01:13:23,359 --> 01:13:26,760
I mean, I think, you know, we, I, I, I'll be honest with you.

1063
01:13:26,760 --> 01:13:30,040
I think we, you know, we weren't the first people to, to do this.

1064
01:13:30,040 --> 01:13:33,280
Um, there's been a number of companies who've relicensed open

1065
01:13:33,280 --> 01:13:35,000
source to protect their investments.

1066
01:13:35,520 --> 01:13:37,719
And I probably won't be the last either.

1067
01:13:38,160 --> 01:13:41,680
I think if, if anything, if there's criticism that we've, we've maybe not

1068
01:13:41,680 --> 01:13:45,479
managed the, the information on, on the change, then, you know, we'll, we'll

1069
01:13:45,479 --> 01:13:48,400
take that and, and see if we can do a better job around that.

1070
01:13:49,920 --> 01:13:53,680
I think it is complex because it is quite a, like, I mean, even if you

1071
01:13:53,680 --> 01:13:57,760
read something like the NPL or a GPL license, they are, for me, I'm not a

1072
01:13:57,760 --> 01:14:04,520
legal person, it's, it's a, it's a complicated document, so maybe that is,

1073
01:14:04,560 --> 01:14:10,880
um, that, that can be confusing that you look at this wall of text, but, but

1074
01:14:10,880 --> 01:14:17,520
ultimately the, let's say the key thing is that if you're not in an organization,

1075
01:14:17,520 --> 01:14:21,520
which is directly competing against any of HashiCorp services, you're unaffected.

1076
01:14:22,479 --> 01:14:27,319
If you're unsure, then I think it's licensing at hashicorp.com.

1077
01:14:27,599 --> 01:14:31,400
You can sort of get you in touch with, with somebody, or if you're coming

1078
01:14:31,400 --> 01:14:36,760
to HashiConf, we're going to have, um, folks there who will be able to help

1079
01:14:36,760 --> 01:14:38,959
with licensing queries and things like that.

1080
01:14:39,959 --> 01:14:42,319
We're more than happy to, to sort of clarify those.

1081
01:14:42,319 --> 01:14:46,119
And I would like to bet that like most of the time it's going to be, you know, you're fine.

1082
01:14:46,839 --> 01:14:51,000
Um, and, and it's certainly nothing we wanted to do deliberately.

1083
01:14:51,000 --> 01:14:53,640
You know, we, we, we didn't want to cause any upset.

1084
01:14:53,640 --> 01:14:58,119
It wasn't, um, and, and I, uh, any, anything sort of

1085
01:14:58,119 --> 01:14:59,199
malicious or anything like that.

1086
01:14:59,199 --> 01:14:59,400
We.

1087
01:15:00,000 --> 01:15:04,320
We're really just trying to protect the investment so that we can keep

1088
01:15:04,320 --> 01:15:10,340
investing and keep, um, keep, keep, keep expanding Terraform's capabilities

1089
01:15:10,340 --> 01:15:14,680
and, and, um, make it a even better and better product and something we can

1090
01:15:14,680 --> 01:15:16,080
use for the next decade as well.

1091
01:15:17,020 --> 01:15:24,200
Um, I know if you can maybe like comment now that the community now

1092
01:15:24,400 --> 01:15:27,360
opened, uh, open TF or open TOFU.

1093
01:15:27,360 --> 01:15:33,799
Uh, so basically it's a, it's a, it's a fork of, of previous, previous

1094
01:15:33,840 --> 01:15:35,880
version of, of, of Terraform.

1095
01:15:35,919 --> 01:15:38,080
Um, I don't know.

1096
01:15:38,360 --> 01:15:38,639
Yeah.

1097
01:15:38,680 --> 01:15:40,720
What, what could we expect?

1098
01:15:41,240 --> 01:15:44,480
Because we, we definitely saw this in, in, in the past.

1099
01:15:44,639 --> 01:15:45,000
Yeah.

1100
01:15:45,119 --> 01:15:54,320
Um, and, uh, in the end, this kind of fighting, it's not like, it's not good.

1101
01:15:54,360 --> 01:15:57,000
No, of course it doesn't bring any, any, any

1102
01:15:57,000 --> 01:15:57,680
progress.

1103
01:15:58,599 --> 01:16:03,400
No, I mean, so I think, I mean, that was, that was perfectly a legitimate thing.

1104
01:16:03,400 --> 01:16:06,879
And, um, so open TOFU exists.

1105
01:16:06,919 --> 01:16:12,239
Um, it was created by, uh, a few organizations who were obviously

1106
01:16:12,239 --> 01:16:17,160
affected by the license, but who also felt strongly about the license change

1107
01:16:17,160 --> 01:16:20,239
and wanted to, to keep things on a, uh, an MPL license.

1108
01:16:21,760 --> 01:16:26,320
Now what that they're, they're obviously doing there, they've created the fork.

1109
01:16:26,320 --> 01:16:31,199
They will then create a distribution, um, and a registry and all of those

1110
01:16:31,199 --> 01:16:36,000
sorts of things, which, um, are in line with, with the sort of the license.

1111
01:16:36,400 --> 01:16:38,720
I don't know what the future will hold.

1112
01:16:38,800 --> 01:16:44,199
It, um, it's, it's difficult to kind of, to say like, will one win out?

1113
01:16:44,199 --> 01:16:49,720
Will we end up with, with the sort of the, like Jenkins Hudson or something

1114
01:16:49,720 --> 01:16:51,279
along those lines, I just don't know.

1115
01:16:51,320 --> 01:16:57,080
Like all I can say is that as an organization, HashiCorp is 1000%

1116
01:16:57,120 --> 01:17:02,919
committed to creating Terraform as the best tool that we can offer the industry

1117
01:17:03,239 --> 01:17:07,720
to be able to create the best support and services, um, around it.

1118
01:17:08,039 --> 01:17:11,160
And, and that we're going to sort of continue to do that.

1119
01:17:12,119 --> 01:17:17,320
Does it mean that sort of, um, providers will kind of dry up and disappear then?

1120
01:17:17,360 --> 01:17:18,679
You know, I mean, very possibly, right.

1121
01:17:18,679 --> 01:17:22,360
Some, some, some, some people might determine that they're no longer wants

1122
01:17:22,360 --> 01:17:24,199
to, to create a provider for Terraform.

1123
01:17:24,440 --> 01:17:27,279
Some people might say they don't want to create a provider for OpenTofu.

1124
01:17:27,679 --> 01:17:31,559
Some people might end up creating both and having to support the two.

1125
01:17:32,039 --> 01:17:37,160
So it's, um, I guess, you know, we just, it's, it's early days.

1126
01:17:37,199 --> 01:17:41,600
Like, I mean, we, we just have to wait and see, wait and see how

1127
01:17:41,600 --> 01:17:44,039
things, um, wait and things pan out.

1128
01:17:44,039 --> 01:17:47,839
But as I say, all I can say is as a HashiCorp representative, we are

1129
01:17:47,839 --> 01:17:54,119
committed to keeping Terraform free for, for the vast majority of people

1130
01:17:54,119 --> 01:18:01,119
were committed to creating the best tool that it can be and, um, yeah,

1131
01:18:01,119 --> 01:18:04,360
like we, you know, we genuinely love the community and everything that

1132
01:18:04,360 --> 01:18:05,360
they've done to support that.

1133
01:18:05,360 --> 01:18:09,559
And, um, if anybody feels aggrieved by the things that we've done and I, you

1134
01:18:09,559 --> 01:18:13,600
know, I can apologize personally from that, but, but it is, you know, it's,

1135
01:18:13,800 --> 01:18:18,919
it's a thing we want to, we want to keep things to be able to protect.

1136
01:18:19,440 --> 01:18:22,440
And so we can keep it pushed forward.

1137
01:18:23,479 --> 01:18:24,839
I don't know what else I can say around those things.

1138
01:18:24,839 --> 01:18:27,279
I think it's, yeah, I couldn't, I can understand that.

1139
01:18:27,279 --> 01:18:33,720
Like even company needs to do some trade-offs and, and, and, and like it

1140
01:18:33,720 --> 01:18:35,559
can't be like win for everyone.

1141
01:18:35,720 --> 01:18:36,080
Yeah.

1142
01:18:36,240 --> 01:18:40,160
Um, but in that sense, I completely understand you.

1143
01:18:40,559 --> 01:18:48,520
Um, and, um, I can also imagine like the, the fuss on the other side, but, but still.

1144
01:18:48,919 --> 01:18:49,240
Yeah.

1145
01:18:49,240 --> 01:18:51,199
And I, and I, I understand that as well.

1146
01:18:51,199 --> 01:18:56,119
I mean, I'm, I am an open source user as well, but like for me and, and I, and I'll

1147
01:18:56,119 --> 01:18:59,960
be honest with you, like, and I'm talking on a personal level here, not, um, sort

1148
01:18:59,960 --> 01:19:05,320
of ignore the H on my shirt, but when, when we made this sort of change and I

1149
01:19:05,320 --> 01:19:08,919
sat down and I'm sort of in my head trying to rationalize, well, what does

1150
01:19:08,919 --> 01:19:11,559
open source actually mean, mean to me?

1151
01:19:12,320 --> 01:19:16,799
And, and I thought about this and like, and to be honest, I started looking

1152
01:19:16,799 --> 01:19:19,119
and I'm like, I very rarely actually look at the license.

1153
01:19:19,119 --> 01:19:24,839
The key thing for me was the ability to benefit from somebody else's learning.

1154
01:19:24,839 --> 01:19:27,279
The, the ability to, to not have to reinvent the wheel.

1155
01:19:27,279 --> 01:19:32,559
I mean, back to my JPEG example, like not having to do that every time.

1156
01:19:33,239 --> 01:19:38,959
As a, as somebody who has an open source project, spend a large amount of

1157
01:19:38,959 --> 01:19:43,839
my own personal time working on, I mean, we've been sort of thinking, well, you

1158
01:19:43,839 --> 01:19:51,359
know, is, is the NPL license really, is it, is it, is it work for me as an individual?

1159
01:19:51,839 --> 01:19:57,000
Um, but, but in general, like the, the thing for me that's most important is

1160
01:19:57,000 --> 01:19:59,000
that the, the source code still exists.

1161
01:19:59,040 --> 01:20:00,320
I can still see what's going on.

1162
01:20:00,320 --> 01:20:01,480
I can still learn from it.

1163
01:20:02,079 --> 01:20:09,559
Um, and I can still consume something, uh, which was always being intended

1164
01:20:09,559 --> 01:20:14,600
that we wanted to create something which was, uh, you know, free, free to use,

1165
01:20:14,600 --> 01:20:17,279
which benefits the community as a whole.

1166
01:20:17,720 --> 01:20:19,320
So, yeah, I don't know what, like, what do you think?

1167
01:20:19,359 --> 01:20:20,640
I mean, you have opinions.

1168
01:20:20,760 --> 01:20:21,239
What, what?

1169
01:20:25,839 --> 01:20:31,839
I'm, I'm, I'm sort of, uh, looking like looking from the distance because yeah,

1170
01:20:31,880 --> 01:20:36,519
like I said, we saw that with like Mongo, we saw that with Elasticsearch.

1171
01:20:36,920 --> 01:20:44,079
Um, and I was never in a way affected.

1172
01:20:44,079 --> 01:20:51,239
So like me as a, as a, as a consultant or me as a working for, for a company,

1173
01:20:51,239 --> 01:20:56,160
but again, it, it really, again, in the end difference, whether this company

1174
01:20:56,160 --> 01:21:01,200
is actually like selling this, this product or what, what's building,

1175
01:21:01,359 --> 01:21:04,399
like reselling this, um, forward.

1176
01:21:04,959 --> 01:21:11,600
Um, and yeah, we saw that like, I, I, in a way I understand both sides.

1177
01:21:11,880 --> 01:21:15,839
Like the way you explain it now, I completely get it.

1178
01:21:16,359 --> 01:21:22,040
Um, it, and I also understand the other side saying that like things are not

1179
01:21:22,359 --> 01:21:29,119
like defined, um, the way that's like, there could be like exceptions or like,

1180
01:21:29,640 --> 01:21:30,320
and so on.

1181
01:21:30,320 --> 01:21:31,799
And, and I, yeah.

1182
01:21:32,119 --> 01:21:35,799
And I think that's like, if, if I've got criticism around that, then I

1183
01:21:35,799 --> 01:21:39,160
criticize the lawyers and I think it's, I think it's, you know, I think it's

1184
01:21:39,160 --> 01:21:43,480
fair to, to be, to, to have a kind of a, an inherent hatred of lawyers.

1185
01:21:43,480 --> 01:21:47,239
I think that they're generally kind of, if we want, we all want to kind

1186
01:21:47,239 --> 01:21:52,720
of agree on one thing, but no, I mean, the, the legal document, uh, and it

1187
01:21:52,720 --> 01:21:53,880
is a kind of a legal documents.

1188
01:21:53,880 --> 01:21:59,640
It's obviously a contractor license is, is difficult and it's, it, what we've

1189
01:21:59,640 --> 01:22:06,119
tried to do is make sure that the, the vast majority can continue as normal

1190
01:22:06,160 --> 01:22:12,040
using Terraform as they always have, but have that clause in there, which, which

1191
01:22:12,040 --> 01:22:19,320
kind of, um, stops, uh, stops folks from kind of like leveraging all of that

1192
01:22:19,320 --> 01:22:24,920
hard work for, and which, which again, affects us to, to kind of invest in

1193
01:22:24,920 --> 01:22:29,480
Terraform and with always, when you end up with that sort of thing, it, it,

1194
01:22:29,720 --> 01:22:31,040
it always becomes complex.

1195
01:22:31,040 --> 01:22:34,600
It's not, cause it's difficult to say who is a competitor, who isn't, you

1196
01:22:34,600 --> 01:22:38,239
can't really define that in the license, but again, to kind of reiterate those

1197
01:22:38,239 --> 01:22:44,600
things, like, I think if, if you think that you, you're not sure, if you're not

1198
01:22:44,600 --> 01:22:48,200
sure that you're competing with HashiCorp, I think realistically you're probably

1199
01:22:48,200 --> 01:22:53,359
not, and licensing at HashiCorp will, will be able to clarify that for you.

1200
01:22:53,359 --> 01:22:56,920
And I think they'll sort of, you can give you sort of written, um, confirmation

1201
01:22:56,920 --> 01:23:00,000
that you're, there's no sort of, uh, infringement of licensing.

1202
01:23:00,720 --> 01:23:07,359
Um, so I, um, and I hope that as I say, there's time, it's only been what, a

1203
01:23:07,359 --> 01:23:14,119
month or so that we'll, we'll get a little bit more sort of, um, used to, to

1204
01:23:14,119 --> 01:23:19,359
kind of dealing with things, but, um, yeah, like honestly, if you, if there's

1205
01:23:19,359 --> 01:23:24,559
anybody who has any, any sort of concerns, reach out to me, I'm more than happy to,

1206
01:23:24,920 --> 01:23:29,040
to, to, to chat, to, to kind of, um, put you in touch with people.

1207
01:23:29,040 --> 01:23:34,039
If you want to speak to, uh, some, some of the sort of, or get a sort of legal

1208
01:23:34,039 --> 01:23:38,760
answer from, from HashiCorp's team, then we can arrange all of those sorts of things.

1209
01:23:40,280 --> 01:23:40,599
Awesome.

1210
01:23:40,640 --> 01:23:41,159
Awesome.

1211
01:23:41,239 --> 01:23:43,679
Uh, let's go to more relaxed topics.

1212
01:23:44,799 --> 01:23:47,799
What do you do like to disconnect from all the technology?

1213
01:23:47,799 --> 01:23:49,679
Do you have like any hobbies?

1214
01:23:49,719 --> 01:23:49,960
Yeah.

1215
01:23:50,520 --> 01:23:54,719
So I, I like, well, so firstly I, I do like sport.

1216
01:23:54,760 --> 01:23:59,799
So I, um, I swim ultra, um, uh, well, marathon distance and

1217
01:23:59,799 --> 01:24:01,880
ultra marathon distance swimming.

1218
01:24:01,880 --> 01:24:06,679
So basically anything, well, marathon distance in swimming is 10 K and above.

1219
01:24:07,320 --> 01:24:14,479
Um, so I'll, I do, I do a lot of that, which is, I find very meditative.

1220
01:24:14,559 --> 01:24:19,280
I mean, if you've, um, I don't know if anybody swims or if you've, if you've

1221
01:24:19,280 --> 01:24:24,280
ever swum sort of lap swimming, it's, it's very, you know, meditative, especially

1222
01:24:24,280 --> 01:24:27,919
when, uh, if you're swimming front crawl and you've just kind of face in the water.

1223
01:24:29,039 --> 01:24:35,719
I find that, um, when you're swimming like between what could be four to six,

1224
01:24:35,719 --> 01:24:38,960
seven hours, um, it's very, very relaxing.

1225
01:24:38,960 --> 01:24:41,239
So I, and I enjoy floating around in water as well.

1226
01:24:41,239 --> 01:24:43,039
So there's, um, I do that.

1227
01:24:43,400 --> 01:24:45,000
I do like video games.

1228
01:24:45,159 --> 01:24:51,400
Um, I've, I kind of started falling into the slippery slope of sim racing

1229
01:24:51,599 --> 01:24:57,799
recently, um, which I started playing Gran Turismo 7, uh, in VR too.

1230
01:24:58,200 --> 01:24:59,479
And I enjoyed that very much.

1231
01:24:59,520 --> 01:25:01,840
And then all of a sudden the steering wheel appeals in my house.

1232
01:25:02,320 --> 01:25:06,799
And then before you know it, there's a, a, a seat and, uh, yeah,

1233
01:25:06,799 --> 01:25:08,119
that's, that's been a slippery slope.

1234
01:25:08,119 --> 01:25:13,520
And recently I've been getting into iRacing, uh, which I'm, I'm quite enjoying.

1235
01:25:13,760 --> 01:25:16,559
But, uh, I also like, you know, other video games.

1236
01:25:16,559 --> 01:25:23,400
Um, I've been playing Starfield, Baldur's Gate 3, um, yeah.

1237
01:25:23,400 --> 01:25:26,280
And, well, and then of course I, I do a lot of writing, so I'm still

1238
01:25:26,280 --> 01:25:29,440
working on my, my second book, which I'll hopefully get finished soon.

1239
01:25:29,880 --> 01:25:36,200
Uh, I'm going to start a new, uh, YouTube channel with, uh, Ivan, who's

1240
01:25:36,200 --> 01:25:39,799
hosting here today at DevOps Days, it'll be an honor, called, uh, doing

1241
01:25:39,799 --> 01:25:45,960
DevOps where we, we want to kind of get some education, uh, put some

1242
01:25:45,960 --> 01:25:50,559
education back, uh, so the concept is that, that Ivan, uh, has, has

1243
01:25:50,559 --> 01:25:52,159
learned a lot across his career.

1244
01:25:52,719 --> 01:25:58,440
And we want to be able to kind of put that back into, to helping people

1245
01:25:58,440 --> 01:26:01,200
who were in the same position as he was when he, when he first began.

1246
01:26:01,840 --> 01:26:04,840
And it's always, I enjoy doing stuff like that as well.

1247
01:26:04,840 --> 01:26:05,520
It's fun.

1248
01:26:05,559 --> 01:26:06,679
I enjoy helping people.

1249
01:26:07,640 --> 01:26:10,880
So yeah, pretty much, pretty much I walk my dog.

1250
01:26:11,119 --> 01:26:15,679
Um, I'm trying to think, eating ice cream.

1251
01:26:18,640 --> 01:26:21,559
There are some nice ice cream shops in the center of Ljubljana.

1252
01:26:21,799 --> 01:26:22,640
I can give you a list.

1253
01:26:22,679 --> 01:26:25,280
I'm hoping, yeah, later on today we'll maybe check something out.

1254
01:26:26,000 --> 01:26:26,640
Uh, awesome.

1255
01:26:26,880 --> 01:26:31,599
But, but since you, since you, since you started like, um, passing on like

1256
01:26:32,400 --> 01:26:36,479
to, to, to, to, to, to, to newbies, uh, into this world.

1257
01:26:36,479 --> 01:26:46,000
So for our audience, since there are a lot of like, um, engineers who are now

1258
01:26:46,039 --> 01:26:47,719
at the beginning of their career.

1259
01:26:48,200 --> 01:26:53,599
So I don't know, what would be your advice where to start if they are interested

1260
01:26:53,599 --> 01:26:59,000
in, in exploring the, the, the DevOps culture and so on, what, what to, what

1261
01:26:59,000 --> 01:27:03,440
would be the, the, the tools to start learning the, the, the, the, the, the

1262
01:27:03,440 --> 01:27:05,840
things that, that, that should they focus on?

1263
01:27:06,119 --> 01:27:10,359
Well, I mean, I think you, you absolutely can't go wrong with Terraform and whether

1264
01:27:10,359 --> 01:27:14,760
you kind of, um, you know, you look at that as Terraform, OpenTofu, whatever,

1265
01:27:14,919 --> 01:27:18,760
like there is a, as a tool and as a methodology, I think it's something

1266
01:27:18,760 --> 01:27:21,679
as a, that's, that's kind of here to stay, I hope.

1267
01:27:22,159 --> 01:27:25,000
Um, so I think that's definitely something to look at.

1268
01:27:25,039 --> 01:27:29,119
I think learning cloud is really hard.

1269
01:27:29,159 --> 01:27:33,880
Like I, I have, um, I spend a lot of time working between a number of different

1270
01:27:33,880 --> 01:27:38,440
sort of clouds, depending on what I'm trying to sort of show.

1271
01:27:38,479 --> 01:27:42,640
So I think having, doing say like your, your GCP AWS or Azure kind of

1272
01:27:42,640 --> 01:27:46,799
certification is always worthwhile because you can get a lot of value out

1273
01:27:46,799 --> 01:27:50,599
of how best to sort of leverage, leverage cloud.

1274
01:27:51,039 --> 01:27:55,440
Um, I think folks like DigitalOcean are exceptional as well, like, because

1275
01:27:55,440 --> 01:27:59,280
it's very, it's very accessible and you don't always need this huge amount

1276
01:27:59,280 --> 01:28:04,200
of complexity and DO does, um, a very good cloud at a very good price.

1277
01:28:04,400 --> 01:28:09,359
Um, so I think, you know, looking at something like that, one thing I will

1278
01:28:09,359 --> 01:28:12,719
say is that I think one of the things that helped me the most when I was

1279
01:28:12,719 --> 01:28:18,200
learning was that by teaching that helped me accelerate my own learning.

1280
01:28:18,599 --> 01:28:23,000
And, and I will always say to people that, you know, you, you may not

1281
01:28:23,000 --> 01:28:26,080
know as much as the expert, but I can guarantee you that if you know

1282
01:28:26,080 --> 01:28:28,559
something, you know, more than somebody else.

1283
01:28:29,119 --> 01:28:35,880
So by passing that back and by, by kind of having this culture of, of sharing

1284
01:28:35,880 --> 01:28:39,479
your knowledge, you're reinforcing that knowledge, but you're also kind of

1285
01:28:39,919 --> 01:28:43,719
helping, helping others who they can then can turn, can, can help you.

1286
01:28:43,719 --> 01:28:47,239
And then that, that, that really helps drive things.

1287
01:28:47,239 --> 01:28:51,640
So folks like yourself, I'm always incredibly appreciative of, and, um,

1288
01:28:51,679 --> 01:28:56,159
thank you so much for, for running the podcast and helping get information out

1289
01:28:56,159 --> 01:28:56,440
there.

1290
01:28:56,840 --> 01:28:59,280
Um, YouTube is incredible.

1291
01:28:59,280 --> 01:29:04,440
I mean, I, gosh, I wish it existed when, when I was starting the paper books,

1292
01:29:04,440 --> 01:29:04,719
right?

1293
01:29:04,799 --> 01:29:05,239
Oh yeah.

1294
01:29:05,239 --> 01:29:10,359
Like, I mean, I, you know, I, yeah, but I have, I have like issues with like

1295
01:29:10,599 --> 01:29:15,359
YouTube, like I was sort of, uh, like getting knowledge from, from books or

1296
01:29:15,359 --> 01:29:19,479
web pages, like you can like scan to the point where, where you need it, the,

1297
01:29:19,479 --> 01:29:23,960
the, the information because scanning to the video is, is, is problematic.

1298
01:29:24,039 --> 01:29:24,520
Yeah.

1299
01:29:24,719 --> 01:29:26,080
I'm, I'm, you know, I'm with you there.

1300
01:29:26,080 --> 01:29:32,840
So I think now video seems to be the de facto standard around how information

1301
01:29:32,840 --> 01:29:33,880
is, is produced.

1302
01:29:34,359 --> 01:29:37,359
And so for example, I'm going to, so I'm going to give you a lightning talk

1303
01:29:37,359 --> 01:29:38,080
later on today.

1304
01:29:38,080 --> 01:29:42,960
And one of the things around the lightning talk is a slide every 15 seconds.

1305
01:29:43,320 --> 01:29:46,479
There's a capability in Google slides where you can set it to auto

1306
01:29:46,479 --> 01:29:47,719
advance every 15 seconds.

1307
01:29:47,799 --> 01:29:49,359
I could not figure out where this was.

1308
01:29:49,640 --> 01:29:55,400
So I Googled it and there was a video and it was a three minute video, which

1309
01:29:55,400 --> 01:29:56,719
told me to click on three options.

1310
01:29:57,039 --> 01:30:03,679
So I think video is maybe not always the most, um, appropriate source.

1311
01:30:03,719 --> 01:30:08,479
As I say, like I'm, um, I've, I've written one book, which published about

1312
01:30:08,479 --> 01:30:11,039
five years ago, I'm working on my second one.

1313
01:30:11,559 --> 01:30:13,320
Um, I do like video.

1314
01:30:13,479 --> 01:30:17,200
I enjoy creating video and I quite enjoy watching video.

1315
01:30:17,760 --> 01:30:23,320
Um, but I, I do worry at the same time that we're not writing enough blog posts

1316
01:30:24,159 --> 01:30:28,080
and the, the advantage of something like a blog post is it's very easy to index.

1317
01:30:28,119 --> 01:30:29,599
So it's, it's very immediate.

1318
01:30:29,599 --> 01:30:34,200
If you want to look for a very specific thing, if that can be indexable through,

1319
01:30:34,239 --> 01:30:37,840
through the Google search and just pop up in the search box, you can achieve

1320
01:30:37,840 --> 01:30:38,840
something very, very quickly.

1321
01:30:38,840 --> 01:30:43,599
Whereas if you get a video, which has that information somewhere inside it,

1322
01:30:44,919 --> 01:30:46,200
it can be a little bit slower.

1323
01:30:46,200 --> 01:30:51,400
So, but some people hate reading, like, you know, some people have difficulties

1324
01:30:51,440 --> 01:30:56,239
with, um, with, with, with sort of following, um, printed text.

1325
01:30:57,119 --> 01:31:01,239
So having a, the, the medium of video is also very accessible at the same time,

1326
01:31:01,239 --> 01:31:03,080
which I think is, it's also a very good thing.

1327
01:31:03,799 --> 01:31:05,919
It's like, oh, I think maybe we've got pros and cons.

1328
01:31:07,080 --> 01:31:07,599
Awesome.

1329
01:31:08,119 --> 01:31:10,719
Uh, I think it's time for us to wrap up.

1330
01:31:10,760 --> 01:31:11,260
Yeah.

1331
01:31:11,679 --> 01:31:13,919
Uh, Nick, thank you very much for your time.

1332
01:31:13,960 --> 01:31:16,159
Thank you for visiting Ljubljana.

1333
01:31:16,239 --> 01:31:16,799
I'm excited.

1334
01:31:16,799 --> 01:31:17,960
It's a beautiful place.

1335
01:31:18,039 --> 01:31:18,520
Yeah.

1336
01:31:18,559 --> 01:31:24,359
Um, I would like to thank, uh, the organizer of organizers of Delves days.

1337
01:31:24,400 --> 01:31:25,840
I would like to thank Andras.

1338
01:31:26,440 --> 01:31:26,940
Thanks.

1339
01:31:27,039 --> 01:31:30,559
I would like to thank the whole team in the, at the back, uh,

1340
01:31:30,559 --> 01:31:31,880
Otto, Tomas and Rok.

1341
01:31:32,200 --> 01:31:33,479
Uh, thank you very much.

1342
01:31:33,880 --> 01:31:38,640
And I would like to thank our Patreons and, uh, the two companies that sponsor

1343
01:31:38,640 --> 01:31:41,200
our production, 3FS and Humanfrog.

1344
01:31:42,039 --> 01:31:45,520
Uh, have a nice day and see you soon.

1345
01:31:45,919 --> 01:31:48,200
Or we, you will listen to us soon.

1346
01:31:49,320 --> 01:31:49,820
Thank you.

1347
01:31:49,880 --> 01:31:50,380
Thank you.