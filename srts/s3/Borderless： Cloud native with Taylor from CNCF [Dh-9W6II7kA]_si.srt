1
00:00:00,000 --> 00:00:17,680
Hey everyone, hey all the ladies and gentlemen that listen to us.

2
00:00:17,680 --> 00:00:23,760
Today we are recording at Deobsday Ljubljana 2024.

3
00:00:23,760 --> 00:00:32,000
This conference is kindly hosted by Ivan and Marko from Povio Labs.

4
00:00:32,000 --> 00:00:34,880
Thanks for everyone organizing these conferences.

5
00:00:34,880 --> 00:00:41,599
I think that the guests and Otto, we know how hard it is.

6
00:00:41,599 --> 00:00:47,160
So yeah, we are amazed at the local community that we can have so many good conferences

7
00:00:47,160 --> 00:00:49,959
in such a small tech community.

8
00:00:49,959 --> 00:00:55,880
Yeah, we have a big heart, but the numbers are not that huge.

9
00:00:55,880 --> 00:01:05,239
I would also like to thank all our Patreons, all our supporters, 3FS, HumanFrog and Kaldi.

10
00:01:05,239 --> 00:01:11,320
That means a bunch to us, this is still kind of our hobby and you know how it is with money

11
00:01:11,320 --> 00:01:12,320
and hobbies.

12
00:01:12,320 --> 00:01:16,279
It's not very profitable or shouldn't be, right?

13
00:01:16,279 --> 00:01:19,239
At least that I tell my wife.

14
00:01:19,239 --> 00:01:20,239
Yeah, okay.

15
00:01:20,239 --> 00:01:27,199
No, no, we will get rich, Otto's wife.

16
00:01:27,199 --> 00:01:34,440
So today, me and Otto, we are welcoming Taylor Dolezal.

17
00:01:34,440 --> 00:01:35,440
I hope that's okay.

18
00:01:35,440 --> 00:01:36,440
Yeah, perfect.

19
00:01:36,440 --> 00:01:37,440
Amazing.

20
00:01:37,440 --> 00:01:38,440
Amazing.

21
00:01:38,440 --> 00:01:45,919
He's head of ecosystem at Cloud Native Computing Foundation.

22
00:01:45,919 --> 00:01:49,360
I will use Cloud Native Foundation.

23
00:01:49,360 --> 00:01:53,000
So yeah, welcome to Ugrodje, the framework podcast.

24
00:01:53,000 --> 00:01:54,000
Thanks for having me.

25
00:01:54,000 --> 00:01:56,000
This is going to be fun.

26
00:01:56,000 --> 00:01:57,000
Yeah.

27
00:01:57,000 --> 00:01:58,000
Welcome again.

28
00:01:58,000 --> 00:02:01,720
I mean, first time in Slovenia, probably jet lagged.

29
00:02:01,720 --> 00:02:07,160
You're pending to have a talk in a couple of hours, if I understand correctly.

30
00:02:07,160 --> 00:02:14,000
We have a lot of questions about this foundation that is essentially responsible in quotes

31
00:02:14,080 --> 00:02:19,919
for most of the infrastructure that we run in production around the world and in our

32
00:02:19,919 --> 00:02:22,800
offices and in our home labs as well.

33
00:02:22,800 --> 00:02:25,339
So yeah, let's get started.

34
00:02:25,339 --> 00:02:33,199
But like before we can actually tell to our audience what this foundation stands for,

35
00:02:33,199 --> 00:02:34,919
we need to establish your character.

36
00:02:34,919 --> 00:02:41,479
So I think Andras has like a very first question about like an icebreaker on how, just to see

37
00:02:41,479 --> 00:02:43,160
who you are really.

38
00:02:43,160 --> 00:02:45,039
It's a classical ops one.

39
00:02:45,039 --> 00:02:51,919
What's the most significant production F up that you had in your past, in your career?

40
00:02:51,919 --> 00:02:52,919
That's a good one.

41
00:02:52,919 --> 00:02:58,240
I'd say some of my favorites have to deal with Kubernetes and working with that.

42
00:02:58,240 --> 00:03:00,800
Probably I used to work at Walt Disney Studios.

43
00:03:00,800 --> 00:03:06,320
And so I was working with the groups in the theatrical distribution group and we were

44
00:03:06,320 --> 00:03:09,119
one of the first to get Kubernetes spun up.

45
00:03:09,119 --> 00:03:12,320
We already had applications that were containerized and working with that.

46
00:03:12,479 --> 00:03:17,279
But I remember it was before we had these really awesome GitOps tools like Argo and

47
00:03:17,279 --> 00:03:18,279
Flux.

48
00:03:18,279 --> 00:03:21,679
And so you were just applying manifests directly.

49
00:03:21,679 --> 00:03:27,440
And so I remember naming, caching, right, those are the hardest things for all of us.

50
00:03:27,440 --> 00:03:29,080
And that and DNS.

51
00:03:29,080 --> 00:03:34,440
But there was a time where I had some, I liked scoping everything with namespaces so that

52
00:03:34,440 --> 00:03:37,160
I can name everything the same.

53
00:03:37,160 --> 00:03:40,919
But when you don't check your context before you go and apply those things, then that can

54
00:03:40,919 --> 00:03:43,160
cause a kerfuffle.

55
00:03:43,160 --> 00:03:47,080
And so I remember I applied a whole bunch of things to what I thought was the staging

56
00:03:47,080 --> 00:03:53,000
namespace for all of these, like millions of orders were just about to come in for Disney.

57
00:03:53,000 --> 00:03:55,919
And yeah, that's some of the microservices there.

58
00:03:55,919 --> 00:03:57,399
I pushed them up.

59
00:03:57,399 --> 00:04:02,160
They weren't able to resolve because they're looking for the production FQDN net URI.

60
00:04:02,160 --> 00:04:05,919
And so I had that, thankfully I was sitting close enough to the development team.

61
00:04:05,919 --> 00:04:07,919
They came over and they said, hey, is prod down?

62
00:04:07,919 --> 00:04:09,919
And I went, no.

63
00:04:09,919 --> 00:04:10,919
Hold on.

64
00:04:10,919 --> 00:04:13,119
I went and changed it back.

65
00:04:13,119 --> 00:04:17,600
So only impacted about three minutes, but I think that was the biggest one.

66
00:04:17,600 --> 00:04:22,760
Some of the bigger ones at Disney working like with the wider teams was some DNS issues

67
00:04:22,760 --> 00:04:26,119
because we linked everything off studio.disney.com.

68
00:04:26,119 --> 00:04:31,480
And so when anything further down the chain there were to break, we would have lots of

69
00:04:31,480 --> 00:04:33,480
FFs, as you would say.

70
00:04:33,480 --> 00:04:34,480
Yeah.

71
00:04:34,559 --> 00:04:36,559
Yes, as usual, right?

72
00:04:41,559 --> 00:04:52,640
Well, before you go more into like your role now, you came from DevOps, system ops background.

73
00:04:52,640 --> 00:04:53,640
Is that correct?

74
00:04:53,640 --> 00:04:54,640
Right.

75
00:04:54,640 --> 00:04:59,799
Like how do you come from being more operations engineering kind of role into kind of like

76
00:04:59,799 --> 00:05:03,480
leading the vision of ecosystem and managing the stakeholders?

77
00:05:03,480 --> 00:05:05,480
Can you tell us a bit more in that regard?

78
00:05:05,480 --> 00:05:06,480
Yeah.

79
00:05:06,480 --> 00:05:07,480
Yeah.

80
00:05:07,480 --> 00:05:11,320
I'd say a whole bunch of good decisions and a whole bunch of mistakes is what led me here.

81
00:05:11,320 --> 00:05:16,079
I started off working with, I wanted to be a software engineer.

82
00:05:16,079 --> 00:05:23,640
And so I remember vividly back to one of my math classes, I had a TI 83 plus calculator

83
00:05:23,640 --> 00:05:26,640
and someone was showing me, there were like ones you could borrow from the classroom at

84
00:05:26,640 --> 00:05:27,799
that time.

85
00:05:27,799 --> 00:05:32,119
And I remember somebody showed me the snake game or nibbles as it was called.

86
00:05:32,119 --> 00:05:35,440
And so you'd see the snake go, try to eat the food and you grow, not try to like crash

87
00:05:35,440 --> 00:05:36,440
into yourself.

88
00:05:36,440 --> 00:05:38,720
They went, oh, hold on, check this out.

89
00:05:38,720 --> 00:05:45,040
And they changed a little asterisk to like a zero or an O or an M. And I was like, what?

90
00:05:45,040 --> 00:05:46,040
That was it.

91
00:05:46,040 --> 00:05:47,380
I knew what I wanted to do for the rest of my life.

92
00:05:47,380 --> 00:05:51,399
And so I started programming with that, working my way through there.

93
00:05:51,399 --> 00:05:58,359
I got started with like VB6 and .NET and about 16, I wanted to get into game design and stuff

94
00:05:58,359 --> 00:05:59,359
like that.

95
00:06:00,359 --> 00:06:05,679
I learned very quickly that licenses cost a lot of money and I didn't have that at 16.

96
00:06:05,679 --> 00:06:12,160
And so that's where I got into open source PHP and then Ruby, Go, and then kind of found

97
00:06:12,160 --> 00:06:18,760
my way, made my way closer and closer to infrastructure stuff when I started up my own consultancy.

98
00:06:18,760 --> 00:06:21,059
And I had a client say, okay, Taylor, this code's great.

99
00:06:21,059 --> 00:06:22,059
How do we get it live?

100
00:06:22,059 --> 00:06:25,500
And I went, oh, I didn't think about that.

101
00:06:25,500 --> 00:06:32,899
And then that was my trek into systems, systems design and distributed stuff and everything

102
00:06:32,899 --> 00:06:33,899
else.

103
00:06:33,899 --> 00:06:34,899
But yeah, really fun.

104
00:06:34,899 --> 00:06:41,019
It was kind of scary to learn that everything is basically a while true loop, but you know,

105
00:06:41,019 --> 00:06:42,019
it's fun.

106
00:06:42,019 --> 00:06:43,019
It's fun.

107
00:06:43,019 --> 00:06:44,019
Yeah.

108
00:06:44,019 --> 00:06:45,019
Yeah.

109
00:06:45,019 --> 00:06:58,220
So if we move, if we go forward, like when we research our guests, right, then there

110
00:06:58,220 --> 00:07:08,899
is, you're ahead of ecosystem and we are watching the Cloud Native Foundation landscape.

111
00:07:08,899 --> 00:07:09,980
I use it all the time.

112
00:07:09,980 --> 00:07:14,500
It's an awesome kind of JavaScript app, whatever, right?

113
00:07:14,980 --> 00:07:21,140
But yeah, I guess that what does head of ecosystem, what's your role?

114
00:07:21,140 --> 00:07:22,140
It's right.

115
00:07:22,140 --> 00:07:24,579
It's not a common corporate role.

116
00:07:24,579 --> 00:07:28,980
No, it's, it's something I try to figure out every day, honestly.

117
00:07:28,980 --> 00:07:29,980
Like a startup.

118
00:07:29,980 --> 00:07:30,980
Exactly.

119
00:07:30,980 --> 00:07:31,980
Exactly.

120
00:07:31,980 --> 00:07:36,459
We're about, we're just about 10 years old as a foundation, but there's just so much

121
00:07:36,459 --> 00:07:38,140
going on all the time.

122
00:07:38,140 --> 00:07:43,459
We went from one project Kubernetes, we now have over, I think it's over 200, 203 if I

123
00:07:43,459 --> 00:07:44,820
counted right last time.

124
00:07:44,820 --> 00:07:51,500
I didn't count it individually on the landscape, but we just rebooted that app too.

125
00:07:51,500 --> 00:07:56,140
One Easter egg for people, if you don't want to type in the landscape.cncfio, I can save

126
00:07:56,140 --> 00:07:57,140
you a little bit of time.

127
00:07:57,140 --> 00:07:58,140
Okay.

128
00:07:58,140 --> 00:08:03,940
Just type in L.CNCFIO, then it'll load it up, but we added a stats page that rewrote

129
00:08:03,940 --> 00:08:04,940
it in Rust.

130
00:08:04,940 --> 00:08:09,260
And so that was kind of like a cool thing that got done recently.

131
00:08:09,260 --> 00:08:13,980
As head of ecosystem, it's my, it's my responsibility to work really closely with our end user

132
00:08:13,980 --> 00:08:17,019
community and what's, you know, what's end user.

133
00:08:17,019 --> 00:08:19,380
That's also very generic.

134
00:08:19,380 --> 00:08:23,179
Those are people that are taking and really adopting these cloud native projects within

135
00:08:23,179 --> 00:08:25,059
their organizations.

136
00:08:25,059 --> 00:08:28,380
And that's more of an Apple, an Intuit, a Mercedes Benz.

137
00:08:28,380 --> 00:08:31,779
It's groups that aren't selling cloud native services.

138
00:08:31,779 --> 00:08:37,900
They're not cloud service providers or consultancies, and they're building their entire business

139
00:08:37,940 --> 00:08:39,340
on these platforms.

140
00:08:39,340 --> 00:08:43,979
And their core competency might not be technology too, right?

141
00:08:43,979 --> 00:08:48,780
We want to save a lot of those organizations time and money with adapting and adopting

142
00:08:48,780 --> 00:08:52,460
a lot of these workflows with cloud native.

143
00:08:52,460 --> 00:08:57,340
Because again, they have other things to do, selling cars, you know, B2C software, all

144
00:08:57,340 --> 00:08:58,919
of these other things.

145
00:08:58,919 --> 00:09:00,900
So I do a whole bunch of research.

146
00:09:00,900 --> 00:09:04,859
I work with people on programs like our Zero to Merge program, where we show people how

147
00:09:04,859 --> 00:09:09,260
to contribute to open source and be marketable.

148
00:09:09,260 --> 00:09:11,020
Do keynotes and get to talk to people.

149
00:09:11,020 --> 00:09:14,820
I get to travel like this and interact with the community.

150
00:09:14,820 --> 00:09:19,460
And then really just work, one other thing that we did was spin up an end user technical

151
00:09:19,460 --> 00:09:20,460
advisory board.

152
00:09:20,460 --> 00:09:26,520
And that's made up of about 13 individuals, some appointed, some voted in by the community.

153
00:09:26,520 --> 00:09:30,859
And that gives a much better anchoring point for our community to be able to talk with

154
00:09:30,859 --> 00:09:31,859
people.

155
00:09:31,859 --> 00:09:37,099
Because we used to say, hey, you know, we care about vendors and end users, and it was

156
00:09:37,099 --> 00:09:38,820
just kind of hand wavy.

157
00:09:38,820 --> 00:09:44,099
We could connect you with end users, but there wasn't that interface, so to speak, for that.

158
00:09:44,099 --> 00:09:46,380
And so now we have that.

159
00:09:46,380 --> 00:09:49,940
And then a whole bunch of things lined up for KubeCon, which will be exciting.

160
00:09:49,940 --> 00:09:56,700
Can you like, there is like, can you tell us a bit about this dashboard, just for people

161
00:09:56,700 --> 00:09:57,700
who don't know.

162
00:09:57,700 --> 00:10:00,099
There is like a chart.

163
00:10:00,099 --> 00:10:01,099
Just explain to us, please.

164
00:10:01,340 --> 00:10:02,340
What is it?

165
00:10:02,340 --> 00:10:05,539
So, if you try to take it in all at once, you will get a headache.

166
00:10:05,539 --> 00:10:07,619
I can vouch for that.

167
00:10:07,619 --> 00:10:08,780
I've made jokes about that.

168
00:10:08,780 --> 00:10:11,979
There's lots of memes and stuff like that, too.

169
00:10:11,979 --> 00:10:17,340
It's a, my recommendation is when you take a look at the landscape, you'll see a whole

170
00:10:17,340 --> 00:10:18,500
bunch of projects.

171
00:10:18,500 --> 00:10:21,539
And it's within differing categories.

172
00:10:21,539 --> 00:10:23,580
There's like app definition and delivery.

173
00:10:23,580 --> 00:10:25,219
There's observability.

174
00:10:25,219 --> 00:10:28,619
And then if you take a closer look, you can see subcategories in there, too.

175
00:10:28,619 --> 00:10:33,099
So, if you're looking specifically for like databases, you'll find that subcategory in

176
00:10:33,099 --> 00:10:34,099
there.

177
00:10:34,099 --> 00:10:38,700
And the goal, I recommend to no one that you go and adopt all of those projects and try

178
00:10:38,700 --> 00:10:41,059
to plug them in all over the place.

179
00:10:41,059 --> 00:10:44,859
That's absolutely where some confusion came in earlier on, because, you know, with like

180
00:10:44,859 --> 00:10:49,900
10 projects, sure, there's enough of a problem space that it might make sense to adapt all

181
00:10:49,900 --> 00:10:50,900
those.

182
00:10:50,900 --> 00:10:51,900
But now it's-

183
00:10:51,900 --> 00:10:53,539
You don't need everything in the big picture.

184
00:10:53,539 --> 00:10:54,539
Okay.

185
00:10:54,539 --> 00:10:55,539
Exactly.

186
00:10:55,539 --> 00:10:58,419
And for those that like to play with Legos, it's kind of like, okay, this one, here's

187
00:10:58,419 --> 00:11:01,099
the shape of the piece.

188
00:11:01,099 --> 00:11:05,179
And it just comes in a whole bunch of different colors or ways in which it actually fits into

189
00:11:05,179 --> 00:11:08,659
what you're trying to build, I think is a good way to think about it.

190
00:11:08,659 --> 00:11:14,020
Again, yeah, never, if someone wanted to adapt all those, that'd be a work of art rather

191
00:11:14,020 --> 00:11:16,580
than something usable, I would say.

192
00:11:16,580 --> 00:11:18,979
But do you still collaborate?

193
00:11:18,979 --> 00:11:23,539
You told us that you collaborate with end users more or less, okay.

194
00:11:23,539 --> 00:11:28,700
But do you also collaborate with developers of these platforms, with engineers?

195
00:11:28,700 --> 00:11:33,299
Like do you bring the knowledge that you obtained from the end users to them or how does that

196
00:11:33,299 --> 00:11:34,299
work?

197
00:11:34,299 --> 00:11:35,299
Definitely.

198
00:11:35,299 --> 00:11:38,299
Do you help shape the roadmaps or what's your role in that then?

199
00:11:38,299 --> 00:11:43,520
With that, it's really about educating the end users on things like project health.

200
00:11:43,520 --> 00:11:46,859
You know, it's end users that are taking these projects and adapting them.

201
00:11:46,859 --> 00:11:49,059
You want to know that they're going to be around tomorrow.

202
00:11:49,059 --> 00:11:53,260
And the fact that they're already in the foundation is a pretty good indicator, but even within

203
00:11:53,979 --> 00:11:57,679
our projects, we have sandbox, incubating, and then graduated projects.

204
00:11:57,679 --> 00:12:00,340
You can expect graduated to be very rock solid.

205
00:12:00,340 --> 00:12:01,419
It's proven itself.

206
00:12:01,419 --> 00:12:08,619
And our technical oversight committee, another governing body, has basically said, okay,

207
00:12:08,619 --> 00:12:12,659
it's gone from sandbox to incubating to graduated, all right, great.

208
00:12:12,659 --> 00:12:16,820
Sandbox is more the experimental and exploratory projects that we have and that we have the

209
00:12:16,820 --> 00:12:19,119
most of those.

210
00:12:19,119 --> 00:12:23,760
With any good software lifecycle thing, you'll see a lot of those either get archived out

211
00:12:23,760 --> 00:12:27,479
or people stop working on them, et cetera.

212
00:12:27,479 --> 00:12:31,200
Incubating is going to be a little bit more solid and then graduated is going to be most

213
00:12:31,200 --> 00:12:32,400
of all.

214
00:12:32,400 --> 00:12:40,320
With the TAB structure that we've established too, we have some technical advisory board.

215
00:12:40,320 --> 00:12:43,960
And not spaces, the TABs.

216
00:12:43,960 --> 00:12:48,880
They have a couple initiatives that they're working on right now.

217
00:12:49,640 --> 00:12:53,840
One of them is project health, and then another one of them is linking end users to projects.

218
00:12:53,840 --> 00:12:55,080
Basically feedback and getting that in.

219
00:12:55,080 --> 00:13:01,280
So just like you said, I'll talk with a lot of folks, but it really is introducing them

220
00:13:01,280 --> 00:13:05,400
to the projects rather than me stepping in and saying like, hey, project, you got to

221
00:13:05,400 --> 00:13:06,400
do this.

222
00:13:06,400 --> 00:13:11,440
We're a vendor neutral foundation, and so we're not looking to pick the winner or be

223
00:13:11,440 --> 00:13:12,440
king makers.

224
00:13:12,440 --> 00:13:14,840
We're looking to just help out where we can.

225
00:13:14,840 --> 00:13:19,880
Security audits, patent litigation with open source, all of those kinds of things.

226
00:13:19,880 --> 00:13:24,400
When you say you want to help with these things, does that mean that you try to recruit open

227
00:13:24,400 --> 00:13:29,960
source contributors or do you actually pay for engineers to work on these problems?

228
00:13:29,960 --> 00:13:37,039
Is all this stuff voluntarily or do the vendors have the ability to pay for these things?

229
00:13:37,039 --> 00:13:39,000
There is probably some money involved.

230
00:13:39,000 --> 00:13:43,880
Tell us a bit more about the economic or business, I'm sure the business model is the right question.

231
00:13:44,880 --> 00:13:48,719
I think for that, it's good to zoom out because we'll get that a lot of the time is like,

232
00:13:48,719 --> 00:13:52,760
hey, this foundation, you should pay the maintainers, you should pay people.

233
00:13:52,760 --> 00:13:54,559
We don't disagree at all.

234
00:13:54,559 --> 00:13:58,599
But when it comes to setting up, it's kind of like a community garden is what we try

235
00:13:58,599 --> 00:13:59,599
to establish.

236
00:13:59,599 --> 00:14:03,359
We don't go and buy the produce that people have worked hard to make, but we try to set

237
00:14:03,359 --> 00:14:07,559
up the plot, give you fertilizer, the tools, and then help out with marketing and other

238
00:14:07,559 --> 00:14:12,200
things like at the farmer's market for this analogy.

239
00:14:12,200 --> 00:14:16,400
Otherwise, you get into a whole bunch of things where we're maintaining and sustaining

240
00:14:16,400 --> 00:14:18,919
a project that only that one person's using.

241
00:14:18,919 --> 00:14:22,799
You can kind of get into those things and extrapolate.

242
00:14:22,799 --> 00:14:28,960
But again, we really want maintainers to be paid, so we'll help out with connecting them.

243
00:14:28,960 --> 00:14:32,440
Someone will come in, they'll get trained, they'll start making contributions, they might

244
00:14:32,440 --> 00:14:34,320
become a maintainer.

245
00:14:34,320 --> 00:14:39,599
It's a lot easier to get hired and go to places, typically vendors, but some end users as well.

246
00:14:39,599 --> 00:14:42,320
They're always looking for that because that's a very solid person.

247
00:14:42,320 --> 00:14:47,080
You can look and go see the resume all you get right there.

248
00:14:47,080 --> 00:14:51,799
And so we try to help out projects specifically when they need security audits or have to

249
00:14:51,799 --> 00:14:55,919
go through litigation or have a new need that's popped up that we can help out with.

250
00:14:55,919 --> 00:14:59,080
When you take a look at the foundation and how it makes money and kind of like where

251
00:14:59,080 --> 00:15:02,559
that goes to, it's really three things.

252
00:15:02,559 --> 00:15:06,719
It's memberships, which is companies joining and then you get benefits like KubeCon tickets

253
00:15:06,719 --> 00:15:09,419
and training and certification, things like that.

254
00:15:09,419 --> 00:15:13,900
Training and certification is yet another stream of revenue that we take.

255
00:15:13,900 --> 00:15:18,500
And then we're more so focused on the certification piece.

256
00:15:18,500 --> 00:15:21,140
There's a whole bunch of great training, education, things like that.

257
00:15:21,140 --> 00:15:23,140
Some people are putting that up for free.

258
00:15:23,140 --> 00:15:24,179
Other people have books.

259
00:15:24,179 --> 00:15:28,020
We want to allow the space for that because everybody learns different.

260
00:15:28,020 --> 00:15:33,260
And then events like KubeCon, CloudNativeCon and other co-located events or one-offs that

261
00:15:33,260 --> 00:15:34,260
we'll have too.

262
00:15:34,260 --> 00:15:36,020
So those are the three ways that we make money.

263
00:15:36,020 --> 00:15:40,219
That goes to pay the staff, that goes to help out with the administrative and logistical

264
00:15:40,219 --> 00:15:46,179
things for projects like Zoom accounts and hiring people as project managers.

265
00:15:46,179 --> 00:15:50,780
They'll come in and can help out with some of these services that projects have.

266
00:15:50,780 --> 00:15:53,219
Artwork that gets created, a whole bunch of other things like that.

267
00:15:53,219 --> 00:15:56,700
It's kind of like what the makeup looks like.

268
00:15:56,700 --> 00:16:04,299
When I was researching, Cloud Native Foundation is a foundation that was founded by Linux

269
00:16:04,299 --> 00:16:05,859
Foundation, right?

270
00:16:06,580 --> 00:16:09,460
That's the relationship between these two organizations, right?

271
00:16:09,460 --> 00:16:10,460
Correct.

272
00:16:10,460 --> 00:16:11,900
Okay.

273
00:16:11,900 --> 00:16:14,900
And then there is also Apache Foundation.

274
00:16:14,900 --> 00:16:20,140
And I was trying to do a research like, what's the relationship between Linux Foundation

275
00:16:20,140 --> 00:16:22,020
and Apache Foundation?

276
00:16:22,020 --> 00:16:24,179
And then there's like a really nice...

277
00:16:24,179 --> 00:16:28,020
Somebody wrote like a really nice answer on the Quora, I believe so.

278
00:16:28,020 --> 00:16:33,299
And he explained like these two organizations, they don't really compete between each other

279
00:16:33,460 --> 00:16:37,700
if something, they complement each other, but they're like one of two of the biggest

280
00:16:37,700 --> 00:16:39,539
probably in the space, right?

281
00:16:39,539 --> 00:16:43,340
So this is like Linux Foundation is on top of this.

282
00:16:43,340 --> 00:16:44,340
That's how I understand.

283
00:16:44,340 --> 00:16:45,340
Okay.

284
00:16:45,340 --> 00:16:46,340
Yeah, yeah, yeah.

285
00:16:46,340 --> 00:16:48,820
There's the Linux Foundation and then we're a sub-foundation under them.

286
00:16:48,820 --> 00:16:54,219
So similar to like OpenSSF Foundation and several other, like PyTorch is under Linux

287
00:16:54,219 --> 00:16:56,099
Foundation, LF and AI.

288
00:16:56,099 --> 00:17:01,859
You can tell what's been on my brain recently, but keep hearing about it.

289
00:17:02,580 --> 00:17:03,580
That's how that's set up.

290
00:17:03,580 --> 00:17:08,859
And then that gives us a really good structure and keep it lean and small too.

291
00:17:08,859 --> 00:17:14,619
I'd say the biggest difference with the Linux Foundation and the Apache Foundation is, again,

292
00:17:14,619 --> 00:17:16,300
kind of looking at like operating revenue.

293
00:17:16,300 --> 00:17:20,300
You see Apache is like really lean, but then you have a lot more people donating their

294
00:17:20,300 --> 00:17:23,780
time and then not as many services provided.

295
00:17:23,780 --> 00:17:26,619
We're big fans of the Apache 2 license, you know?

296
00:17:26,619 --> 00:17:30,459
Yeah, it's in the similar space, but different, yeah.

297
00:17:30,459 --> 00:17:34,859
Exactly like you said, we can help complement one another and then we'll regularly talk

298
00:17:34,859 --> 00:17:39,979
with them and people like OSI and just a whole bunch of other initiatives that are going

299
00:17:39,979 --> 00:17:40,979
on.

300
00:17:40,979 --> 00:17:45,060
I think that we're all about trying to share out that information with people and then

301
00:17:45,060 --> 00:17:48,339
just eliminate duplication of work where it doesn't make sense, right?

302
00:17:48,339 --> 00:17:53,459
At the end of the day, that's truly what we're trying to aim for.

303
00:17:53,459 --> 00:17:59,859
So we were mentioning a lot about the end users and those are basically from our perspective

304
00:18:00,260 --> 00:18:02,739
because we are in an emerging market, right?

305
00:18:02,739 --> 00:18:04,859
Those are huge corporations, right?

306
00:18:04,859 --> 00:18:08,619
We don't have such corporations here.

307
00:18:08,619 --> 00:18:17,339
So I would think that maybe, of course, we are not in SF area, but for us, those are

308
00:18:17,339 --> 00:18:25,900
maybe 20% of companies looking at them globally and the other 80s are not the members, right?

309
00:18:25,900 --> 00:18:38,020
And my question is, okay, how do then the other 80% shape the technology that we basically

310
00:18:38,020 --> 00:18:40,339
use, right?

311
00:18:40,339 --> 00:18:43,260
Because of course we are on this free when, right?

312
00:18:43,260 --> 00:18:49,060
We are riding along whatever Cloud Native Foundation or the big guys do.

313
00:18:49,060 --> 00:18:51,500
Sometimes it's relatively complicated.

314
00:18:51,500 --> 00:18:55,579
Sometimes we are super grateful for all the technologies.

315
00:18:55,579 --> 00:19:04,260
Is there a way or how can maybe we do some input or how does that come in?

316
00:19:04,260 --> 00:19:11,020
I think when you take a look at the foundation and projects, it's again, if you had a whole

317
00:19:11,020 --> 00:19:17,099
bunch of cloud service providers all working on distributed storage or something like that,

318
00:19:17,099 --> 00:19:20,300
they might have eight different ways in which you interact with that.

319
00:19:20,300 --> 00:19:24,819
And then that becomes very difficult as an end user to be like, okay, we want to move

320
00:19:24,819 --> 00:19:27,099
from cloud service provider one to two.

321
00:19:27,099 --> 00:19:29,020
They do it a completely different way.

322
00:19:29,020 --> 00:19:30,739
We have to rewrite everything.

323
00:19:30,739 --> 00:19:34,339
So that's where standards and the foundation comes in.

324
00:19:34,339 --> 00:19:39,619
So vendors have really realized this, that they can plan a lot better across their teams

325
00:19:39,619 --> 00:19:42,660
as well when they have a shared specification that they can use.

326
00:19:42,660 --> 00:19:48,380
Like OCI, the open container interface, there's storage interface, the network interface now.

327
00:19:48,380 --> 00:19:54,219
And so they've learned the benefits of working on that and then sending people to kind of

328
00:19:54,219 --> 00:19:59,459
interact with the community, work on those specifications and have those conversations.

329
00:19:59,459 --> 00:20:01,660
Vendors really do want to sell to end users too.

330
00:20:01,660 --> 00:20:05,939
So that's like how many end users are members within the CNCF?

331
00:20:05,939 --> 00:20:09,900
That's a good measure as far as what's the health, are they staying, are they going?

332
00:20:09,900 --> 00:20:14,339
And this year it's been, with a lot of people moving their budgets around for like AI and

333
00:20:14,339 --> 00:20:20,140
trying to understand the shape of that, we've seen the lowest churn for end user members

334
00:20:20,140 --> 00:20:21,140
thus far.

335
00:20:21,140 --> 00:20:22,339
So I've been really happy.

336
00:20:22,339 --> 00:20:25,660
I've had a lot of conversations with many of them and they're like, I'm glad that they're

337
00:20:25,660 --> 00:20:29,339
staying and really investing back into the ecosystem.

338
00:20:29,339 --> 00:20:33,020
But that's the biggest thing that they'll share back with is just trying to save time,

339
00:20:33,020 --> 00:20:35,979
trying to make sense of things.

340
00:20:35,979 --> 00:20:41,300
One of the things that the end user technical advisory board is working on as well, we have

341
00:20:41,300 --> 00:20:44,979
a site up right now, but it's going to be, there's going to be examples in it just before

342
00:20:44,979 --> 00:20:48,979
KubeCon called architecture.cncfio.

343
00:20:48,979 --> 00:20:53,140
And that's when I was an end user working at Disney, that's the thing I wish I had was

344
00:20:53,140 --> 00:20:56,459
give me some reference architectures, just show me some workflows and patterns.

345
00:20:56,459 --> 00:20:58,219
The tool's not enough, right?

346
00:20:58,219 --> 00:20:59,219
I know I have a hammer.

347
00:20:59,219 --> 00:21:00,219
What can I do with it?

348
00:21:00,219 --> 00:21:01,219
Is this for eating soup?

349
00:21:01,219 --> 00:21:02,219
I can use it wrong.

350
00:21:02,219 --> 00:21:03,219
Yeah.

351
00:21:03,219 --> 00:21:04,219
It might hit my thumb.

352
00:21:04,219 --> 00:21:05,219
Yeah.

353
00:21:05,219 --> 00:21:07,099
What do I do with this?

354
00:21:07,099 --> 00:21:09,500
And that's what a lot of end users are asking.

355
00:21:09,500 --> 00:21:15,140
Like they might've heard about, by now, hopefully heard about Kubernetes and know when is and

356
00:21:15,140 --> 00:21:17,979
is not the right time to use those things.

357
00:21:17,979 --> 00:21:22,859
That's the frame of knowledge that we're sharing right now is trying to show what workflows

358
00:21:22,859 --> 00:21:27,060
are possible and then how people are combining these things together.

359
00:21:27,060 --> 00:21:29,260
It's not enough just to show the one project.

360
00:21:29,260 --> 00:21:33,420
They're really curious about how you string these things together, how you utilize those

361
00:21:33,420 --> 00:21:34,420
interfaces.

362
00:21:34,420 --> 00:21:39,060
And then that creates a really good communication dynamic between vendors and users or vendors

363
00:21:39,060 --> 00:21:41,140
to vendors and users to end users.

364
00:21:41,140 --> 00:21:45,579
So for example, like you have Kubernetes and then you want to have cloud ops and then you

365
00:21:45,579 --> 00:21:51,579
maybe adopt Argo or Flux and observability and container storage.

366
00:21:51,579 --> 00:21:59,099
So you're targeting to have like white papers or like blog posts, something like that.

367
00:21:59,099 --> 00:22:00,660
We're starting to do more.

368
00:22:00,660 --> 00:22:03,579
We're learning from a lot of like the big media companies, right?

369
00:22:03,579 --> 00:22:07,020
Where you could take a look at this project, see related content.

370
00:22:07,020 --> 00:22:11,739
So if you go and check out like the CNCF blog, you'll see more, we've been doing more experimentation

371
00:22:11,739 --> 00:22:12,739
with that.

372
00:22:12,900 --> 00:22:16,619
It's leading to a lot of people being like, oh, okay, now I understand where all these

373
00:22:16,619 --> 00:22:18,699
things are.

374
00:22:18,699 --> 00:22:22,739
The way that the reference architectures will be set up is basically it'll kind of look

375
00:22:22,739 --> 00:22:24,180
like a case study.

376
00:22:24,180 --> 00:22:29,219
You'll have a whole bunch of links to the differing CNCF projects and then charts like

377
00:22:29,219 --> 00:22:33,500
a mermaid JS graph to be able to see how these things link together.

378
00:22:33,500 --> 00:22:37,780
And then we're hoping that that leads to more case studies and end user journey reports

379
00:22:37,780 --> 00:22:44,099
and like actual assets that give you a better picture for what's going on.

380
00:22:44,099 --> 00:22:49,540
I think it's kind of related to the question, like sometimes in these environments, like

381
00:22:49,540 --> 00:22:55,699
you feel that you have a bubble and then your bubble, there's like Kubernetes and Flux,

382
00:22:55,699 --> 00:22:57,619
for example, might be the way to go.

383
00:22:57,619 --> 00:22:58,819
And you think that's the shit.

384
00:22:58,819 --> 00:23:03,579
And you talk to a couple of buddies and they say the same thing, but like in your position,

385
00:23:03,579 --> 00:23:09,260
you probably don't have, you should not have these bubbles or you should be aware of them.

386
00:23:09,260 --> 00:23:15,219
How do you like have a better understanding what is like, where the thing is going?

387
00:23:15,219 --> 00:23:16,660
Because you cannot prioritize everything.

388
00:23:16,660 --> 00:23:18,420
You cannot do everything equally.

389
00:23:18,420 --> 00:23:20,060
How do you navigate these things?

390
00:23:20,060 --> 00:23:22,339
Even for you personally, how do you?

391
00:23:22,339 --> 00:23:27,099
So I've been at the CNCF for about two and a half, going on three years.

392
00:23:27,099 --> 00:23:31,459
I've been in the community since like the days of Docker and Kubernetes was coming up.

393
00:23:31,459 --> 00:23:35,739
I remember learning about Kubernetes at a meetup, I think somebody hosted a WordPress

394
00:23:35,739 --> 00:23:41,380
site in their demo and then they took out the persistent volume and then it came back

395
00:23:41,380 --> 00:23:45,540
and I was like, whoa, this is wild.

396
00:23:45,540 --> 00:23:51,780
But I think that by getting to talk with just a whole bunch of people and see the landscape

397
00:23:51,780 --> 00:23:56,020
of what people are talking about are like, oh, this group is in finance.

398
00:23:56,020 --> 00:23:58,579
This is typically a pattern that they'll use.

399
00:23:58,579 --> 00:24:02,300
If you go and take a look at manufacturing, they might love it and they might implement

400
00:24:02,300 --> 00:24:04,500
something completely different.

401
00:24:04,500 --> 00:24:08,979
So you start to learn the more time you spend talking with people, what the shape of their

402
00:24:08,979 --> 00:24:10,380
workflows look like.

403
00:24:10,380 --> 00:24:15,300
Media, Disney is going to act a lot differently than say like Intuit or Mercedes-Benz.

404
00:24:15,300 --> 00:24:19,739
So you kind of learn where the echo chambers are just over time and talking with people.

405
00:24:19,739 --> 00:24:23,660
So you get to pop a lot of those bubbles, but that happens a lot of the time.

406
00:24:23,660 --> 00:24:28,400
And then end users specifically, they'll hear about the latest and greatest things

407
00:24:28,400 --> 00:24:31,300
within technology or patterns and whatnot.

408
00:24:31,300 --> 00:24:36,819
And there's either not the time justification or the ability to go learn the thing.

409
00:24:36,819 --> 00:24:41,739
But with like these reference architectures, it gives people something to copy and to try.

410
00:24:41,739 --> 00:24:45,859
And so that's the thing that we haven't had for a long time, or it's just been word of

411
00:24:45,859 --> 00:24:48,060
mouth or in a case study.

412
00:24:48,060 --> 00:24:51,020
And then you kind of have to go and dig and talk to the people implementing that.

413
00:24:51,020 --> 00:24:56,300
So it's becoming easier to drive that change once we better understand the problem rather

414
00:24:56,300 --> 00:24:59,500
than just have like the ingredients or list of the tools that we're going to use.

415
00:25:00,000 --> 00:25:04,240
Um, but yeah, it's really interesting within the community hearing kind of what's repeated,

416
00:25:04,240 --> 00:25:06,960
what becomes the echo chamber versus what people are actually doing.

417
00:25:08,000 --> 00:25:13,360
Um, we, we mentioned into it a few times. We, so here we know what Mercedes Benz does,

418
00:25:13,360 --> 00:25:18,080
the right cars, and then Disney is like media. What, what's into it? What's their core business?

419
00:25:18,080 --> 00:25:22,160
Uh, their core business is they, they have a whole bunch of things like, uh, male chimp

420
00:25:22,160 --> 00:25:26,080
and turbo tax and some things that, yeah, in the States I'm grateful for.

421
00:25:26,559 --> 00:25:31,280
So turbo tax is like how you submit taxes, right? Okay. Okay. Yeah. Yeah. It's like a wizard. You

422
00:25:31,280 --> 00:25:35,599
go through, you know, I, I, I, Hey, I, I'm envious of everyone here in Europe.

423
00:25:38,160 --> 00:25:45,840
So super important. Yeah. I would like to continue this, uh, from this bubble of the

424
00:25:45,840 --> 00:25:52,160
last before, um, as you said, you have three stages of, in which the projects are, um,

425
00:25:52,959 --> 00:26:01,680
do you like you personally, do you have time to explore these tools on your own? Uh, and like,

426
00:26:01,680 --> 00:26:07,040
how do you play with these things? Do you just like, uh, make them demo apps? I imagine you do

427
00:26:07,040 --> 00:26:12,160
because you will have talking hours, like, but how do you explore these things? And how do you

428
00:26:12,160 --> 00:26:18,320
find these new incubating projects, I guess, for you personally, or in the wider organization,

429
00:26:18,320 --> 00:26:22,879
how do you find these challenging or interesting things? There's a, there's another thing that we

430
00:26:22,879 --> 00:26:27,199
added that's helping me learn a lot of these things, especially like within the new sandbox

431
00:26:27,199 --> 00:26:31,040
projects that are coming in. Um, we just like went through the summer, the TOC went through the

432
00:26:31,040 --> 00:26:36,480
summer schedule and a lot just got accepted. Um, and so when we do like our all hands and things

433
00:26:36,480 --> 00:26:41,040
like that, we've done the funny, like Pokemon, like shadow. And it's like, what project is that?

434
00:26:41,040 --> 00:26:45,519
You know, what does it do? And so those are areas where we learn. I think that there's,

435
00:26:45,519 --> 00:26:50,879
it's great to involve play with learning too. Um, there's a little game controller at the top,

436
00:26:50,879 --> 00:26:55,120
at the upper right-hand corner of the CNCF landscape. And you can click on that and it'll

437
00:26:55,120 --> 00:27:00,320
ask you questions about projects. So I like note cards and that way of learning. So I love that

438
00:27:00,320 --> 00:27:05,360
the projects team decided to add that as a good way to like introspect and look at that. Um, I

439
00:27:05,360 --> 00:27:11,119
learned mostly by demos and then it's being what I've, I've been in this industry, I want to say

440
00:27:11,360 --> 00:27:16,240
like 17 years, maybe 20. I've just stopped counting. Um, that's for, that's a job for

441
00:27:16,240 --> 00:27:23,199
program to do. Yeah. Plus, plus that's how many years I've been here. But, um, you, you start to

442
00:27:23,199 --> 00:27:28,479
learn and see that it's a lot of repetition of the same patterns, right? If you learn the

443
00:27:28,479 --> 00:27:32,639
fundamentals, you're going to be set for a very long time. And not many people do, they might

444
00:27:32,639 --> 00:27:38,559
know how to work with a certain framework or library or orchestrator. And, um, that's, that's

445
00:27:38,559 --> 00:27:42,960
also great. But if you really have a sense of the fundamentals, you're again, just going to go

446
00:27:42,960 --> 00:27:48,000
really far. And I keep seeing repeated patterns or some projects I'll look at and be like,

447
00:27:48,000 --> 00:27:52,559
really? And, you know, and I'll, I'll, I'll question what the use case is. That's what

448
00:27:52,559 --> 00:27:57,199
really urges me to go check it out is like, huh, I had a really strong feeling about this. What is,

449
00:27:57,199 --> 00:28:02,000
let me go check this out. Do we need to restart pods and do this? Does this thing make sense?

450
00:28:02,000 --> 00:28:05,759
How do we actually do policy and introspection? Um, it's fun.

451
00:28:05,759 --> 00:28:12,080
If Andras now has a new, um, Kubernetes related project, let's just put it like that.

452
00:28:12,080 --> 00:28:16,880
Yeah. Of course. I write a operator in Go. Like for ordering pizza.

453
00:28:16,880 --> 00:28:19,600
Yeah. Pizza operator written in Go.

454
00:28:23,199 --> 00:28:28,880
It has a, it has a really good read me and it has, let's say 200 stars on GitHub.

455
00:28:28,880 --> 00:28:33,199
The custom resource definition, there is a hard limit. It must not have pineapple in it.

456
00:28:33,279 --> 00:28:38,800
Yeah. So, so let's say, let's, let's say that we have an operator and let's say that there is a,

457
00:28:39,440 --> 00:28:45,039
let's say, like I said, a hundred stars and people are actually using it. So how would

458
00:28:45,039 --> 00:28:50,240
like his project get into the cloud native foundation and how would the roadmap look

459
00:28:50,240 --> 00:28:54,639
like? Can you give us like an example on top of it? Yeah. Yeah, absolutely. I think in this

460
00:28:54,639 --> 00:28:59,119
hypothetical too, it's imperative that businesses have pizza parties. And so this is a business

461
00:28:59,119 --> 00:29:06,399
critical. Exactly. It's critical for Disney to Intel to have pizza because no pizza, no team.

462
00:29:06,399 --> 00:29:11,279
Yeah. And I'll, I'll, I know I'll be filing issues too with like stuff cross not, you know,

463
00:29:11,279 --> 00:29:16,640
like what kind of cuts it's going to be good. It's so to get this started, what you'd want to do is

464
00:29:16,640 --> 00:29:22,320
take a look at, there's a CNCF sandbox repository. And in that is an issue that you can create and

465
00:29:22,320 --> 00:29:26,079
kind of like list out what's going on with your project and features and just kind of give the

466
00:29:26,079 --> 00:29:32,079
overall description. And then there's a schedule in which the technical oversight committee will

467
00:29:32,079 --> 00:29:38,239
review differing projects that are coming in. We've had not to pick on anyone. I honestly can't

468
00:29:38,239 --> 00:29:42,880
remember the names, but we've had people submit, you know, vaporware or an idea. And that's not

469
00:29:42,880 --> 00:29:47,119
necessarily what the technical oversight committee or TOC is looking for. They're looking for

470
00:29:47,119 --> 00:29:53,040
projects that have a compliant license, you know, OSI approved license. It has a community,

471
00:29:53,040 --> 00:29:57,119
you have maintainers, and there's some other due diligence things which are published in that

472
00:29:57,119 --> 00:30:03,040
sandbox repository. So you can take a look and see if it actually matches up. And then once you get

473
00:30:03,040 --> 00:30:08,399
in, then you start to get some benefits available to you. Like if you wanted to schedule community

474
00:30:08,399 --> 00:30:13,600
meetings and have us do that with some of the tooling we built and so that you can get reporting

475
00:30:13,600 --> 00:30:19,760
on that, all of those things start to open up as well. And then when you want to go to, let's say

476
00:30:19,760 --> 00:30:24,640
it's really successful, you know, everybody loves the pizza operator and you want to go to incubating,

477
00:30:24,640 --> 00:30:28,000
then you would signal to the technical oversight committee, like, Hey, I think we're ready.

478
00:30:28,000 --> 00:30:32,399
More due diligence. And then the same thing with graduated and all those things are published.

479
00:30:32,399 --> 00:30:37,279
There's a lot of due diligence work that the technical oversight committee does that I had

480
00:30:37,279 --> 00:30:41,600
no idea about until I joined the foundation and got to like read through all of the read-me's and

481
00:30:41,600 --> 00:30:47,279
things that they take a look at. So if Andraž then also needs like a test Kubernetes cluster,

482
00:30:47,279 --> 00:30:50,480
is this something that you guys can help with or not?

483
00:30:51,119 --> 00:30:57,600
There's, I know that there's Equinix is an organization that's partnered with the CNCF

484
00:30:58,640 --> 00:31:03,760
and there is a cluster that's available for testing on some things there.

485
00:31:04,480 --> 00:31:09,679
There's also like GitHub runners. We've had several cloud service providers donate credits or

486
00:31:10,239 --> 00:31:15,200
allow for us to set up a runner on their cloud to be able to scale with different projects.

487
00:31:15,200 --> 00:31:21,600
Same thing with ARM. And so again, if we need like, no, this will only run on pizza cloud,

488
00:31:21,600 --> 00:31:26,399
then we can try to figure out what that looks like, if that's something that we can work with

489
00:31:26,399 --> 00:31:30,880
them on. But that's another benefit that the foundation has, is being able to go and talk

490
00:31:30,880 --> 00:31:34,239
to these organizations or service providers to get those credits.

491
00:31:34,239 --> 00:31:40,880
There's also like this social element, right? We know that of course Intel is contributing to the

492
00:31:40,880 --> 00:31:46,399
pizza operator and then yeah, maybe you can establish some additional channels just to

493
00:31:46,399 --> 00:31:53,359
open a conversation because they're obviously, yeah, using the, yeah, stuffed crust patch.

494
00:31:55,279 --> 00:31:56,239
And in this like...

495
00:31:56,239 --> 00:31:57,040
Pizza and chips.

496
00:31:59,600 --> 00:32:03,679
Let's say that not everybody is a fan of pizza and let's say that somebody now

497
00:32:03,679 --> 00:32:08,880
finds an exploit in this pizza operator, as we call it now.

498
00:32:09,440 --> 00:32:11,440
Some Hawaiian guys.

499
00:32:11,440 --> 00:32:12,480
Some Hawaiian guys.

500
00:32:15,119 --> 00:32:22,880
Yeah. So, and let's say that Andras is not aware of this stuff and let's say that

501
00:32:23,920 --> 00:32:31,359
somebody somewhere would find an exploitation. How would then this information get to Andras?

502
00:32:31,359 --> 00:32:37,200
Would you guys help to try to patch it, try to talk to him, try to prioritize or like,

503
00:32:37,920 --> 00:32:40,399
how does this work? Do you guys help in this case or not?

504
00:32:41,040 --> 00:32:47,600
There's a couple of good recipes that we have for this. And when projects join,

505
00:32:47,600 --> 00:32:51,119
there's a whole bunch of things that we make sure that they have. And that's like a security

506
00:32:51,119 --> 00:32:56,559
distribution list. We'll tie that into GitHub if it makes sense. We try to set up projects so that

507
00:32:56,559 --> 00:33:02,640
they have the most success possible. And so with something like that, whether if that came out as

508
00:33:02,640 --> 00:33:06,720
like a fuzzing or security audit that we did, we would let the, we wouldn't go say,

509
00:33:06,720 --> 00:33:10,079
hey, world, check it out. Oh yeah. And maintainers too. Yeah. We won't,

510
00:33:10,079 --> 00:33:14,480
we don't give that the same time. We'll give that to the project maintainers directly so they can go

511
00:33:14,480 --> 00:33:20,480
and triage, take a look at things and then kind of get a sense for ETAs. And then we'll go and

512
00:33:20,480 --> 00:33:26,160
publish that after we found everything, of course. But I think that's my favorite thing about the

513
00:33:26,160 --> 00:33:30,799
foundation too is like, if it's a survey, a security audit, anything like that, you'll get

514
00:33:30,799 --> 00:33:36,880
to see all of those things that you can learn from them too. But patching this specifically,

515
00:33:37,520 --> 00:33:41,440
typically, like we don't have anything that's proactive besides the community taking a look at

516
00:33:41,440 --> 00:33:47,359
this or the security audits, but when people raise it, it will get to someone. And I think

517
00:33:47,359 --> 00:33:52,239
that's the thing that, that's what really helps out with these projects rather than like, hey,

518
00:33:52,239 --> 00:33:57,440
we just found something in the struts library or something like that, that we've seen in the

519
00:33:57,440 --> 00:34:02,880
industry. And then it's like, okay, we don't know when a fix is coming, but we'll work really

520
00:34:02,880 --> 00:34:08,000
closely with folks to be able to get ETAs. And then we have so many members that are vendors,

521
00:34:08,000 --> 00:34:12,880
they all want to see this succeed too. So they'll, they might step up and say, okay, we have a couple

522
00:34:12,880 --> 00:34:17,919
core maintainers, or they might have people to lead into the project. So they're there for the

523
00:34:18,000 --> 00:34:18,640
long-term too.

524
00:34:20,799 --> 00:34:28,719
Let us have a short off-topic break. And thanks again, our sponsors from Caldi, 3FS and Human

525
00:34:28,719 --> 00:34:37,440
Frog and all the Patreons. I have a thing to admit, right? Like I'm a huge fan of craft beers,

526
00:34:37,440 --> 00:34:43,280
and we have a few pubs here in Ljubljana, and there's an app that I have on my phone. And

527
00:34:44,239 --> 00:34:50,559
whenever they connect a new keg or barrel of beer, I get not really a notification,

528
00:34:50,559 --> 00:34:57,119
but it's popped up, it pops up, it says, hey, there's a new beer. And I know if I have tried

529
00:34:57,119 --> 00:35:02,320
already or not, because I checked them in the app, right? It's like connecting Pokemons, but

530
00:35:03,200 --> 00:35:08,960
it's just like drinking pints of beer. And I wonder if there's a lot-

531
00:35:08,960 --> 00:35:11,760
I wonder where you're going with this. Please continue.

532
00:35:11,760 --> 00:35:13,119
You were talking about bubbles earlier.

533
00:35:14,479 --> 00:35:15,359
Yeah, sure. Go, go.

534
00:35:15,359 --> 00:35:23,520
Like there's a lot of projects joining in like from different like sandbox or like incubator

535
00:35:23,520 --> 00:35:30,320
and the landscape, especially the recent years with Kubernetes is changing relatively rapidly,

536
00:35:30,320 --> 00:35:35,760
right? Because a lot of new awesome things are going on. And I wonder what's the easiest way

537
00:35:35,760 --> 00:35:42,880
for me to subscribe to an Ares fit and just like see what got promoted to which stage, right?

538
00:35:44,400 --> 00:35:50,479
Because sometimes I go through the landscape and I'm like, oh, that's amazing. Yeah, that's- well,

539
00:35:50,479 --> 00:35:57,359
I will not implement it, right? But I know that it's there. And then when a problem pops up at a

540
00:35:57,359 --> 00:36:03,200
customer that feeds that project, then yeah, of course you do additional diligence, but

541
00:36:04,159 --> 00:36:10,159
it really helps to be- I think it's more productive to know what is there than reading like

542
00:36:10,880 --> 00:36:15,679
hacker news every morning, right? So I wonder if it's there like a list or

543
00:36:15,679 --> 00:36:18,320
how is that communicated, how the project gets promoted?

544
00:36:19,440 --> 00:36:27,039
That's a question I did. I want to see this too. I found a couple of things. The CNCF- I actually

545
00:36:27,039 --> 00:36:33,840
worked with the CNCF website developer. It used to be truncated RSS so that you'd read it in your

546
00:36:33,840 --> 00:36:39,760
RSS reader as many of us do. And it was only the first like hundred words. And I was like,

547
00:36:39,760 --> 00:36:43,919
no, I get that you want people to click a link and go through, but I also just want to be able

548
00:36:43,919 --> 00:36:50,080
to read my RSS reader and get the sense for what's going on. So that's been expanded. That's

549
00:36:50,080 --> 00:36:56,559
a decent way to keep track of a lot of things, but it's just a lot, right? So there have been

550
00:36:56,640 --> 00:37:01,840
talks of tags and some other ways in which to fix that taxonomy, but that's a known problem

551
00:37:01,840 --> 00:37:08,000
within our ecosystem is so much news. How do you keep track of it? In the new landscape, there's a

552
00:37:08,000 --> 00:37:14,159
metrics tab, I think, or stats. And if you click on that, then you can see which projects have moved

553
00:37:14,159 --> 00:37:18,479
within the year, how many have been accepted, and you can see some graphs that'll tie to that.

554
00:37:18,479 --> 00:37:23,200
I don't think that lets you click and then introspect what those projects are necessarily

555
00:37:23,200 --> 00:37:28,080
though. But that's something that, yeah, that's on my personal wishlist too, is to be able to take

556
00:37:28,080 --> 00:37:35,359
a look at that or who donated this project. I love history because it's a collection of just

557
00:37:35,359 --> 00:37:39,760
what choices were made at certain times with certain effects. And that's kind of what you do

558
00:37:39,760 --> 00:37:44,239
with an SRE. That's what I'm doing within the ecosystem. So by being able to go back and look

559
00:37:44,239 --> 00:37:48,960
at that full history, that's really helpful. We don't have that tool yet, but something that isn't

560
00:37:49,520 --> 00:37:53,919
out of mind. We have a couple of things that we're going to work on probably 2025 and take a look,

561
00:37:53,919 --> 00:37:58,159
a deeper look into something like that. So I would say stay tuned. Check your RSS feed for

562
00:37:58,159 --> 00:38:03,520
what exists today. Is there an API for the project listed there that will be open?

563
00:38:04,799 --> 00:38:12,559
There is. What's really funny, well, funny and interesting is that the landscape database is just

564
00:38:12,640 --> 00:38:24,159
a giant YAML file. So does it have an API? Yeah, kind of. There is an endpoint. I'm not sure if

565
00:38:24,159 --> 00:38:29,359
it's documented for the CNCF website, but there is a way to be able to list out projects, things

566
00:38:29,359 --> 00:38:34,159
like that. I'd say dev stats is probably another good way. That definitely has an API. I've used

567
00:38:34,159 --> 00:38:40,159
that. You could see people's contributions, company contributions, and then the list of things

568
00:38:40,159 --> 00:38:44,719
and projects that are there. So that's probably what's best as far as what's available today.

569
00:38:45,840 --> 00:38:50,559
Big organizations will utilize that API too and pulling metrics as well as doing the same thing,

570
00:38:50,559 --> 00:38:54,799
checking to see where a project's at, et cetera. Challenge accepted. I will find the YAML.

571
00:38:56,719 --> 00:39:01,039
I'm not exactly sure how should I make a parallel out of your beer analogy now,

572
00:39:01,039 --> 00:39:08,320
but I have this question. Let's say you have very good oversight in what's in the ecosystem

573
00:39:08,320 --> 00:39:18,159
and that there are 200 and more projects in there, but are there gaps in the ecosystem?

574
00:39:18,159 --> 00:39:22,960
Are there holes where you think somebody should make a project in this space?

575
00:39:26,080 --> 00:39:33,679
Did you so far identify these gaps or are you somehow insinuating to the people that they

576
00:39:33,679 --> 00:39:38,960
should probably do something in there? It's a big opportunity, or do you have that insight as

577
00:39:38,960 --> 00:39:44,559
well? Can you give us some pointers on that? Yeah, there's no gaps. It's perfect.

578
00:39:44,559 --> 00:39:47,760
It's perfect. Yeah, that's why there's 200 projects. Yeah, of course.

579
00:39:47,760 --> 00:39:50,000
That's why we accept more and more projects every single year.

580
00:39:51,760 --> 00:39:56,719
I'd say some of the, personally, what I've seen, I've loved seeing projects like for the tests

581
00:39:56,719 --> 00:40:04,479
where you can spin up MySQL in this incredible clustered way. Personally, I'm seeing amazing

582
00:40:04,479 --> 00:40:09,119
things with Postgres running in the browser with Wasm. Super cool.

583
00:40:09,119 --> 00:40:11,359
That's Otto's favorite tool. It's so cool.

584
00:40:13,039 --> 00:40:19,599
Having a Postgres compiled, running in browser, and then you have the chat GPT or whatever

585
00:40:19,599 --> 00:40:23,760
the fuck it is. Yeah. And you just write a query and then it generates the whole

586
00:40:24,479 --> 00:40:28,880
tables for you, relationships, graph is there. And you just start querying and it says,

587
00:40:29,599 --> 00:40:34,239
I don't have data, but I can make data for you. And you say, yes, make data. And then you have,

588
00:40:34,239 --> 00:40:38,640
it's like, future is now, right? Yeah, exactly.

589
00:40:39,359 --> 00:40:42,320
I'm not sure that's cloud native. I'm too old for this.

590
00:40:42,719 --> 00:40:48,159
Everything is in browser. Sorry, I thought you touched on that.

591
00:40:48,159 --> 00:40:55,440
Exactly. No, that's insane. Those are the kinds of projects I want to see. I've gotten to work

592
00:40:55,440 --> 00:41:01,119
with big teams, small teams. I think at Disney was the most enlightening for me because we had

593
00:41:01,119 --> 00:41:06,880
21st Century Fox come in. We just got out of all these data centers and got rid of Salesforce and

594
00:41:06,880 --> 00:41:11,359
these other things. And then we acquired 21st Century Fox and all of a sudden our backlog grew

595
00:41:11,359 --> 00:41:18,239
again. And so we're like, ah, we just got out of this data center. But the biggest thing was

596
00:41:18,239 --> 00:41:22,880
learning about teams and what they were expecting. And it's, you're always going to want storage.

597
00:41:22,880 --> 00:41:26,400
You're going to want to have a way for the app to access these different services and things.

598
00:41:26,960 --> 00:41:32,080
You want an application to learn about how it's being used and make its own changes to things.

599
00:41:32,080 --> 00:41:37,280
Like, okay, maybe cold storage is fine. Nope. This is accessed a lot. Let's move it up to warm. Oh,

600
00:41:37,280 --> 00:41:43,200
no. Hot. We really need hot. Okay. Let's double active. International app. You can have something

601
00:41:43,200 --> 00:41:49,840
shape itself. Those are, I think, multi-cluster. It's there. I think that that's a little bit of

602
00:41:49,840 --> 00:41:56,320
a gap right now. Identity and access management in a true multi-cloud way. That really difficult

603
00:41:56,320 --> 00:42:03,359
to do. Multi-cloud DNS, like auto failover. If Google shut down and you need to shift over to

604
00:42:03,359 --> 00:42:08,319
Azure, Amazon, or Oracle, that's still lots of manual steps in the mix right now.

605
00:42:09,119 --> 00:42:15,839
Same thing with CDNs too. So there's a lot of functional gaps like that, that I see still.

606
00:42:15,839 --> 00:42:17,680
And it's just been, who's going to come up with the project?

607
00:42:17,680 --> 00:42:22,239
But from the end user's perspective, you have to be big enough so that you actually need to

608
00:42:22,239 --> 00:42:27,760
tackle these kinds of challenges, right? Exactly. And is it truly in a cloud's

609
00:42:27,760 --> 00:42:32,079
incentive to really make that the focus? I would say yes, with a specification,

610
00:42:32,400 --> 00:42:36,000
like if all clouds kind of talked and they said, okay, cool. We could get out of the business of

611
00:42:36,000 --> 00:42:40,319
constantly rewriting this or building on this legacy thing that we've had for a long time.

612
00:42:41,040 --> 00:42:46,079
Like OpenID Connect, can we just make that work? You see Keycloak coming in. That's an

613
00:42:46,079 --> 00:42:50,479
interesting project to check out for OpenID Connect and authentication authorization. But

614
00:42:51,680 --> 00:42:58,719
yeah. Personally, I want to see the test for Postgres. That's kind of cool.

615
00:42:59,040 --> 00:43:04,719
Some of the AI stuff is still up and coming as well. There's an alpha feature in Kubernetes

616
00:43:04,719 --> 00:43:08,959
called Dynamic Resource Allocation. And that allows for you to be able to more efficiently

617
00:43:08,959 --> 00:43:15,760
schedule CPUs, GPUs, and other things. And then you can work with WebAssembly on Kubernetes now

618
00:43:15,760 --> 00:43:19,920
too. It's not a replacement for containers. It works really well in tandem with. But

619
00:43:21,920 --> 00:43:27,599
that community, I think, candidly has spent more time with specifications and standards,

620
00:43:27,599 --> 00:43:31,439
and then now they're just moving into actually making actionable things.

621
00:43:32,400 --> 00:43:36,479
But it's kind of, when you're setting up the dinner table for so long and your family's

622
00:43:36,479 --> 00:43:41,119
waiting to eat, you're like, you get people that lose interest. So I feel like that's...

623
00:43:42,079 --> 00:43:47,280
This WebAssembly, we touched on this demo that we equally share passion.

624
00:43:49,280 --> 00:43:54,959
This idea is very interesting that the next generation of containers is going to be WebAssembly.

625
00:43:55,920 --> 00:44:02,319
I've heard this two to three years ago. I've seen a couple of projects that are actually trying to

626
00:44:02,319 --> 00:44:08,239
build whole durable computing platforms on top of these things. These are very interesting ideas

627
00:44:08,239 --> 00:44:14,560
that will probably shape a lot of these tools if they actually make it to more adoption, I guess.

628
00:44:15,839 --> 00:44:22,880
I think it needs more stories. We had at KubeCon... Where was that? I think it was in Paris.

629
00:44:22,880 --> 00:44:28,319
We talked about Zeiss. They couldn't grow their data center size, but they were asked to do more

630
00:44:28,319 --> 00:44:33,359
with their compute and their applications. And so they turned to WebAssembly to save the day

631
00:44:33,359 --> 00:44:38,800
and were able to more effectively and efficiently utilize all of their compute using WebAssembly

632
00:44:38,800 --> 00:44:40,800
and all the features. Where do you think this

633
00:44:42,319 --> 00:44:47,599
game comes into the play? Why do you think these WebAssembly would be more efficient than Zeiss?

634
00:44:48,640 --> 00:44:52,160
It took a little bit of rethinking of the way that they set up their applications,

635
00:44:52,160 --> 00:44:56,479
but more efficient in that their workload specifically is one that was bursty. So

636
00:44:56,479 --> 00:45:00,719
things would come in, you'd scale up, you'd be able to handle that at an immense scale,

637
00:45:00,719 --> 00:45:05,359
and then scale back down. So I think that WebAssembly does really good at those kinds

638
00:45:05,359 --> 00:45:10,479
of workloads, whereas containers are better at others too. Running a database in that

639
00:45:10,479 --> 00:45:13,760
for production, that might be something that needs to be thought about.

640
00:45:13,760 --> 00:45:19,760
It's funny how WebAssembly nowadays is used on the backend because it's a multi-arch assembly.

641
00:45:19,760 --> 00:45:20,640
It goes around.

642
00:45:20,719 --> 00:45:25,760
So it's just like, oh my God, so funny. If you think about it from five years ago.

643
00:45:26,640 --> 00:45:33,199
It's wild. I remember ASMJS, and I got so excited way back when that was a thing. But yeah,

644
00:45:33,199 --> 00:45:37,359
even Disney Plus, they utilize a lot of WebAssembly for their front end to create really

645
00:45:37,359 --> 00:45:41,439
nice UX, UI, but we're seeing it skew into the backend.

646
00:45:42,000 --> 00:45:49,760
So, sorry. So it seems that the Cloud Native Foundation, you are starting to becoming

647
00:45:50,800 --> 00:46:03,599
relatively serious design slash RFC organization. Even if it's not super official or semi-official,

648
00:46:03,599 --> 00:46:08,079
there are pages about those standards that then different vendors agree on, and there's maybe a

649
00:46:08,079 --> 00:46:15,280
larger open source project adopting that standard. And there's maybe a smaller one for us plebs,

650
00:46:16,400 --> 00:46:20,880
so that we can also maybe have distributed storage, but with not such much complexity.

651
00:46:20,880 --> 00:46:23,599
It seems that that's a really important role nowadays.

652
00:46:24,560 --> 00:46:29,439
Absolutely. I think that there's, and we have lots of reports to help show that too,

653
00:46:29,439 --> 00:46:33,760
because that's been our hypothesis for a while as well as a foundation is like,

654
00:46:33,760 --> 00:46:40,079
if we have this set, does it become easier as an end user or vendor? You can get that

655
00:46:40,079 --> 00:46:44,880
implementation or that spec built at home too, and you can build against it and be like, okay,

656
00:46:44,880 --> 00:46:49,839
one day I can make a product that'll integrate with this specific workflow, or I can shift over

657
00:46:49,839 --> 00:46:55,359
and you're not locked into a specific vendor. That's, I think, the real benefit and treasure

658
00:46:55,359 --> 00:46:59,520
of having the community keep everybody honest too, and in a vendor neutral way.

659
00:47:00,160 --> 00:47:07,439
One thing right now I want to see, I'd love it if we had, like if OpenAI were open to donating

660
00:47:07,439 --> 00:47:13,119
their model spec to a foundation so that it could be vendor neutral. Everyone kind of utilizes

661
00:47:13,119 --> 00:47:19,520
OpenAI's API structure and their model spec and everything right now, but it's still owned by

662
00:47:19,520 --> 00:47:24,959
one vendor. And so you see people shaping to that rather than thinking critically, I would say,

663
00:47:25,520 --> 00:47:32,479
about how it works, this is great, but it'd be nice to be able to have something like WC3 or

664
00:47:32,479 --> 00:47:37,839
those kinds of bodies managing a specification and then bringing in the right people to be able to

665
00:47:37,839 --> 00:47:43,760
interact with that. I was sort of thinking, you said that you're with Cloud Native Foundation

666
00:47:43,760 --> 00:47:56,000
for two, almost three years now. This whole AI wave hype explosion, it kind of shook the circle.

667
00:47:56,000 --> 00:47:57,839
Oh yeah. It's like, wait, what?

668
00:47:57,839 --> 00:48:04,239
Whatever you were doing now, there's like a GPU in the mix and the workflows are different and

669
00:48:04,239 --> 00:48:10,319
people have now these beastie machines and everything needs to be, you know-

670
00:48:10,319 --> 00:48:10,880
Cool lights.

671
00:48:11,760 --> 00:48:19,199
Yeah. Demos are becoming insane. I'm not sure if I'll have a job next week, but

672
00:48:21,359 --> 00:48:28,880
this has probably rapidly changed things for you as well. How do you guys tackle these challenges?

673
00:48:28,880 --> 00:48:30,719
I guess it's a different environment now.

674
00:48:31,680 --> 00:48:35,199
It's been really interesting. That's my soundbite.

675
00:48:35,199 --> 00:48:36,000
It's really interesting.

676
00:48:36,319 --> 00:48:44,880
But Kubernetes is a great platform to build platforms. And so there's a lot that it already

677
00:48:44,880 --> 00:48:49,839
did. And so we would have folks from the press and media come out and ask like,

678
00:48:49,839 --> 00:48:52,880
hey, what's going on with this? When's it going to be ready? And we're like, oh, it is already.

679
00:48:53,439 --> 00:48:54,160
They're like, wait, what?

680
00:48:55,839 --> 00:49:01,040
And so as you deal with batch workloads and stats and things like that, yes, that's already there.

681
00:49:01,040 --> 00:49:04,560
When it comes to some of the other inference things or being able to,

682
00:49:04,560 --> 00:49:10,560
like, you can't right now in Kubernetes tap into a GPU and say, I want 1.5 GPUs, right?

683
00:49:10,560 --> 00:49:15,119
You don't have that kind of experience. And that's why NVIDIA bought RunAI is because that's

684
00:49:15,119 --> 00:49:18,800
really what they're looking to do is how do we virtualize this and make it make sense?

685
00:49:19,839 --> 00:49:23,599
That's what the Kubernetes community is working on, both NVIDIA, Intel, and several others

686
00:49:24,400 --> 00:49:29,680
in that dynamic resource allocation feature so that you can actually schedule things more

687
00:49:29,680 --> 00:49:35,839
effectively. And then even existing CPUs and other kinds of devices that you're plugging in,

688
00:49:35,839 --> 00:49:40,640
you have more control over it. In testing that, I think that they said that they were

689
00:49:40,640 --> 00:49:45,599
able to raise some data centers where they're testing from like 60% efficiency to like 90.

690
00:49:45,599 --> 00:49:49,439
So they're seeing some wild things happen when you're just able to better schedule things and

691
00:49:49,439 --> 00:49:56,400
then more quickly make changes. Orchestration's crazy and difficult on that front. So that's one

692
00:49:56,400 --> 00:49:58,719
of the ways in which we're shaping and changing things.

693
00:50:00,000 --> 00:50:04,760
Organizations I've spoken to, a couple of different archetypes for that.

694
00:50:05,040 --> 00:50:07,360
Some are like, AI, let's go.

695
00:50:07,480 --> 00:50:10,680
And then you jump in and they throw a bunch of stuff out and they realize, oh,

696
00:50:10,760 --> 00:50:15,320
no, we still need about 70% at least of what we're doing already.

697
00:50:15,640 --> 00:50:17,040
This is just going to augment it.

698
00:50:17,719 --> 00:50:21,120
And then you have other groups that I think are thinking more effectively

699
00:50:21,120 --> 00:50:25,120
about it, where they're taking a look at like how they route those kinds of requests.

700
00:50:25,440 --> 00:50:28,760
Hey, this has personally identifiable information in it.

701
00:50:28,840 --> 00:50:29,120
Nope.

702
00:50:29,120 --> 00:50:30,360
Don't even send it out of the app.

703
00:50:30,400 --> 00:50:30,799
Yeah.

704
00:50:30,879 --> 00:50:35,919
Um, or let's send it to a small language model or our own trained LLM rather than

705
00:50:35,919 --> 00:50:40,200
to the vendor that's going to cost like 30 times what we want to pay for this.

706
00:50:40,759 --> 00:50:44,840
Um, and then others like Adobe that completely got rid of all of their

707
00:50:44,840 --> 00:50:48,320
closed source stuff, um, behind the scenes for their, for a couple of their

708
00:50:48,320 --> 00:50:53,439
platforms and, uh, are utilizing open source now to interact with that.

709
00:50:53,439 --> 00:50:56,040
So really cool stories that we're starting to see come out.

710
00:50:56,439 --> 00:51:01,200
And then I think, again, you know, if you know your fundamentals well, uh, you're

711
00:51:01,200 --> 00:51:03,799
not going to be throwing away as much of the application as you need.

712
00:51:04,080 --> 00:51:07,120
Again, a lot of it, you know, does it need AI or can you actually do this with

713
00:51:07,120 --> 00:51:09,800
stats is, is a reasonable question to ask.

714
00:51:09,800 --> 00:51:10,720
I know not a fun one.

715
00:51:10,720 --> 00:51:16,559
Cause you're like, no, but my AI project, but you know, it's, um, you take a look

716
00:51:16,559 --> 00:51:18,599
at it's, it's, what do you want to do?

717
00:51:18,639 --> 00:51:20,760
And AI is great for like reasoning.

718
00:51:20,760 --> 00:51:25,160
So if you've a crazy, if then else case statement kind of thing going on.

719
00:51:25,400 --> 00:51:25,839
Sure.

720
00:51:25,839 --> 00:51:27,919
Maybe that's something that can help on that front.

721
00:51:28,400 --> 00:51:31,320
Um, data classification is a big one.

722
00:51:31,440 --> 00:51:34,160
And then a lot of organizations aren't ready on that front either.

723
00:51:34,199 --> 00:51:37,800
They don't have the right taxonomy and they need to go before they even train

724
00:51:37,800 --> 00:51:42,279
their data or work with it in that kind of vectorized way, they, they have

725
00:51:42,279 --> 00:51:43,559
to get their data in order.

726
00:51:43,639 --> 00:51:46,800
And so that's also something where you can use AI to help out a little bit

727
00:51:46,800 --> 00:51:50,480
with that too, but not a lot of people want to jump in and a lot of

728
00:51:50,639 --> 00:51:52,120
borderlines are still the same.

729
00:51:52,320 --> 00:51:57,120
In that regards, in terms of data, I would say like, okay, we have vectors

730
00:51:57,120 --> 00:51:59,320
now on vector databases and all that stuff.

731
00:51:59,320 --> 00:52:08,000
But, um, but there's like still at what point we won't need to write YAML files

732
00:52:08,000 --> 00:52:12,679
that you guys really love or Jinja templates that you love even more.

733
00:52:12,679 --> 00:52:13,279
They're right.

734
00:52:13,279 --> 00:52:20,520
The best decision is you take a templating language for HTML and start writing YAML

735
00:52:20,559 --> 00:52:22,000
and that's the best, right?

736
00:52:22,000 --> 00:52:25,800
And then you miss one minus on a tech and yeah.

737
00:52:26,160 --> 00:52:27,399
That's what I'm using AI for.

738
00:52:27,479 --> 00:52:28,639
It's like, it's my YAML file.

739
00:52:30,399 --> 00:52:35,639
But yeah, in terms of like defining these, uh, specs for, for Kubernetes

740
00:52:35,639 --> 00:52:39,800
and things like that, will a lot of these things kind of be offloaded

741
00:52:39,839 --> 00:52:42,520
to this modern tools as well?

742
00:52:42,639 --> 00:52:47,039
Do you see changes there as well to be made so that you don't have to have

743
00:52:47,039 --> 00:52:50,960
human that defines all these things and misses or like, do you see these

744
00:52:50,960 --> 00:52:52,600
things change there as well?

745
00:52:53,399 --> 00:52:58,639
I've seen, I've seen a lot, a lot of focus on, um, internal development

746
00:52:58,639 --> 00:53:03,520
platforms, um, not just backstage, but even being able to like, okay, what

747
00:53:03,520 --> 00:53:05,000
does the developer experience look like?

748
00:53:05,320 --> 00:53:07,520
Like Intuit's an incredible job with this.

749
00:53:07,520 --> 00:53:09,080
They'll have their dev team come in.

750
00:53:09,440 --> 00:53:11,880
They'll kind of have a sense for like, okay, this is going to be either an

751
00:53:11,880 --> 00:53:15,279
Angular app or Java or kind of like a sense for what tools they're using.

752
00:53:15,679 --> 00:53:17,720
They'll check some boxes and they'll say, okay, here are the

753
00:53:17,720 --> 00:53:19,399
things I want to use and go.

754
00:53:19,520 --> 00:53:24,000
And then those, uh, teams, the infrastructure team, security team,

755
00:53:24,000 --> 00:53:27,199
all of these teams can have come together to create these templates

756
00:53:27,199 --> 00:53:29,399
and then regularly keep them updated.

757
00:53:29,399 --> 00:53:32,759
So as the dev teams are working, they just kind of understand already

758
00:53:32,759 --> 00:53:33,440
what they're going to use.

759
00:53:33,440 --> 00:53:35,759
They're like, Hey, I need this kind of storage or that kind of thing.

760
00:53:36,080 --> 00:53:39,880
They're able to self-service, add that in, and they have a great platform to

761
00:53:39,880 --> 00:53:42,000
work with that is going to stay updated.

762
00:53:42,399 --> 00:53:45,679
If things are breaking, they have really good telemetry and,

763
00:53:46,000 --> 00:53:47,960
and tracing on what went wrong.

764
00:53:48,279 --> 00:53:51,240
And then they're starting to take a look and they've open sourced a couple of

765
00:53:51,240 --> 00:53:55,000
things that are not in the CNCF yet that are like AI ops.

766
00:53:55,039 --> 00:53:57,080
And so actually like this is an outage.

767
00:53:57,119 --> 00:54:01,440
It learns from that and then is able to tell it what, what you fixed, if you

768
00:54:01,440 --> 00:54:06,160
need to manually intervene, and then it's able to go and take that knowledge

769
00:54:06,160 --> 00:54:08,320
and go to apply that stuff, which is really cool.

770
00:54:08,320 --> 00:54:12,759
So no more panicky Prometheus querying and then figuring out which tags are

771
00:54:12,759 --> 00:54:14,520
okay to not query a bit too much.

772
00:54:14,559 --> 00:54:14,880
Okay.

773
00:54:15,160 --> 00:54:15,479
Yeah.

774
00:54:15,759 --> 00:54:18,559
And you know, the goal, no more 3am calls, please let me sleep.

775
00:54:19,640 --> 00:54:23,519
Then we could do code and kind of like orchestrate what's coming out of all

776
00:54:23,519 --> 00:54:24,559
of these tools that we have.

777
00:54:24,559 --> 00:54:25,799
More beer and more pizza.

778
00:54:25,920 --> 00:54:26,279
Yeah.

779
00:54:27,239 --> 00:54:27,679
That's all we need.

780
00:54:27,679 --> 00:54:29,559
First AI, then escalate to human.

781
00:54:29,600 --> 00:54:31,880
Oh, I love the future.

782
00:54:31,959 --> 00:54:33,239
I love the future is now.

783
00:54:33,399 --> 00:54:33,640
Yeah.

784
00:54:35,040 --> 00:54:37,040
I, I guess I also, okay.

785
00:54:37,040 --> 00:54:41,079
AI is shaping, I don't want to go into more because we do have this AI

786
00:54:41,079 --> 00:54:44,600
fatigue that's creeping in, but that's not my.

787
00:54:44,880 --> 00:54:50,200
Uh, probably there's, I think that's, that's my one, like, if I have a one

788
00:54:50,200 --> 00:54:54,760
nugget of wisdom to share on that topic, it's, um, AI isn't the product.

789
00:54:54,760 --> 00:54:55,839
It's a feature.

790
00:54:55,959 --> 00:54:56,239
Yeah.

791
00:54:56,279 --> 00:54:58,799
It's the, it's the feature that helps you enable that.

792
00:54:58,839 --> 00:55:01,559
Please don't make it the product that's wrong.

793
00:55:01,559 --> 00:55:02,040
Product fit.

794
00:55:02,799 --> 00:55:03,320
Beautiful.

795
00:55:03,359 --> 00:55:09,000
Uh, I had like a, another, I saw another, let's say movement kind of a thing

796
00:55:09,000 --> 00:55:14,799
going on, uh, where development environment is also changing in sense that,

797
00:55:14,799 --> 00:55:18,720
you know, if you used to have like your development machine and you run

798
00:55:18,720 --> 00:55:20,760
everything in there, okay.

799
00:55:20,760 --> 00:55:24,119
If your infrastructure is so simple, you have like one node cluster on your

800
00:55:24,119 --> 00:55:25,640
machine, you do things like that.

801
00:55:26,040 --> 00:55:31,839
But I also sense that a lot of these things is moving to like environments

802
00:55:31,839 --> 00:55:37,239
that are in the cloud or semi in the cloud or pre provision for your development.

803
00:55:37,559 --> 00:55:41,200
Do you also sense that things are changing there where engineers

804
00:55:41,640 --> 00:55:43,559
kind of like have sandboxes or what?

805
00:55:43,720 --> 00:55:45,679
Can you tell me a bit more on that as well?

806
00:55:45,679 --> 00:55:46,480
Do you sense this?

807
00:55:47,079 --> 00:55:47,880
Absolutely.

808
00:55:47,959 --> 00:55:53,000
I think even when, like, uh, I've been a big fan of visual studio code for a long

809
00:55:53,000 --> 00:55:56,279
time, and then I just recently got introduced to like cursor, that's really

810
00:55:56,279 --> 00:56:01,160
cool, but you know, like I'm also flying a lot and getting to travel a lot more.

811
00:56:01,160 --> 00:56:02,600
So I'm like, ah, okay.

812
00:56:02,679 --> 00:56:06,320
The plain wifi is not going to cut it when I want to do development or try things out.

813
00:56:06,679 --> 00:56:09,839
Um, I can't host an LLM and work on this at the same time.

814
00:56:09,839 --> 00:56:12,279
And it's, it, that fatigues me to no end.

815
00:56:12,839 --> 00:56:18,399
Um, it's a lot easier for organizations to justify their spend for folks, as

816
00:56:18,399 --> 00:56:21,399
well as get them the access that they need when we're kind of going back to

817
00:56:21,399 --> 00:56:25,119
this, like dumb terminal or simple terminal, and then a mainframe kind of

818
00:56:25,119 --> 00:56:30,480
setup where you can plug into the cloud, um, and have your GPUs, all these things

819
00:56:30,480 --> 00:56:34,880
that, or run times, all these things available to you, there's a lot more

820
00:56:34,880 --> 00:56:36,160
certainty around that too.

821
00:56:36,160 --> 00:56:40,799
So like with GitHub code spaces or get pod, there's a whole bunch of things

822
00:56:40,799 --> 00:56:41,839
available on that front.

823
00:56:42,239 --> 00:56:47,160
Um, that are, they'll make it easier for developers in that sense of standards

824
00:56:47,160 --> 00:56:51,720
and being able to give feedback, you know, across your team, like, um, works

825
00:56:51,720 --> 00:56:54,279
in my machine, doesn't work on yours within our setup, even though we're

826
00:56:54,279 --> 00:56:55,799
containerized, what's going on here.

827
00:56:56,279 --> 00:56:58,640
Um, it helps eliminate a lot of those problems.

828
00:56:59,799 --> 00:57:04,640
Like this, like development with live environments and things tooling around

829
00:57:04,679 --> 00:57:09,040
that, like, uh, what is telepresence or things like, we see a lot of movement in

830
00:57:09,040 --> 00:57:09,600
that direction.

831
00:57:09,600 --> 00:57:10,519
At least that's my feeling.

832
00:57:10,559 --> 00:57:13,160
It might be again, my bubble there as well.

833
00:57:13,320 --> 00:57:15,720
It's no, it's, it's huge from what I've seen.

834
00:57:15,720 --> 00:57:19,440
And anecdotally talking to so many community members, that's, that's favored

835
00:57:19,440 --> 00:57:22,160
because it's, this is what is going into production.

836
00:57:22,160 --> 00:57:24,079
It's not, I'm, you're guessing less.

837
00:57:24,160 --> 00:57:24,519
Yeah.

838
00:57:24,519 --> 00:57:25,600
You're less guessing this.

839
00:57:25,600 --> 00:57:25,760
Yeah.

840
00:57:26,320 --> 00:57:26,519
Yeah.

841
00:57:27,000 --> 00:57:27,640
Uh, yeah.

842
00:57:27,760 --> 00:57:30,200
The era of jump boxes are over.

843
00:57:30,239 --> 00:57:35,079
What you probably want is submit the request, get it approved, and then jump

844
00:57:35,079 --> 00:57:39,079
in with the privilege that you need to debug something if tracing is not enough.

845
00:57:39,119 --> 00:57:45,640
So, yeah, I think, uh, yeah, there's a lot of work on that front and, uh, our

846
00:57:45,640 --> 00:57:48,760
lives are getting better at least from the operational perspective.

847
00:57:49,640 --> 00:57:53,320
Uh, uh, when I go, um, I had another question.

848
00:57:53,679 --> 00:57:59,079
It's not related really to this one, but, um, there is Argo CD, right.

849
00:57:59,079 --> 00:58:04,040
For the continuous delivery and deployment, um, in my bubble, that's

850
00:58:04,040 --> 00:58:07,239
kind of like the way to go if you want to deploy these things these days, but

851
00:58:07,239 --> 00:58:12,200
there's also Flux and I think you still might have clients on Flux, but both of

852
00:58:12,200 --> 00:58:15,679
these projects are cloud native projects, I think, right?

853
00:58:16,279 --> 00:58:19,200
So they're in a sense competing with each other, right?

854
00:58:19,559 --> 00:58:21,760
How does that happen or work?

855
00:58:21,760 --> 00:58:24,839
It's like, I think it's good because competition is good, but

856
00:58:24,880 --> 00:58:26,679
they're like in a similar space.

857
00:58:26,720 --> 00:58:29,040
Do you have all of these overlaps in there as well?

858
00:58:29,040 --> 00:58:30,880
It's like, it just happens naturally.

859
00:58:31,239 --> 00:58:32,559
Yeah, it'll happen naturally.

860
00:58:32,599 --> 00:58:37,200
And you'll, I think that that's really good because you've had standout projects

861
00:58:37,200 --> 00:58:41,119
where they don't have a competing project or anything even remotely close to it.

862
00:58:41,119 --> 00:58:43,640
And they're constantly asking like, are we hitting the mark?

863
00:58:43,640 --> 00:58:44,400
Is this okay?

864
00:58:44,400 --> 00:58:46,719
Is it, it, it, it leaves a lot of question.

865
00:58:46,799 --> 00:58:51,200
Not that it's wrong, but it's just a lot more difficult to bounce off something

866
00:58:51,200 --> 00:58:55,039
and get that sense of what you're, if, if what you're working on makes sense to

867
00:58:55,039 --> 00:58:55,640
the community.

868
00:58:56,159 --> 00:59:01,760
Yeah, that's, that's entirely, that's around our whole concept of no, we don't

869
00:59:01,760 --> 00:59:03,359
want to be a kingmaker or pick the winners.

870
00:59:03,599 --> 00:59:07,919
We'll establish this really nice atmosphere for both Flux and

871
00:59:07,919 --> 00:59:09,400
Argo to be able to exist.

872
00:59:09,880 --> 00:59:14,239
And then I think they'd even tried to like make the GitOps toolkit and then

873
00:59:14,239 --> 00:59:18,039
they decided that wasn't the right direction forward as far as like combining

874
00:59:18,039 --> 00:59:18,599
the projects.

875
00:59:18,599 --> 00:59:19,840
It's like, oh, these are pretty similar.

876
00:59:19,840 --> 00:59:21,679
Can we, can we mix it together?

877
00:59:21,719 --> 00:59:22,280
No, we can't.

878
00:59:22,840 --> 00:59:25,000
And then, but this project's kind of went forward.

879
00:59:25,400 --> 00:59:29,559
I think anecdotally I've seen more developers favor Argo and things like

880
00:59:29,559 --> 00:59:29,840
that.

881
00:59:29,840 --> 00:59:32,520
And then the UI, I think that was like the standout thing.

882
00:59:32,520 --> 00:59:34,000
They're like, yes, this is what we want.

883
00:59:34,880 --> 00:59:38,760
And then Flux, it would typically be, that's, that's mostly what I used earlier

884
00:59:38,760 --> 00:59:44,559
on was it's not, not standing up crazy infrastructure anymore, but Flux was

885
00:59:44,559 --> 00:59:45,000
really nice.

886
00:59:45,000 --> 00:59:48,520
And that pairs well with like SREs and that kind of mindset too.

887
00:59:48,520 --> 00:59:50,280
It just fits into that workflow really well.

888
00:59:50,640 --> 00:59:53,760
And I like that because it allows you to solve problems in different ways.

889
00:59:53,760 --> 00:59:57,119
It's like, okay, I like this brand of whatever I'm trying to do.

890
00:59:57,359 --> 00:59:58,719
I like that it allows for that.

891
00:59:59,520 --> 01:00:06,479
Um, the ecosystem is, so all this new wave of tooling, especially for

892
01:00:06,479 --> 01:00:10,799
Kubernetes, it's now old news, right?

893
01:00:10,880 --> 01:00:12,919
Um, so it's getting more mature.

894
01:00:13,320 --> 01:00:17,679
And with that, it also happens that some project might not, let's say survive.

895
01:00:17,679 --> 01:00:23,000
So that the active maintainers have, maybe they just started duck farm or

896
01:00:23,280 --> 01:00:25,919
something else like, uh, growing hops.

897
01:00:25,960 --> 01:00:31,880
If you go back to beer, um, is there like, if you promote some projects to, I

898
01:00:31,880 --> 01:00:39,520
don't know, mature or, um, will also there be like a flag retired or?

899
01:00:40,039 --> 01:00:40,320
Yeah.

900
01:00:40,320 --> 01:00:43,880
Well, we have like a archived and so people will signal like, Hey, is this

901
01:00:43,919 --> 01:00:48,520
project alive or check into this or kind of see if it's abiding by the code of

902
01:00:48,520 --> 01:00:51,119
conduct or whatever the governance of the structure is.

903
01:00:51,520 --> 01:00:55,200
And then if it's the TOC, we'll take a look at that and I'll say, you know, like,

904
01:00:55,239 --> 01:00:57,559
no, this is, everything is above board here.

905
01:00:57,599 --> 01:00:58,960
Or they're going to say, Nope.

906
01:00:59,000 --> 01:00:59,239
Yep.

907
01:00:59,239 --> 01:00:59,880
This is valid.

908
01:00:59,919 --> 01:01:01,520
This is worth archiving.

909
01:01:02,119 --> 01:01:06,760
Um, and so we've seen, I think nine projects archived so far and it's, it

910
01:01:06,760 --> 01:01:08,520
will continue to grow over the years.

911
01:01:08,840 --> 01:01:12,599
But it's, yeah, it's, it, it'll happen at some point in time.

912
01:01:12,599 --> 01:01:15,440
It'll be really interesting when Kubernetes gets to that frame, you know,

913
01:01:15,440 --> 01:01:18,919
like, or what did that kind of evolves into if it'll split off

914
01:01:18,919 --> 01:01:20,479
into some, something else entirely.

915
01:01:21,119 --> 01:01:25,080
Um, I like what you said to around like stability and like, it's, it's

916
01:01:25,080 --> 01:01:28,280
becoming that boring thing, dependable thing in production.

917
01:01:28,840 --> 01:01:34,080
And we've even seen, there was a couple of years ago and, um, it's

918
01:01:34,119 --> 01:01:38,520
in a night just like this and, and San Francisco where a bunch of venture

919
01:01:38,520 --> 01:01:41,359
capitalists were looking at the contributions to the Kubernetes project.

920
01:01:41,640 --> 01:01:44,840
And they saw for the first time ever, it had like crusted and it was starting to go

921
01:01:44,840 --> 01:01:49,440
down and then went, and then, but if you zoom out, you'd go back and you click on

922
01:01:49,440 --> 01:01:52,479
dev stats, you go all CNCF, it's still hockey stick up to the right.

923
01:01:52,559 --> 01:01:56,919
And so rather than think critically, someone freaked out and said,

924
01:01:56,919 --> 01:01:58,440
Oh, Kubernetes is going down.

925
01:01:58,919 --> 01:02:00,840
And it's like, yeah, but that's a good thing.

926
01:02:01,119 --> 01:02:03,719
Um, that's because people are focused on Argo.

927
01:02:03,760 --> 01:02:05,840
They're focused on open telemetry backstage.

928
01:02:06,080 --> 01:02:07,599
They're solving other problems now.

929
01:02:08,000 --> 01:02:10,960
They have, they feel safe enough to be able to divert their

930
01:02:10,960 --> 01:02:12,359
attention onto other things.

931
01:02:12,760 --> 01:02:14,080
That's, I think that's really cool.

932
01:02:14,080 --> 01:02:17,840
And so if we continue to do that and think critically, like, okay, this is good enough.

933
01:02:17,880 --> 01:02:19,440
Or what can we take out of this?

934
01:02:19,440 --> 01:02:20,479
What's extra?

935
01:02:20,520 --> 01:02:21,960
What do we actually need here?

936
01:02:22,359 --> 01:02:23,919
Then what's the problem we're trying to solve?

937
01:02:24,000 --> 01:02:25,599
Then you're going to have amazing things happen.

938
01:02:26,200 --> 01:02:30,760
But those are the thing, like engineers have like now learned what kind of

939
01:02:30,760 --> 01:02:36,440
workloads do you need, like for what kind of workloads Kubernetes is the way to go.

940
01:02:36,880 --> 01:02:42,080
Whereas like you can now do a lot with, I don't know, Docker swarm or Docker

941
01:02:42,080 --> 01:02:43,520
compose or things like that.

942
01:02:43,520 --> 01:02:44,840
You can get pretty far with that.

943
01:02:45,359 --> 01:02:51,559
Um, this week we attended a Microsoft conference or NT conference here in

944
01:02:51,559 --> 01:02:55,640
Slovenia, and there was like a one senior Microsoft engineer and he explained

945
01:02:55,640 --> 01:02:59,840
there's like four ways how you can run containers on Azure, right.

946
01:02:59,840 --> 01:03:03,359
And this goes from like very simple, just one container.

947
01:03:03,359 --> 01:03:04,760
We take care of everything.

948
01:03:05,039 --> 01:03:09,239
And then it goes like you can use their managed Kubernetes and

949
01:03:09,239 --> 01:03:10,440
there's like a lot of options.

950
01:03:10,640 --> 01:03:13,799
I don't even remember now, but there's like four options how you can run it.

951
01:03:13,799 --> 01:03:19,919
And you can like tune into which, like where your organization is, to what side

952
01:03:19,919 --> 01:03:22,400
you actually want to have to deal with these things, where you want to

953
01:03:22,400 --> 01:03:24,000
offload this to third parties.

954
01:03:24,440 --> 01:03:29,400
So I think like people now, they don't just say Kubernetes is the way to go.

955
01:03:29,440 --> 01:03:30,000
Go for it.

956
01:03:30,000 --> 01:03:32,599
There's a lot of options in a lot of directions.

957
01:03:32,919 --> 01:03:36,320
Uh, even like you said, Docker, you don't have to use Docker daemon.

958
01:03:36,320 --> 01:03:38,359
You can use the, these, uh, what is it called?

959
01:03:38,359 --> 01:03:41,200
Uh, container deal, whatever to run these things.

960
01:03:41,520 --> 01:03:46,719
So, um, yeah, there's a lot more options, but, uh, yeah, ecosystem

961
01:03:46,719 --> 01:03:48,400
round is between mature and mature.

962
01:03:48,760 --> 01:03:51,400
Um, which brings me to my next question.

963
01:03:51,520 --> 01:03:58,119
Um, and, uh, I, I, I thought I'm going to rephrase it differently, but I have

964
01:03:58,119 --> 01:04:03,599
this like a really interesting quote and it says, Go is the PHP for zoomers.

965
01:04:06,520 --> 01:04:13,239
So my question is this to you guys, like, uh, a lot of these tools, majority

966
01:04:13,239 --> 01:04:15,000
of these tools is written in Go.

967
01:04:15,520 --> 01:04:21,159
And, uh, does that scare you guys, or is this the way to go?

968
01:04:21,159 --> 01:04:26,679
Because I seen his face, like when he comes in, he tries to explain that he

969
01:04:26,679 --> 01:04:32,400
is SRI and he has a really mature ecosystem and then he shares the stack

970
01:04:32,400 --> 01:04:34,719
traces from Go and it's like all fire and shit.

971
01:04:35,159 --> 01:04:39,520
So the question I have for you, I guess for both of you guys, do you think that

972
01:04:40,359 --> 01:04:43,479
the Go is the right decision for these things?

973
01:04:43,520 --> 01:04:46,960
I know that it doesn't make sense to rewrite all of these things into something

974
01:04:46,960 --> 01:04:51,039
else because it's so mature and so big and complicated, but still like, do you

975
01:04:51,039 --> 01:04:54,880
still think that the Go is the right tool for these things?

976
01:04:54,880 --> 01:05:01,039
So I know this is a personal opinions and all, but still like a PHP for zoomers.

977
01:05:01,080 --> 01:05:01,679
Do you use it?

978
01:05:03,280 --> 01:05:03,919
That's funny.

979
01:05:03,960 --> 01:05:07,520
I think that that's always something that's, that's kind of going

980
01:05:07,520 --> 01:05:09,039
on underneath the surface, right?

981
01:05:09,039 --> 01:05:13,960
Like if you are trying to squeeze that performance faster than C or C++, it's

982
01:05:13,960 --> 01:05:18,719
going to be really hard, but there's, there's not a glut of people really

983
01:05:18,719 --> 01:05:19,880
writing in that anymore.

984
01:05:20,280 --> 01:05:22,799
Um, Rust has been something that's been really interesting.

985
01:05:22,799 --> 01:05:23,280
That's come up.

986
01:05:23,280 --> 01:05:26,440
That's like finally starting to like energy efficiency and then

987
01:05:26,440 --> 01:05:27,840
performance, like, Oh wow.

988
01:05:27,840 --> 01:05:30,640
It got up there, but it's really difficult to learn with all the

989
01:05:30,640 --> 01:05:34,280
constructs of borrow checking and everything else and components, et

990
01:05:34,280 --> 01:05:34,599
cetera.

991
01:05:35,119 --> 01:05:39,080
Um, I'm seeing more Rust projects come into the ecosystem.

992
01:05:39,119 --> 01:05:42,559
I'm also seeing a lot more Python because of AI and that ecosystem as well.

993
01:05:43,080 --> 01:05:48,039
Um, when anecdotally I've taken a look at, there's some nice, um, like code

994
01:05:48,039 --> 01:05:51,039
quality tools that you can use to check open source repositories.

995
01:05:51,039 --> 01:05:55,880
And, um, and typically what I've seen is like, when you're looking at TypeScript

996
01:05:55,880 --> 01:06:00,320
and Python, usually the code quality is a lot lower, um, with known problems

997
01:06:00,320 --> 01:06:04,719
and, and just ways that you write code and that vernacular, that, um, uh,

998
01:06:04,719 --> 01:06:07,919
idi, idi, idiomatic language concept.

999
01:06:08,559 --> 01:06:12,280
Um, but with Go things have been really solid on that front.

1000
01:06:12,280 --> 01:06:14,880
Rust, you see some good competency there too.

1001
01:06:15,280 --> 01:06:16,679
I think it's good for right now.

1002
01:06:16,719 --> 01:06:19,919
It's, it's really down to readability and does this work the way it should?

1003
01:06:20,200 --> 01:06:23,159
If there's a big performance thing or something like that, then that would,

1004
01:06:23,280 --> 01:06:27,320
that would freak me out, but that if you're using too many dependencies and

1005
01:06:27,320 --> 01:06:30,479
not really watching that, and that balloons up, you know, same kind of thing

1006
01:06:30,479 --> 01:06:32,760
with node, uh, that's also scares me.

1007
01:06:32,760 --> 01:06:33,960
And I'm like, how many packages?

1008
01:06:34,000 --> 01:06:34,679
Oh my gosh.

1009
01:06:35,000 --> 01:06:38,119
You know, it takes 30 minutes just to do your NPM install.

1010
01:06:38,640 --> 01:06:41,840
Um, but, uh, I, I think good for now.

1011
01:06:41,880 --> 01:06:46,719
I am curious to see what shifts over to, I, I've been big in like Ruby, Go, PHP,

1012
01:06:46,719 --> 01:06:51,039
and Visual Basics, so clearly I've picked winners and it's like I never

1013
01:06:51,039 --> 01:06:57,840
had a hard day in my life, but, uh, um, uh, like Elixir is cool.

1014
01:06:57,840 --> 01:07:03,000
Like you start to see some things, but it's kind of, uh, choosing the right

1015
01:07:03,000 --> 01:07:05,959
programming language when it has its day in the sun, when you have the community

1016
01:07:05,959 --> 01:07:09,239
there, I think it's magic when you have that, you have a lot of the cloud

1017
01:07:09,239 --> 01:07:10,920
native community there right now.

1018
01:07:11,000 --> 01:07:15,319
Uh, but I do think it'll shift a little bit into Rust and, and I'm curious to

1019
01:07:15,359 --> 01:07:17,239
see what else comes out of that mix too.

1020
01:07:17,239 --> 01:07:19,000
You have like Mojo on top of Python.

1021
01:07:19,199 --> 01:07:23,280
Maybe that will up-level the language a little bit, but, so yeah, all that very

1022
01:07:23,280 --> 01:07:25,839
long roundabout way to say like, yeah, I think it's magic right now.

1023
01:07:26,839 --> 01:07:28,280
Please let, let it go.

1024
01:07:28,359 --> 01:07:28,920
Let it go now.

1025
01:07:28,920 --> 01:07:29,119
Yeah.

1026
01:07:29,319 --> 01:07:31,719
No, like, just like the song.

1027
01:07:34,640 --> 01:07:41,400
Um, I think that we are now at the point where you cannot just use the tools

1028
01:07:41,760 --> 01:07:49,959
that at least at my level, I know, well, I tried to learn Go a few times and it's

1029
01:07:49,959 --> 01:07:52,520
a simple language, but it's not easy.

1030
01:07:52,640 --> 01:07:53,079
Right.

1031
01:07:53,359 --> 01:07:59,319
Because yeah, the, the, the constructs and all the stuff that it has in, it's not

1032
01:07:59,319 --> 01:08:05,920
really hard, but when you go to real, if you open up, I don't know, something

1033
01:08:06,400 --> 01:08:12,199
code available or open source and just start reading stuff, um, then it, it gets

1034
01:08:12,199 --> 01:08:17,079
a bit tricky, so, um, I think that, yeah, it's, if we want to grow, we need to

1035
01:08:17,079 --> 01:08:22,160
learn, um, the tools that we are using and also the languages that they're written

1036
01:08:22,160 --> 01:08:22,479
in.

1037
01:08:23,199 --> 01:08:27,560
Um, so yeah, I'm now on, on that path.

1038
01:08:27,880 --> 01:08:34,280
Uh, so yeah, probably I will, I will have to, uh, get someone to help me out

1039
01:08:34,280 --> 01:08:37,800
because you, you get the basics, but then there are patterns that are not that

1040
01:08:37,800 --> 01:08:38,280
simple.

1041
01:08:38,280 --> 01:08:38,760
Right.

1042
01:08:39,319 --> 01:08:40,920
Um, so yeah.

1043
01:08:41,000 --> 01:08:47,160
Um, and I think Go is a good language, especially for this underlying tooling.

1044
01:08:47,400 --> 01:08:52,359
If we are talking at the projects in the Cloud Native Foundation, I think it's

1045
01:08:52,359 --> 01:08:54,040
probably a really good choice.

1046
01:08:54,479 --> 01:09:01,280
Um, I'm getting maybe a bit skeptical if that's, if you, if your app needs to be

1047
01:09:01,319 --> 01:09:07,719
written in Go when you start, if you're not like, uh, the 20% of big companies in

1048
01:09:07,719 --> 01:09:12,560
the world that will scale and be distributed, then maybe you can do back

1049
01:09:12,560 --> 01:09:20,760
end templating and some Django, Elixir, Phoenix, Ruby, and you can support your

1050
01:09:20,800 --> 01:09:22,920
local business by local.

1051
01:09:22,920 --> 01:09:25,839
I mean, 2 million Slovenian big company, right?

1052
01:09:26,280 --> 01:09:32,439
Because we have different standards and you might not want to break your head with

1053
01:09:32,560 --> 01:09:37,040
ptrace and tracing and how garbage collection in Go and why we are memory

1054
01:09:37,040 --> 01:09:37,439
leaking.

1055
01:09:37,439 --> 01:09:37,800
Right.

1056
01:09:38,640 --> 01:09:40,119
Um, yeah.

1057
01:09:40,160 --> 01:09:44,640
Uh, but we, and Otto, we work together.

1058
01:09:44,640 --> 01:09:50,439
So, uh, Otto was my, uh, manager and sometimes I ask him, should I do this or

1059
01:09:50,439 --> 01:09:51,439
should I do that?

1060
01:09:51,680 --> 01:09:57,560
Um, because I was a bit, well, of course, unsure and you want to have people's

1061
01:09:57,560 --> 01:09:58,079
opinions.

1062
01:09:58,079 --> 01:09:59,680
And he said, yes.

1063
01:10:00,160 --> 01:10:03,920
So probably you, I think it's a must.

1064
01:10:03,920 --> 01:10:05,199
You need to know some Python.

1065
01:10:05,199 --> 01:10:10,800
You need to know some Go, even if you are not working, even if you are using Java,

1066
01:10:10,800 --> 01:10:16,800
if you use Kubernetes, look, if there is a simple operator, you might want to skim

1067
01:10:16,800 --> 01:10:19,680
through the code and have a basic understanding what it does.

1068
01:10:20,000 --> 01:10:24,560
And then you see some, that there are some queue length that is parsing some YAML and

1069
01:10:24,560 --> 01:10:26,239
maybe that's also useful for you.

1070
01:10:26,239 --> 01:10:27,760
So I would say yes.

1071
01:10:27,760 --> 01:10:28,319
So learn.

1072
01:10:28,880 --> 01:10:35,680
And when we come, when we do like a smooth transition to learning, uh, Cloud Native

1073
01:10:35,680 --> 01:10:38,959
Foundation also have certifications, right?

1074
01:10:39,359 --> 01:10:40,880
What are the most popular ones?

1075
01:10:40,880 --> 01:10:42,000
What do you offer?

1076
01:10:42,479 --> 01:10:44,959
I think KCA, KCAD.

1077
01:10:44,959 --> 01:10:46,239
I think it's KSA.

1078
01:10:46,239 --> 01:10:47,680
That's not a secret organization.

1079
01:10:47,680 --> 01:10:49,280
It's Kubernetes Security Administrator.

1080
01:10:49,680 --> 01:10:55,920
Um, it's not like NSA, uh, but, um, those are the most popular right now just because

1081
01:10:55,920 --> 01:11:00,319
they're it's Kubernetes and it culminates a lot of things, whether you're developing

1082
01:11:00,319 --> 01:11:04,239
on top of it as a developer, whether you just want to be more infrastructure minded and

1083
01:11:04,239 --> 01:11:05,680
work on that side of things.

1084
01:11:06,239 --> 01:11:11,119
Um, we have a kubestronaut program where if you have all, if you get all the five existing

1085
01:11:11,119 --> 01:11:15,119
certifications right now, we send you a jacket and we put a spotlight on you, you get in

1086
01:11:15,119 --> 01:11:18,640
a blog post and like, I think there's over 500 kubestronauts so far.

1087
01:11:18,640 --> 01:11:22,479
It's been a fun way to gamify, um, the training inserts.

1088
01:11:22,479 --> 01:11:27,119
We had one discussion with, uh, uh, Andraž and he was like, this guy is kubestronaut.

1089
01:11:27,119 --> 01:11:27,839
I was like, what?

1090
01:11:28,640 --> 01:11:29,040
Yeah.

1091
01:11:29,040 --> 01:11:30,319
And he was like, no, no, no.

1092
01:11:30,319 --> 01:11:31,680
This is, no, no, no.

1093
01:11:31,680 --> 01:11:33,199
He was like, this is elite.

1094
01:11:33,199 --> 01:11:33,520
Yeah.

1095
01:11:33,520 --> 01:11:34,239
He's like elite.

1096
01:11:34,239 --> 01:11:35,199
There's like two guys.

1097
01:11:35,199 --> 01:11:37,839
Uh, something four or four.

1098
01:11:37,839 --> 01:11:39,439
He's like, he's elite.

1099
01:11:39,439 --> 01:11:40,959
I'm like, we are a big community.

1100
01:11:40,959 --> 01:11:41,760
Yeah.

1101
01:11:41,760 --> 01:11:42,719
We know everyone.

1102
01:11:42,719 --> 01:11:45,839
We've, we've been, we've been talking about potentially doing a helmet too.

1103
01:11:45,839 --> 01:11:47,199
So you may see that happen.

1104
01:11:48,160 --> 01:11:51,520
You need to have five certificates to, to be kubestron, right?

1105
01:11:51,520 --> 01:11:52,000
Yeah.

1106
01:11:52,000 --> 01:11:52,479
Okay.

1107
01:11:52,479 --> 01:11:55,760
They're hard to get, but like, what, what do you, what do you test for?

1108
01:11:55,760 --> 01:11:56,959
Like, how does it work?

1109
01:11:56,959 --> 01:11:57,599
I'd say so.

1110
01:11:57,599 --> 01:12:01,280
The, there's like the security one I'd say is like, that's pretty hard, you know, with

1111
01:12:01,280 --> 01:12:02,800
anything, if you know the answer, it's easy.

1112
01:12:04,239 --> 01:12:06,959
I know that, um, I'd say that was pretty intense.

1113
01:12:06,959 --> 01:12:11,920
I'd say the KCA, um, I'd say that for me personally, it was a little bit easier just

1114
01:12:11,920 --> 01:12:14,000
cause I knew Kubernetes from that side.

1115
01:12:14,079 --> 01:12:18,640
Um, the developer, uh, one was the one that was, that had me thinking, cause you were

1116
01:12:18,640 --> 01:12:22,400
delving deeper into and working on things like pizza controllers and, you know, those

1117
01:12:22,400 --> 01:12:23,920
APIs and what that looked like.

1118
01:12:23,920 --> 01:12:27,359
But, um, yeah, security is always going to be a pretty hard one.

1119
01:12:27,359 --> 01:12:33,199
And then we just changed the, uh, uh, lifetime of those certifications too, from three years

1120
01:12:33,199 --> 01:12:36,640
to two, just because so much changes within that time period too.

1121
01:12:36,640 --> 01:12:37,680
It's not a good measure.

1122
01:12:37,680 --> 01:12:41,760
If it's like three years aged out, that's like what?

1123
01:12:41,760 --> 01:12:44,400
12 Kubernetes, you know, releases.

1124
01:12:44,400 --> 01:12:44,959
That's a lot.

1125
01:12:45,520 --> 01:12:53,599
Um, but, uh, or nine, nine now, but, um, yeah, it's, I really like the, I do like that focus

1126
01:12:53,599 --> 01:12:57,439
on education then seeing where all of these people are learning across the CNCF.

1127
01:12:58,239 --> 01:12:58,959
Yeah.

1128
01:12:58,959 --> 01:13:03,199
I may, may I please like, uh, have the final question then?

1129
01:13:03,760 --> 01:13:04,800
Are you fine with that?

1130
01:13:04,800 --> 01:13:06,400
And then we have some pizza and some beer.

1131
01:13:06,400 --> 01:13:10,640
Um, okay.

1132
01:13:10,640 --> 01:13:15,520
We know that if you want to become a senior in this space, you become QB astronaut and

1133
01:13:15,520 --> 01:13:16,880
that's kind of like a certification.

1134
01:13:16,880 --> 01:13:17,599
You should do it.

1135
01:13:18,239 --> 01:13:20,880
But I have a question for both of you guys.

1136
01:13:20,880 --> 01:13:28,560
Um, what would be a good advice for somebody that has seen some of these things, wants

1137
01:13:28,560 --> 01:13:35,599
to go into ops, uh, SRA, uh, wants to work with Kubernetes, wants to explore this stuff,

1138
01:13:35,599 --> 01:13:39,359
wants to become more familiar with the stuff, but it's a complete junior.

1139
01:13:39,359 --> 01:13:46,880
Uh, so, you know, can you give some advice to like very, very beginners or let's say

1140
01:13:46,880 --> 01:13:47,680
it like that.

1141
01:13:47,680 --> 01:13:49,599
Can you give me some, something there, please?

1142
01:13:49,599 --> 01:13:59,199
So that's, let that be a kind of like, uh, yeah, my advice would be like, try and learn

1143
01:13:59,920 --> 01:14:03,760
everything that is popular or that you find useful.

1144
01:14:03,760 --> 01:14:04,319
Right.

1145
01:14:04,319 --> 01:14:10,959
So build it in your Dell clusters or in your free time, or even try to ask your manager

1146
01:14:10,959 --> 01:14:17,280
if you can play around with some technology that you're, you might not even adopt just

1147
01:14:17,280 --> 01:14:22,079
to explore a bit, because as Tyler mentioned, you will get some foundations, right?

1148
01:14:22,079 --> 01:14:23,680
There are patterns that repeat.

1149
01:14:23,680 --> 01:14:30,959
Um, but then especially if you're folk, if you're folk in the past, if you're building

1150
01:14:30,959 --> 01:14:36,880
features or shipping a lot of code and adding value for customers with creating new things,

1151
01:14:37,520 --> 01:14:43,280
um, all also, if you move to ops or SRE, try to be humble.

1152
01:14:43,280 --> 01:14:50,239
Um, the most important thing is to provide value stability, um, and not to write a lot

1153
01:14:50,239 --> 01:14:53,199
of custom things, custom code, right?

1154
01:14:53,199 --> 01:14:59,839
Um, because sometimes me, we maybe do too much of, I don't know.

1155
01:15:00,000 --> 01:15:06,720
bash? Well, you can't escape bash, right? And you should probably be really good at it, but

1156
01:15:06,720 --> 01:15:12,400
you don't maybe want to write like a simple Go CLI that takes some templating and then does

1157
01:15:12,400 --> 01:15:17,840
something so another system that is commonly available can pick it up. I would suggest that

1158
01:15:18,879 --> 01:15:27,280
try to write as minimal amount of code as possible to achieve the majority of things, because, well,

1159
01:15:27,280 --> 01:15:34,160
if you're working especially for, I don't know, international customers or growing customers,

1160
01:15:34,160 --> 01:15:42,880
you need to understand that teams will grow. You will be at the company for a longer time,

1161
01:15:42,880 --> 01:15:47,200
but the new folks that will come in, they will know the basic stuff or

1162
01:15:47,200 --> 01:15:58,480
for stuff that is six months old or older, and there is constantly new stuff coming in from the

1163
01:15:58,480 --> 01:16:05,680
community, and maybe you want to avoid your custom stuff, right? And always focus on the customer,

1164
01:16:05,680 --> 01:16:12,239
right? The most important thing is to provide value and to make everyone happy and provide

1165
01:16:12,239 --> 01:16:18,480
them a good experience, and yeah, you can hack then at hackathons and stuff, especially if you're

1166
01:16:18,480 --> 01:16:25,519
coming from a role where you are the featured guy, and then when you move to ops, it's

1167
01:16:25,519 --> 01:16:28,959
a bit of a different story, but don't worry, it's still fun and exciting.

1168
01:16:30,559 --> 01:16:36,480
I really like that, and you kind of said that too with your answer about Go. It's reminding me of,

1169
01:16:36,480 --> 01:16:42,239
there's, who is it? I think it's PragProg, the publisher. They have seven languages in seven

1170
01:16:42,239 --> 01:16:47,519
days and those kinds of things, and I really do urge people to go and think outside the box.

1171
01:16:47,519 --> 01:16:53,040
When you're learning, learning shouldn't necessarily be easy. Think about physically

1172
01:16:53,040 --> 01:16:56,320
when you're working out, you're sweating. If you're not doing that and you're just going

1173
01:16:56,320 --> 01:17:00,639
through exercises, whether it be exorcism or code kata or something like that,

1174
01:17:01,279 --> 01:17:05,599
if it's not sticking and there's not a lot of effort there, it's going to be a lot harder

1175
01:17:05,599 --> 01:17:09,119
to remember that, right? You don't remember the easy things, you remember the hard things,

1176
01:17:09,119 --> 01:17:16,160
for better or for worse. That's good learning, and so that's something to take with you as you

1177
01:17:16,160 --> 01:17:20,080
go through when you're choosing what you want to get into, you're just beginning.

1178
01:17:20,960 --> 01:17:26,080
I work with a lot of people and they say, oh, I want to do open source. I'm like, cool. Let's get

1179
01:17:26,080 --> 01:17:30,320
more specific. What do you like? Do you like security? Do you like a specific project? Do you

1180
01:17:30,320 --> 01:17:36,399
like the community? What are the aspects that are driving you towards, you just said open source,

1181
01:17:36,399 --> 01:17:41,839
is that something you heard from a community that you're in? Really understanding the intent

1182
01:17:41,839 --> 01:17:47,679
and the motivation behind that is incredibly important. Sitting there and kind of working

1183
01:17:47,679 --> 01:17:52,320
through that yourself will help you. It'll save you years of time. I can guarantee that.

1184
01:17:53,360 --> 01:17:56,720
What do you want to be when you grow up? Think about that. I'm still doing that.

1185
01:17:57,279 --> 01:18:02,720
And that really helps illuminate, okay, cool, I like security things, or I like

1186
01:18:03,600 --> 01:18:08,479
working with scaling applications or containerizing them, or you just get a better

1187
01:18:08,479 --> 01:18:13,360
sense about the ecosystem on that front. That is where the landscape is helpful, because then you

1188
01:18:13,360 --> 01:18:18,320
can take a look and say, okay, I like these things. We do have a textual representation of the landscape,

1189
01:18:18,320 --> 01:18:24,639
too, the landscape guide, and then you can read through what each of those sections looks like

1190
01:18:24,639 --> 01:18:27,759
for people that are struggling or trying to make sense of what's going on.

1191
01:18:29,440 --> 01:18:35,279
And then, like was said, too, I think it's great to dive into what's popular, take a look at some

1192
01:18:35,279 --> 01:18:40,880
tutorials and things like that. You'll be surprised at the amount of tools that are at your disposal

1193
01:18:40,880 --> 01:18:46,240
as well. You don't need to run a multi-billion dollar corporation or something like that.

1194
01:18:46,240 --> 01:18:52,399
You can load test it locally with tools like Hay and everything else, too, and simulate what some

1195
01:18:52,399 --> 01:18:56,479
of these things look like if you want that kind of experience, too. So there's a lot of creative

1196
01:18:56,479 --> 01:19:02,960
ways to think about how to get started and then situations that you put yourself in. But I'd say

1197
01:19:02,960 --> 01:19:08,000
make it something that's fun. Don't just go through the motions. Try to make a real-world

1198
01:19:08,000 --> 01:19:12,160
project, too, if you can, if you're just getting started with something. There's nothing more

1199
01:19:12,160 --> 01:19:16,959
magical than writing that first CLI that pulls from an API and you're like, oh, the weather is

1200
01:19:16,959 --> 01:19:22,640
22 degrees. There's a magic in that and being able to iterate and try new things, too. So make

1201
01:19:22,640 --> 01:19:28,559
it magic and make it something that you really feel passionately about. Beautiful. I guess

1202
01:19:29,679 --> 01:19:34,239
let's wrap on that, I guess. I would like to thank you, Taylor, again for taking the time.

1203
01:19:34,880 --> 01:19:39,200
I'm looking forward to seeing your demo as well. Andras, thank you for your time as well.

1204
01:19:40,399 --> 01:19:46,079
I would like to encourage everybody to like and subscribe. Sharing this stuff helps a lot

1205
01:19:46,079 --> 01:19:51,760
with the promotion. And I would like to thank our sponsors, Kaldi 3FS and Human Frog, for

1206
01:19:51,760 --> 01:19:56,720
supporting us. And thank you for Patreons and everybody who has taken the time to listen to

1207
01:19:56,720 --> 01:20:05,920
this. Until next time. Thank you. Thank you. Enjoy.